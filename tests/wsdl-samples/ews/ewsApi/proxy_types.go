// Code generated by gowsdlsoap DO NOT EDIT.

package ewsApi

import (
	"encoding/xml"
	"github.com/go-aegian/gowsdlsoap/builder/xsd"
)

// Surfaces the various logon types that are supported for conversion

type SpecialLogonTypeType string

const (
	SpecialLogonTypeTypeAdmin SpecialLogonTypeType = "Admin"

	SpecialLogonTypeTypeSystemService SpecialLogonTypeType = "SystemService"
)

type ExchangeVersionType string

const (
	ExchangeVersionTypeExchange2007 ExchangeVersionType = "Exchange2007"

	ExchangeVersionTypeExchange2007_SP1 ExchangeVersionType = "Exchange2007_SP1"

	ExchangeVersionTypeExchange2009 ExchangeVersionType = "Exchange2009"

	ExchangeVersionTypeExchange2010 ExchangeVersionType = "Exchange2010"

	ExchangeVersionTypeExchange2010_SP1 ExchangeVersionType = "Exchange2010_SP1"

	ExchangeVersionTypeExchange2010_SP2 ExchangeVersionType = "Exchange2010_SP2"

	ExchangeVersionTypeExchange2012 ExchangeVersionType = "Exchange2012"

	ExchangeVersionTypeExchange2013 ExchangeVersionType = "Exchange2013"

	ExchangeVersionTypeExchange2013_SP1 ExchangeVersionType = "Exchange2013_SP1"

	ExchangeVersionTypeExchange2015 ExchangeVersionType = "Exchange2015"

	ExchangeVersionTypeExchange2016 ExchangeVersionType = "Exchange2016"

	ExchangeVersionTypeV2015_10_05 ExchangeVersionType = "V2015_10_05"

	ExchangeVersionTypeV2016_01_06 ExchangeVersionType = "V2016_01_06"

	ExchangeVersionTypeV2016_04_13 ExchangeVersionType = "V2016_04_13"

	ExchangeVersionTypeV2016_07_13 ExchangeVersionType = "V2016_07_13"

	ExchangeVersionTypeV2016_10_10 ExchangeVersionType = "V2016_10_10"

	ExchangeVersionTypeV2017_01_07 ExchangeVersionType = "V2017_01_07"

	ExchangeVersionTypeV2017_04_14 ExchangeVersionType = "V2017_04_14"

	ExchangeVersionTypeV2017_07_11 ExchangeVersionType = "V2017_07_11"
)

// Precision for returned DateTime values

type DateTimePrecisionType string

const (
	DateTimePrecisionTypeSeconds DateTimePrecisionType = "Seconds"

	DateTimePrecisionTypeMilliseconds DateTimePrecisionType = "Milliseconds"
)

type NonEmptyStringType string

type MailboxTypeType string

const (
	MailboxTypeTypeUnknown MailboxTypeType = "Unknown"

	MailboxTypeTypeOneOff MailboxTypeType = "OneOff"

	MailboxTypeTypeMailbox MailboxTypeType = "Mailbox"

	MailboxTypeTypePublicDL MailboxTypeType = "PublicDL"

	MailboxTypeTypePrivateDL MailboxTypeType = "PrivateDL"

	MailboxTypeTypeContact MailboxTypeType = "Contact"

	MailboxTypeTypePublicFolder MailboxTypeType = "PublicFolder"

	MailboxTypeTypeGroupMailbox MailboxTypeType = "GroupMailbox"

	MailboxTypeTypeImplicitContact MailboxTypeType = "ImplicitContact"
)

type ActivityDomainType string

const (
	ActivityDomainTypeUnknown ActivityDomainType = "Unknown"

	ActivityDomainTypePersonal ActivityDomainType = "Personal"

	ActivityDomainTypeWork ActivityDomainType = "Work"
)

type ReminderGroupType string

const (
	ReminderGroupTypeCalendar ReminderGroupType = "Calendar"

	ReminderGroupTypeTask ReminderGroupType = "Task"
)

type UnindexedFieldURIType string

const (
	UnindexedFieldURITypeFolderFolderId UnindexedFieldURIType = "folder:FolderId"

	UnindexedFieldURITypeFolderParentFolderId UnindexedFieldURIType = "folder:ParentFolderId"

	UnindexedFieldURITypeFolderDisplayName UnindexedFieldURIType = "folder:DisplayName"

	UnindexedFieldURITypeFolderUnreadCount UnindexedFieldURIType = "folder:UnreadCount"

	UnindexedFieldURITypeFolderTotalCount UnindexedFieldURIType = "folder:TotalCount"

	UnindexedFieldURITypeFolderChildFolderCount UnindexedFieldURIType = "folder:ChildFolderCount"

	UnindexedFieldURITypeFolderFolderClass UnindexedFieldURIType = "folder:FolderClass"

	UnindexedFieldURITypeFolderSearchParameters UnindexedFieldURIType = "folder:SearchParameters"

	UnindexedFieldURITypeFolderManagedFolderInformation UnindexedFieldURIType = "folder:ManagedFolderInformation"

	UnindexedFieldURITypeFolderPermissionSet UnindexedFieldURIType = "folder:PermissionSet"

	UnindexedFieldURITypeFolderEffectiveRights UnindexedFieldURIType = "folder:EffectiveRights"

	UnindexedFieldURITypeFolderSharingEffectiveRights UnindexedFieldURIType = "folder:SharingEffectiveRights"

	UnindexedFieldURITypeFolderDistinguishedFolderId UnindexedFieldURIType = "folder:DistinguishedFolderId"

	UnindexedFieldURITypeFolderPolicyTag UnindexedFieldURIType = "folder:PolicyTag"

	UnindexedFieldURITypeFolderArchiveTag UnindexedFieldURIType = "folder:ArchiveTag"

	UnindexedFieldURITypeFolderReplicaList UnindexedFieldURIType = "folder:ReplicaList"

	UnindexedFieldURITypeItemItemId UnindexedFieldURIType = "item:ItemId"

	UnindexedFieldURITypeItemParentFolderId UnindexedFieldURIType = "item:ParentFolderId"

	UnindexedFieldURITypeItemItemClass UnindexedFieldURIType = "item:ItemClass"

	UnindexedFieldURITypeItemMimeContent UnindexedFieldURIType = "item:MimeContent"

	UnindexedFieldURITypeItemAttachments UnindexedFieldURIType = "item:Attachments"

	UnindexedFieldURITypeItemSubject UnindexedFieldURIType = "item:Subject"

	UnindexedFieldURITypeItemDateTimeReceived UnindexedFieldURIType = "item:DateTimeReceived"

	UnindexedFieldURITypeItemSize UnindexedFieldURIType = "item:Size"

	UnindexedFieldURITypeItemCategories UnindexedFieldURIType = "item:Categories"

	UnindexedFieldURITypeItemHasAttachments UnindexedFieldURIType = "item:HasAttachments"

	UnindexedFieldURITypeItemImportance UnindexedFieldURIType = "item:Importance"

	UnindexedFieldURITypeItemInReplyTo UnindexedFieldURIType = "item:InReplyTo"

	UnindexedFieldURITypeItemInternetMessageHeaders UnindexedFieldURIType = "item:InternetMessageHeaders"

	UnindexedFieldURITypeItemIsAssociated UnindexedFieldURIType = "item:IsAssociated"

	UnindexedFieldURITypeItemIsDraft UnindexedFieldURIType = "item:IsDraft"

	UnindexedFieldURITypeItemIsFromMe UnindexedFieldURIType = "item:IsFromMe"

	UnindexedFieldURITypeItemIsResend UnindexedFieldURIType = "item:IsResend"

	UnindexedFieldURITypeItemIsSubmitted UnindexedFieldURIType = "item:IsSubmitted"

	UnindexedFieldURITypeItemIsUnmodified UnindexedFieldURIType = "item:IsUnmodified"

	UnindexedFieldURITypeItemDateTimeSent UnindexedFieldURIType = "item:DateTimeSent"

	UnindexedFieldURITypeItemDateTimeCreated UnindexedFieldURIType = "item:DateTimeCreated"

	UnindexedFieldURITypeItemBody UnindexedFieldURIType = "item:Body"

	UnindexedFieldURITypeItemResponseObjects UnindexedFieldURIType = "item:ResponseObjects"

	UnindexedFieldURITypeItemSensitivity UnindexedFieldURIType = "item:Sensitivity"

	UnindexedFieldURITypeItemReminderDueBy UnindexedFieldURIType = "item:ReminderDueBy"

	UnindexedFieldURITypeItemReminderIsSet UnindexedFieldURIType = "item:ReminderIsSet"

	UnindexedFieldURITypeItemReminderNextTime UnindexedFieldURIType = "item:ReminderNextTime"

	UnindexedFieldURITypeItemReminderMinutesBeforeStart UnindexedFieldURIType = "item:ReminderMinutesBeforeStart"

	UnindexedFieldURITypeItemDisplayTo UnindexedFieldURIType = "item:DisplayTo"

	UnindexedFieldURITypeItemDisplayCc UnindexedFieldURIType = "item:DisplayCc"

	UnindexedFieldURITypeItemDisplayBcc UnindexedFieldURIType = "item:DisplayBcc"

	UnindexedFieldURITypeItemCulture UnindexedFieldURIType = "item:Culture"

	UnindexedFieldURITypeItemEffectiveRights UnindexedFieldURIType = "item:EffectiveRights"

	UnindexedFieldURITypeItemLastModifiedName UnindexedFieldURIType = "item:LastModifiedName"

	UnindexedFieldURITypeItemLastModifiedTime UnindexedFieldURIType = "item:LastModifiedTime"

	UnindexedFieldURITypeItemConversationId UnindexedFieldURIType = "item:ConversationId"

	UnindexedFieldURITypeItemUniqueBody UnindexedFieldURIType = "item:UniqueBody"

	UnindexedFieldURITypeItemFlag UnindexedFieldURIType = "item:Flag"

	UnindexedFieldURITypeItemStoreEntryId UnindexedFieldURIType = "item:StoreEntryId"

	UnindexedFieldURITypeItemInstanceKey UnindexedFieldURIType = "item:InstanceKey"

	UnindexedFieldURITypeItemNormalizedBody UnindexedFieldURIType = "item:NormalizedBody"

	UnindexedFieldURITypeItemEntityExtractionResult UnindexedFieldURIType = "item:EntityExtractionResult"

	UnindexedFieldURITypeItemPolicyTag UnindexedFieldURIType = "item:PolicyTag"

	UnindexedFieldURITypeItemArchiveTag UnindexedFieldURIType = "item:ArchiveTag"

	UnindexedFieldURITypeItemRetentionDate UnindexedFieldURIType = "item:RetentionDate"

	UnindexedFieldURITypeItemPreview UnindexedFieldURIType = "item:Preview"

	UnindexedFieldURITypeItemPredictedActionReasons UnindexedFieldURIType = "item:PredictedActionReasons"

	UnindexedFieldURITypeItemIsClutter UnindexedFieldURIType = "item:IsClutter"

	UnindexedFieldURITypeItemRightsManagementLicenseData UnindexedFieldURIType = "item:RightsManagementLicenseData"

	UnindexedFieldURITypeItemBlockStatus UnindexedFieldURIType = "item:BlockStatus"

	UnindexedFieldURITypeItemHasBlockedImages UnindexedFieldURIType = "item:HasBlockedImages"

	UnindexedFieldURITypeItemWebClientReadFormQueryString UnindexedFieldURIType = "item:WebClientReadFormQueryString"

	UnindexedFieldURITypeItemWebClientEditFormQueryString UnindexedFieldURIType = "item:WebClientEditFormQueryString"

	UnindexedFieldURITypeItemTextBody UnindexedFieldURIType = "item:TextBody"

	UnindexedFieldURITypeItemIconIndex UnindexedFieldURIType = "item:IconIndex"

	UnindexedFieldURITypeItemMimeContentUTF8 UnindexedFieldURIType = "item:MimeContentUTF8"

	UnindexedFieldURITypeItemMentions UnindexedFieldURIType = "item:Mentions"

	UnindexedFieldURITypeItemMentionedMe UnindexedFieldURIType = "item:MentionedMe"

	UnindexedFieldURITypeItemMentionsPreview UnindexedFieldURIType = "item:MentionsPreview"

	UnindexedFieldURITypeItemMentionsEx UnindexedFieldURIType = "item:MentionsEx"

	UnindexedFieldURITypeItemHashtags UnindexedFieldURIType = "item:Hashtags"

	UnindexedFieldURITypeItemAppliedHashtags UnindexedFieldURIType = "item:AppliedHashtags"

	UnindexedFieldURITypeItemAppliedHashtagsPreview UnindexedFieldURIType = "item:AppliedHashtagsPreview"

	UnindexedFieldURITypeItemLikes UnindexedFieldURIType = "item:Likes"

	UnindexedFieldURITypeItemLikesPreview UnindexedFieldURIType = "item:LikesPreview"

	UnindexedFieldURITypeItemPendingSocialActivityTagIds UnindexedFieldURIType = "item:PendingSocialActivityTagIds"

	UnindexedFieldURITypeItemAtAllMention UnindexedFieldURIType = "item:AtAllMention"

	UnindexedFieldURITypeItemCanDelete UnindexedFieldURIType = "item:CanDelete"

	UnindexedFieldURITypeItemInferenceClassification UnindexedFieldURIType = "item:InferenceClassification"

	UnindexedFieldURITypeItemFirstBody UnindexedFieldURIType = "item:FirstBody"

	UnindexedFieldURITypeMessageConversationIndex UnindexedFieldURIType = "message:ConversationIndex"

	UnindexedFieldURITypeMessageConversationTopic UnindexedFieldURIType = "message:ConversationTopic"

	UnindexedFieldURITypeMessageInternetMessageId UnindexedFieldURIType = "message:InternetMessageId"

	UnindexedFieldURITypeMessageIsRead UnindexedFieldURIType = "message:IsRead"

	UnindexedFieldURITypeMessageIsResponseRequested UnindexedFieldURIType = "message:IsResponseRequested"

	UnindexedFieldURITypeMessageIsReadReceiptRequested UnindexedFieldURIType = "message:IsReadReceiptRequested"

	UnindexedFieldURITypeMessageIsDeliveryReceiptRequested UnindexedFieldURIType = "message:IsDeliveryReceiptRequested"

	UnindexedFieldURITypeMessageReceivedBy UnindexedFieldURIType = "message:ReceivedBy"

	UnindexedFieldURITypeMessageReceivedRepresenting UnindexedFieldURIType = "message:ReceivedRepresenting"

	UnindexedFieldURITypeMessageReferences UnindexedFieldURIType = "message:References"

	UnindexedFieldURITypeMessageReplyTo UnindexedFieldURIType = "message:ReplyTo"

	UnindexedFieldURITypeMessageFrom UnindexedFieldURIType = "message:From"

	UnindexedFieldURITypeMessageSender UnindexedFieldURIType = "message:Sender"

	UnindexedFieldURITypeMessageToRecipients UnindexedFieldURIType = "message:ToRecipients"

	UnindexedFieldURITypeMessageCcRecipients UnindexedFieldURIType = "message:CcRecipients"

	UnindexedFieldURITypeMessageBccRecipients UnindexedFieldURIType = "message:BccRecipients"

	UnindexedFieldURITypeMessageApprovalRequestData UnindexedFieldURIType = "message:ApprovalRequestData"

	UnindexedFieldURITypeMessageVotingInformation UnindexedFieldURIType = "message:VotingInformation"

	UnindexedFieldURITypeMessageReminderMessageData UnindexedFieldURIType = "message:ReminderMessageData"

	UnindexedFieldURITypeMessagePublishedCalendarItemIcs UnindexedFieldURIType = "message:PublishedCalendarItemIcs"

	UnindexedFieldURITypeMessagePublishedCalendarItemName UnindexedFieldURIType = "message:PublishedCalendarItemName"

	UnindexedFieldURITypeMessageMessageSafety UnindexedFieldURIType = "message:MessageSafety"

	UnindexedFieldURITypeSharingMessageSharingMessageAction UnindexedFieldURIType = "sharingMessage:SharingMessageAction"

	UnindexedFieldURITypeMeetingAssociatedCalendarItemId UnindexedFieldURIType = "meeting:AssociatedCalendarItemId"

	UnindexedFieldURITypeMeetingIsDelegated UnindexedFieldURIType = "meeting:IsDelegated"

	UnindexedFieldURITypeMeetingIsOutOfDate UnindexedFieldURIType = "meeting:IsOutOfDate"

	UnindexedFieldURITypeMeetingHasBeenProcessed UnindexedFieldURIType = "meeting:HasBeenProcessed"

	UnindexedFieldURITypeMeetingResponseType UnindexedFieldURIType = "meeting:ResponseType"

	UnindexedFieldURITypeMeetingProposedStart UnindexedFieldURIType = "meeting:ProposedStart"

	UnindexedFieldURITypeMeetingProposedEnd UnindexedFieldURIType = "meeting:ProposedEnd"

	UnindexedFieldURITypeMeetingDoNotForwardMeeting UnindexedFieldURIType = "meeting:DoNotForwardMeeting"

	UnindexedFieldURITypeMeetingRequestMeetingRequestType UnindexedFieldURIType = "meetingRequest:MeetingRequestType"

	UnindexedFieldURITypeMeetingRequestIntendedFreeBusyStatus UnindexedFieldURIType = "meetingRequest:IntendedFreeBusyStatus"

	UnindexedFieldURITypeMeetingRequestChangeHighlights UnindexedFieldURIType = "meetingRequest:ChangeHighlights"

	UnindexedFieldURITypeCalendarStart UnindexedFieldURIType = "calendar:Start"

	UnindexedFieldURITypeCalendarEnd UnindexedFieldURIType = "calendar:End"

	UnindexedFieldURITypeCalendarOriginalStart UnindexedFieldURIType = "calendar:OriginalStart"

	UnindexedFieldURITypeCalendarStartWallClock UnindexedFieldURIType = "calendar:StartWallClock"

	UnindexedFieldURITypeCalendarEndWallClock UnindexedFieldURIType = "calendar:EndWallClock"

	UnindexedFieldURITypeCalendarStartTimeZoneId UnindexedFieldURIType = "calendar:StartTimeZoneId"

	UnindexedFieldURITypeCalendarEndTimeZoneId UnindexedFieldURIType = "calendar:EndTimeZoneId"

	UnindexedFieldURITypeCalendarIsAllDayEvent UnindexedFieldURIType = "calendar:IsAllDayEvent"

	UnindexedFieldURITypeCalendarLegacyFreeBusyStatus UnindexedFieldURIType = "calendar:LegacyFreeBusyStatus"

	UnindexedFieldURITypeCalendarLocation UnindexedFieldURIType = "calendar:Location"

	UnindexedFieldURITypeCalendarEnhancedLocation UnindexedFieldURIType = "calendar:EnhancedLocation"

	UnindexedFieldURITypeCalendarWhen UnindexedFieldURIType = "calendar:When"

	UnindexedFieldURITypeCalendarIsMeeting UnindexedFieldURIType = "calendar:IsMeeting"

	UnindexedFieldURITypeCalendarIsCancelled UnindexedFieldURIType = "calendar:IsCancelled"

	UnindexedFieldURITypeCalendarIsRecurring UnindexedFieldURIType = "calendar:IsRecurring"

	UnindexedFieldURITypeCalendarMeetingRequestWasSent UnindexedFieldURIType = "calendar:MeetingRequestWasSent"

	UnindexedFieldURITypeCalendarIsResponseRequested UnindexedFieldURIType = "calendar:IsResponseRequested"

	UnindexedFieldURITypeCalendarCalendarItemType UnindexedFieldURIType = "calendar:CalendarItemType"

	UnindexedFieldURITypeCalendarMyResponseType UnindexedFieldURIType = "calendar:MyResponseType"

	UnindexedFieldURITypeCalendarOrganizer UnindexedFieldURIType = "calendar:Organizer"

	UnindexedFieldURITypeCalendarRequiredAttendees UnindexedFieldURIType = "calendar:RequiredAttendees"

	UnindexedFieldURITypeCalendarOptionalAttendees UnindexedFieldURIType = "calendar:OptionalAttendees"

	UnindexedFieldURITypeCalendarResources UnindexedFieldURIType = "calendar:Resources"

	UnindexedFieldURITypeCalendarConflictingMeetingCount UnindexedFieldURIType = "calendar:ConflictingMeetingCount"

	UnindexedFieldURITypeCalendarAdjacentMeetingCount UnindexedFieldURIType = "calendar:AdjacentMeetingCount"

	UnindexedFieldURITypeCalendarConflictingMeetings UnindexedFieldURIType = "calendar:ConflictingMeetings"

	UnindexedFieldURITypeCalendarAdjacentMeetings UnindexedFieldURIType = "calendar:AdjacentMeetings"

	UnindexedFieldURITypeCalendarInboxReminders UnindexedFieldURIType = "calendar:InboxReminders"

	UnindexedFieldURITypeCalendarDuration UnindexedFieldURIType = "calendar:Duration"

	UnindexedFieldURITypeCalendarTimeZone UnindexedFieldURIType = "calendar:TimeZone"

	UnindexedFieldURITypeCalendarAppointmentReplyTime UnindexedFieldURIType = "calendar:AppointmentReplyTime"

	UnindexedFieldURITypeCalendarAppointmentSequenceNumber UnindexedFieldURIType = "calendar:AppointmentSequenceNumber"

	UnindexedFieldURITypeCalendarAppointmentState UnindexedFieldURIType = "calendar:AppointmentState"

	UnindexedFieldURITypeCalendarRecurrence UnindexedFieldURIType = "calendar:Recurrence"

	UnindexedFieldURITypeCalendarFirstOccurrence UnindexedFieldURIType = "calendar:FirstOccurrence"

	UnindexedFieldURITypeCalendarLastOccurrence UnindexedFieldURIType = "calendar:LastOccurrence"

	UnindexedFieldURITypeCalendarModifiedOccurrences UnindexedFieldURIType = "calendar:ModifiedOccurrences"

	UnindexedFieldURITypeCalendarDeletedOccurrences UnindexedFieldURIType = "calendar:DeletedOccurrences"

	UnindexedFieldURITypeCalendarMeetingTimeZone UnindexedFieldURIType = "calendar:MeetingTimeZone"

	UnindexedFieldURITypeCalendarConferenceType UnindexedFieldURIType = "calendar:ConferenceType"

	UnindexedFieldURITypeCalendarAllowNewTimeProposal UnindexedFieldURIType = "calendar:AllowNewTimeProposal"

	UnindexedFieldURITypeCalendarIsOnlineMeeting UnindexedFieldURIType = "calendar:IsOnlineMeeting"

	UnindexedFieldURITypeCalendarMeetingWorkspaceUrl UnindexedFieldURIType = "calendar:MeetingWorkspaceUrl"

	UnindexedFieldURITypeCalendarNetShowUrl UnindexedFieldURIType = "calendar:NetShowUrl"

	UnindexedFieldURITypeCalendarUID UnindexedFieldURIType = "calendar:UID"

	UnindexedFieldURITypeCalendarRecurrenceId UnindexedFieldURIType = "calendar:RecurrenceId"

	UnindexedFieldURITypeCalendarDateTimeStamp UnindexedFieldURIType = "calendar:DateTimeStamp"

	UnindexedFieldURITypeCalendarStartTimeZone UnindexedFieldURIType = "calendar:StartTimeZone"

	UnindexedFieldURITypeCalendarEndTimeZone UnindexedFieldURIType = "calendar:EndTimeZone"

	UnindexedFieldURITypeCalendarJoinOnlineMeetingUrl UnindexedFieldURIType = "calendar:JoinOnlineMeetingUrl"

	UnindexedFieldURITypeCalendarOnlineMeetingSettings UnindexedFieldURIType = "calendar:OnlineMeetingSettings"

	UnindexedFieldURITypeCalendarIsOrganizer UnindexedFieldURIType = "calendar:IsOrganizer"

	UnindexedFieldURITypeCalendarCalendarActivityData UnindexedFieldURIType = "calendar:CalendarActivityData"

	UnindexedFieldURITypeCalendarDoNotForwardMeeting UnindexedFieldURIType = "calendar:DoNotForwardMeeting"

	UnindexedFieldURITypeTaskActualWork UnindexedFieldURIType = "task:ActualWork"

	UnindexedFieldURITypeTaskAssignedTime UnindexedFieldURIType = "task:AssignedTime"

	UnindexedFieldURITypeTaskBillingInformation UnindexedFieldURIType = "task:BillingInformation"

	UnindexedFieldURITypeTaskChangeCount UnindexedFieldURIType = "task:ChangeCount"

	UnindexedFieldURITypeTaskCompanies UnindexedFieldURIType = "task:Companies"

	UnindexedFieldURITypeTaskCompleteDate UnindexedFieldURIType = "task:CompleteDate"

	UnindexedFieldURITypeTaskContacts UnindexedFieldURIType = "task:Contacts"

	UnindexedFieldURITypeTaskDelegationState UnindexedFieldURIType = "task:DelegationState"

	UnindexedFieldURITypeTaskDelegator UnindexedFieldURIType = "task:Delegator"

	UnindexedFieldURITypeTaskDueDate UnindexedFieldURIType = "task:DueDate"

	UnindexedFieldURITypeTaskIsAssignmentEditable UnindexedFieldURIType = "task:IsAssignmentEditable"

	UnindexedFieldURITypeTaskIsComplete UnindexedFieldURIType = "task:IsComplete"

	UnindexedFieldURITypeTaskIsRecurring UnindexedFieldURIType = "task:IsRecurring"

	UnindexedFieldURITypeTaskIsTeamTask UnindexedFieldURIType = "task:IsTeamTask"

	UnindexedFieldURITypeTaskMileage UnindexedFieldURIType = "task:Mileage"

	UnindexedFieldURITypeTaskOwner UnindexedFieldURIType = "task:Owner"

	UnindexedFieldURITypeTaskPercentComplete UnindexedFieldURIType = "task:PercentComplete"

	UnindexedFieldURITypeTaskRecurrence UnindexedFieldURIType = "task:Recurrence"

	UnindexedFieldURITypeTaskStartDate UnindexedFieldURIType = "task:StartDate"

	UnindexedFieldURITypeTaskStatus UnindexedFieldURIType = "task:Status"

	UnindexedFieldURITypeTaskStatusDescription UnindexedFieldURIType = "task:StatusDescription"

	UnindexedFieldURITypeTaskTotalWork UnindexedFieldURIType = "task:TotalWork"

	UnindexedFieldURITypeContactsAlias UnindexedFieldURIType = "contacts:Alias"

	UnindexedFieldURITypeContactsAssistantName UnindexedFieldURIType = "contacts:AssistantName"

	UnindexedFieldURITypeContactsBirthday UnindexedFieldURIType = "contacts:Birthday"

	UnindexedFieldURITypeContactsBusinessHomePage UnindexedFieldURIType = "contacts:BusinessHomePage"

	UnindexedFieldURITypeContactsChildren UnindexedFieldURIType = "contacts:Children"

	UnindexedFieldURITypeContactsCompanies UnindexedFieldURIType = "contacts:Companies"

	UnindexedFieldURITypeContactsCompanyName UnindexedFieldURIType = "contacts:CompanyName"

	UnindexedFieldURITypeContactsCompleteName UnindexedFieldURIType = "contacts:CompleteName"

	UnindexedFieldURITypeContactsContactSource UnindexedFieldURIType = "contacts:ContactSource"

	UnindexedFieldURITypeContactsCulture UnindexedFieldURIType = "contacts:Culture"

	UnindexedFieldURITypeContactsDepartment UnindexedFieldURIType = "contacts:Department"

	UnindexedFieldURITypeContactsDisplayName UnindexedFieldURIType = "contacts:DisplayName"

	UnindexedFieldURITypeContactsDirectoryId UnindexedFieldURIType = "contacts:DirectoryId"

	UnindexedFieldURITypeContactsDirectReports UnindexedFieldURIType = "contacts:DirectReports"

	UnindexedFieldURITypeContactsEmailAddresses UnindexedFieldURIType = "contacts:EmailAddresses"

	UnindexedFieldURITypeContactsAbchEmailAddresses UnindexedFieldURIType = "contacts:AbchEmailAddresses"

	UnindexedFieldURITypeContactsFileAs UnindexedFieldURIType = "contacts:FileAs"

	UnindexedFieldURITypeContactsFileAsMapping UnindexedFieldURIType = "contacts:FileAsMapping"

	UnindexedFieldURITypeContactsGeneration UnindexedFieldURIType = "contacts:Generation"

	UnindexedFieldURITypeContactsGivenName UnindexedFieldURIType = "contacts:GivenName"

	UnindexedFieldURITypeContactsImAddresses UnindexedFieldURIType = "contacts:ImAddresses"

	UnindexedFieldURITypeContactsInitials UnindexedFieldURIType = "contacts:Initials"

	UnindexedFieldURITypeContactsJobTitle UnindexedFieldURIType = "contacts:JobTitle"

	UnindexedFieldURITypeContactsManager UnindexedFieldURIType = "contacts:Manager"

	UnindexedFieldURITypeContactsManagerMailbox UnindexedFieldURIType = "contacts:ManagerMailbox"

	UnindexedFieldURITypeContactsMiddleName UnindexedFieldURIType = "contacts:MiddleName"

	UnindexedFieldURITypeContactsMileage UnindexedFieldURIType = "contacts:Mileage"

	UnindexedFieldURITypeContactsMSExchangeCertificate UnindexedFieldURIType = "contacts:MSExchangeCertificate"

	UnindexedFieldURITypeContactsNickname UnindexedFieldURIType = "contacts:Nickname"

	UnindexedFieldURITypeContactsNotes UnindexedFieldURIType = "contacts:Notes"

	UnindexedFieldURITypeContactsOfficeLocation UnindexedFieldURIType = "contacts:OfficeLocation"

	UnindexedFieldURITypeContactsPhoneNumbers UnindexedFieldURIType = "contacts:PhoneNumbers"

	UnindexedFieldURITypeContactsPhoneticFullName UnindexedFieldURIType = "contacts:PhoneticFullName"

	UnindexedFieldURITypeContactsPhoneticFirstName UnindexedFieldURIType = "contacts:PhoneticFirstName"

	UnindexedFieldURITypeContactsPhoneticLastName UnindexedFieldURIType = "contacts:PhoneticLastName"

	UnindexedFieldURITypeContactsPhoto UnindexedFieldURIType = "contacts:Photo"

	UnindexedFieldURITypeContactsPhysicalAddresses UnindexedFieldURIType = "contacts:PhysicalAddresses"

	UnindexedFieldURITypeContactsPostalAddressIndex UnindexedFieldURIType = "contacts:PostalAddressIndex"

	UnindexedFieldURITypeContactsProfession UnindexedFieldURIType = "contacts:Profession"

	UnindexedFieldURITypeContactsSpouseName UnindexedFieldURIType = "contacts:SpouseName"

	UnindexedFieldURITypeContactsSurname UnindexedFieldURIType = "contacts:Surname"

	UnindexedFieldURITypeContactsWeddingAnniversary UnindexedFieldURIType = "contacts:WeddingAnniversary"

	UnindexedFieldURITypeContactsUserSMIMECertificate UnindexedFieldURIType = "contacts:UserSMIMECertificate"

	UnindexedFieldURITypeContactsHasPicture UnindexedFieldURIType = "contacts:HasPicture"

	UnindexedFieldURITypeContactsAccountName UnindexedFieldURIType = "contacts:AccountName"

	UnindexedFieldURITypeContactsIsAutoUpdateDisabled UnindexedFieldURIType = "contacts:IsAutoUpdateDisabled"

	UnindexedFieldURITypeContactsIsMessengerEnabled UnindexedFieldURIType = "contacts:IsMessengerEnabled"

	UnindexedFieldURITypeContactsComment UnindexedFieldURIType = "contacts:Comment"

	UnindexedFieldURITypeContactsContactShortId UnindexedFieldURIType = "contacts:ContactShortId"

	UnindexedFieldURITypeContactsContactType UnindexedFieldURIType = "contacts:ContactType"

	UnindexedFieldURITypeContactsCreatedBy UnindexedFieldURIType = "contacts:CreatedBy"

	UnindexedFieldURITypeContactsGender UnindexedFieldURIType = "contacts:Gender"

	UnindexedFieldURITypeContactsIsHidden UnindexedFieldURIType = "contacts:IsHidden"

	UnindexedFieldURITypeContactsObjectId UnindexedFieldURIType = "contacts:ObjectId"

	UnindexedFieldURITypeContactsPassportId UnindexedFieldURIType = "contacts:PassportId"

	UnindexedFieldURITypeContactsIsPrivate UnindexedFieldURIType = "contacts:IsPrivate"

	UnindexedFieldURITypeContactsSourceId UnindexedFieldURIType = "contacts:SourceId"

	UnindexedFieldURITypeContactsTrustLevel UnindexedFieldURIType = "contacts:TrustLevel"

	UnindexedFieldURITypeContactsUrls UnindexedFieldURIType = "contacts:Urls"

	UnindexedFieldURITypeContactsCid UnindexedFieldURIType = "contacts:Cid"

	UnindexedFieldURITypeContactsSkypeAuthCertificate UnindexedFieldURIType = "contacts:SkypeAuthCertificate"

	UnindexedFieldURITypeContactsSkypeContext UnindexedFieldURIType = "contacts:SkypeContext"

	UnindexedFieldURITypeContactsSkypeId UnindexedFieldURIType = "contacts:SkypeId"

	UnindexedFieldURITypeContactsXboxLiveTag UnindexedFieldURIType = "contacts:XboxLiveTag"

	UnindexedFieldURITypeContactsSkypeRelationship UnindexedFieldURIType = "contacts:SkypeRelationship"

	UnindexedFieldURITypeContactsYomiNickname UnindexedFieldURIType = "contacts:YomiNickname"

	UnindexedFieldURITypeContactsInviteFree UnindexedFieldURIType = "contacts:InviteFree"

	UnindexedFieldURITypeContactsHidePresenceAndProfile UnindexedFieldURIType = "contacts:HidePresenceAndProfile"

	UnindexedFieldURITypeContactsIsPendingOutbound UnindexedFieldURIType = "contacts:IsPendingOutbound"

	UnindexedFieldURITypeContactsSupportGroupFeeds UnindexedFieldURIType = "contacts:SupportGroupFeeds"

	UnindexedFieldURITypeContactsUserTileHash UnindexedFieldURIType = "contacts:UserTileHash"

	UnindexedFieldURITypeContactsUnifiedInbox UnindexedFieldURIType = "contacts:UnifiedInbox"

	UnindexedFieldURITypeContactsMris UnindexedFieldURIType = "contacts:Mris"

	UnindexedFieldURITypeContactsWlid UnindexedFieldURIType = "contacts:Wlid"

	UnindexedFieldURITypeContactsAbchContactId UnindexedFieldURIType = "contacts:AbchContactId"

	UnindexedFieldURITypeContactsNotInBirthdayCalendar UnindexedFieldURIType = "contacts:NotInBirthdayCalendar"

	UnindexedFieldURITypeContactsShellContactType UnindexedFieldURIType = "contacts:ShellContactType"

	UnindexedFieldURITypeContactsImMri UnindexedFieldURIType = "contacts:ImMri"

	UnindexedFieldURITypeContactsPresenceTrustLevel UnindexedFieldURIType = "contacts:PresenceTrustLevel"

	UnindexedFieldURITypeContactsOtherMri UnindexedFieldURIType = "contacts:OtherMri"

	UnindexedFieldURITypeContactsProfileLastChanged UnindexedFieldURIType = "contacts:ProfileLastChanged"

	UnindexedFieldURITypeContactsMobileIMEnabled UnindexedFieldURIType = "contacts:MobileIMEnabled"

	UnindexedFieldURITypeDistributionlistMembers UnindexedFieldURIType = "distributionlist:Members"

	UnindexedFieldURITypeContactsPartnerNetworkProfilePhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkProfilePhotoUrl"

	UnindexedFieldURITypeContactsPartnerNetworkThumbnailPhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkThumbnailPhotoUrl"

	UnindexedFieldURITypeContactsPersonId UnindexedFieldURIType = "contacts:PersonId"

	UnindexedFieldURITypeContactsConversationGuid UnindexedFieldURIType = "contacts:ConversationGuid"

	UnindexedFieldURITypePostitemPostedTime UnindexedFieldURIType = "postitem:PostedTime"

	UnindexedFieldURITypeConversationConversationId UnindexedFieldURIType = "conversation:ConversationId"

	UnindexedFieldURITypeConversationConversationTopic UnindexedFieldURIType = "conversation:ConversationTopic"

	UnindexedFieldURITypeConversationUniqueRecipients UnindexedFieldURIType = "conversation:UniqueRecipients"

	UnindexedFieldURITypeConversationGlobalUniqueRecipients UnindexedFieldURIType = "conversation:GlobalUniqueRecipients"

	UnindexedFieldURITypeConversationUniqueUnreadSenders UnindexedFieldURIType = "conversation:UniqueUnreadSenders"

	UnindexedFieldURITypeConversationGlobalUniqueUnreadSenders UnindexedFieldURIType = "conversation:GlobalUniqueUnreadSenders"

	UnindexedFieldURITypeConversationUniqueSenders UnindexedFieldURIType = "conversation:UniqueSenders"

	UnindexedFieldURITypeConversationGlobalUniqueSenders UnindexedFieldURIType = "conversation:GlobalUniqueSenders"

	UnindexedFieldURITypeConversationLastDeliveryTime UnindexedFieldURIType = "conversation:LastDeliveryTime"

	UnindexedFieldURITypeConversationGlobalLastDeliveryTime UnindexedFieldURIType = "conversation:GlobalLastDeliveryTime"

	UnindexedFieldURITypeConversationCategories UnindexedFieldURIType = "conversation:Categories"

	UnindexedFieldURITypeConversationGlobalCategories UnindexedFieldURIType = "conversation:GlobalCategories"

	UnindexedFieldURITypeConversationFlagStatus UnindexedFieldURIType = "conversation:FlagStatus"

	UnindexedFieldURITypeConversationGlobalFlagStatus UnindexedFieldURIType = "conversation:GlobalFlagStatus"

	UnindexedFieldURITypeConversationHasAttachments UnindexedFieldURIType = "conversation:HasAttachments"

	UnindexedFieldURITypeConversationGlobalHasAttachments UnindexedFieldURIType = "conversation:GlobalHasAttachments"

	UnindexedFieldURITypeConversationHasIrm UnindexedFieldURIType = "conversation:HasIrm"

	UnindexedFieldURITypeConversationGlobalHasIrm UnindexedFieldURIType = "conversation:GlobalHasIrm"

	UnindexedFieldURITypeConversationMessageCount UnindexedFieldURIType = "conversation:MessageCount"

	UnindexedFieldURITypeConversationGlobalMessageCount UnindexedFieldURIType = "conversation:GlobalMessageCount"

	UnindexedFieldURITypeConversationUnreadCount UnindexedFieldURIType = "conversation:UnreadCount"

	UnindexedFieldURITypeConversationGlobalUnreadCount UnindexedFieldURIType = "conversation:GlobalUnreadCount"

	UnindexedFieldURITypeConversationSize UnindexedFieldURIType = "conversation:Size"

	UnindexedFieldURITypeConversationGlobalSize UnindexedFieldURIType = "conversation:GlobalSize"

	UnindexedFieldURITypeConversationItemClasses UnindexedFieldURIType = "conversation:ItemClasses"

	UnindexedFieldURITypeConversationGlobalItemClasses UnindexedFieldURIType = "conversation:GlobalItemClasses"

	UnindexedFieldURITypeConversationImportance UnindexedFieldURIType = "conversation:Importance"

	UnindexedFieldURITypeConversationGlobalImportance UnindexedFieldURIType = "conversation:GlobalImportance"

	UnindexedFieldURITypeConversationItemIds UnindexedFieldURIType = "conversation:ItemIds"

	UnindexedFieldURITypeConversationGlobalItemIds UnindexedFieldURIType = "conversation:GlobalItemIds"

	UnindexedFieldURITypeConversationLastModifiedTime UnindexedFieldURIType = "conversation:LastModifiedTime"

	UnindexedFieldURITypeConversationInstanceKey UnindexedFieldURIType = "conversation:InstanceKey"

	UnindexedFieldURITypeConversationPreview UnindexedFieldURIType = "conversation:Preview"

	UnindexedFieldURITypeConversationIconIndex UnindexedFieldURIType = "conversation:IconIndex"

	UnindexedFieldURITypeConversationGlobalIconIndex UnindexedFieldURIType = "conversation:GlobalIconIndex"

	UnindexedFieldURITypeConversationDraftItemIds UnindexedFieldURIType = "conversation:DraftItemIds"

	UnindexedFieldURITypeConversationHasClutter UnindexedFieldURIType = "conversation:HasClutter"

	UnindexedFieldURITypeConversationMentionedMe UnindexedFieldURIType = "conversation:MentionedMe"

	UnindexedFieldURITypeConversationGlobalMentionedMe UnindexedFieldURIType = "conversation:GlobalMentionedMe"

	UnindexedFieldURITypeConversationAtAllMention UnindexedFieldURIType = "conversation:AtAllMention"

	UnindexedFieldURITypeConversationGlobalAtAllMention UnindexedFieldURIType = "conversation:GlobalAtAllMention"

	UnindexedFieldURITypePersonFullName UnindexedFieldURIType = "person:FullName"

	UnindexedFieldURITypePersonGivenName UnindexedFieldURIType = "person:GivenName"

	UnindexedFieldURITypePersonSurname UnindexedFieldURIType = "person:Surname"

	UnindexedFieldURITypePersonPhoneNumber UnindexedFieldURIType = "person:PhoneNumber"

	UnindexedFieldURITypePersonSMSNumber UnindexedFieldURIType = "person:SMSNumber"

	UnindexedFieldURITypePersonEmailAddress UnindexedFieldURIType = "person:EmailAddress"

	UnindexedFieldURITypePersonAlias UnindexedFieldURIType = "person:Alias"

	UnindexedFieldURITypePersonDepartment UnindexedFieldURIType = "person:Department"

	UnindexedFieldURITypePersonLinkedInProfileLink UnindexedFieldURIType = "person:LinkedInProfileLink"

	UnindexedFieldURITypePersonSkills UnindexedFieldURIType = "person:Skills"

	UnindexedFieldURITypePersonProfessionalBiography UnindexedFieldURIType = "person:ProfessionalBiography"

	UnindexedFieldURITypePersonManagementChain UnindexedFieldURIType = "person:ManagementChain"

	UnindexedFieldURITypePersonDirectReports UnindexedFieldURIType = "person:DirectReports"

	UnindexedFieldURITypePersonPeers UnindexedFieldURIType = "person:Peers"

	UnindexedFieldURITypePersonTeamSize UnindexedFieldURIType = "person:TeamSize"

	UnindexedFieldURITypePersonCurrentJob UnindexedFieldURIType = "person:CurrentJob"

	UnindexedFieldURITypePersonBirthday UnindexedFieldURIType = "person:Birthday"

	UnindexedFieldURITypePersonHometown UnindexedFieldURIType = "person:Hometown"

	UnindexedFieldURITypePersonCurrentLocation UnindexedFieldURIType = "person:CurrentLocation"

	UnindexedFieldURITypePersonCompanyProfile UnindexedFieldURIType = "person:CompanyProfile"

	UnindexedFieldURITypePersonOffice UnindexedFieldURIType = "person:Office"

	UnindexedFieldURITypePersonHeadline UnindexedFieldURIType = "person:Headline"

	UnindexedFieldURITypePersonMutualConnections UnindexedFieldURIType = "person:MutualConnections"

	UnindexedFieldURITypePersonTitle UnindexedFieldURIType = "person:Title"

	UnindexedFieldURITypePersonMutualManager UnindexedFieldURIType = "person:MutualManager"

	UnindexedFieldURITypePersonInsights UnindexedFieldURIType = "person:Insights"

	UnindexedFieldURITypePersonUserProfilePicture UnindexedFieldURIType = "person:UserProfilePicture"

	UnindexedFieldURITypePersonaPersonaId UnindexedFieldURIType = "persona:PersonaId"

	UnindexedFieldURITypePersonaPersonaType UnindexedFieldURIType = "persona:PersonaType"

	UnindexedFieldURITypePersonaGivenName UnindexedFieldURIType = "persona:GivenName"

	UnindexedFieldURITypePersonaCompanyName UnindexedFieldURIType = "persona:CompanyName"

	UnindexedFieldURITypePersonaSurname UnindexedFieldURIType = "persona:Surname"

	UnindexedFieldURITypePersonaDisplayName UnindexedFieldURIType = "persona:DisplayName"

	UnindexedFieldURITypePersonaEmailAddress UnindexedFieldURIType = "persona:EmailAddress"

	UnindexedFieldURITypePersonaFileAs UnindexedFieldURIType = "persona:FileAs"

	UnindexedFieldURITypePersonaHomeCity UnindexedFieldURIType = "persona:HomeCity"

	UnindexedFieldURITypePersonaCreationTime UnindexedFieldURIType = "persona:CreationTime"

	UnindexedFieldURITypePersonaRelevanceScore UnindexedFieldURIType = "persona:RelevanceScore"

	UnindexedFieldURITypePersonaRankingWeight UnindexedFieldURIType = "persona:RankingWeight"

	UnindexedFieldURITypePersonaWorkCity UnindexedFieldURIType = "persona:WorkCity"

	UnindexedFieldURITypePersonaPersonaObjectStatus UnindexedFieldURIType = "persona:PersonaObjectStatus"

	UnindexedFieldURITypePersonaFileAsId UnindexedFieldURIType = "persona:FileAsId"

	UnindexedFieldURITypePersonaDisplayNamePrefix UnindexedFieldURIType = "persona:DisplayNamePrefix"

	UnindexedFieldURITypePersonaYomiCompanyName UnindexedFieldURIType = "persona:YomiCompanyName"

	UnindexedFieldURITypePersonaYomiFirstName UnindexedFieldURIType = "persona:YomiFirstName"

	UnindexedFieldURITypePersonaYomiLastName UnindexedFieldURIType = "persona:YomiLastName"

	UnindexedFieldURITypePersonaTitle UnindexedFieldURIType = "persona:Title"

	UnindexedFieldURITypePersonaEmailAddresses UnindexedFieldURIType = "persona:EmailAddresses"

	UnindexedFieldURITypePersonaPhoneNumber UnindexedFieldURIType = "persona:PhoneNumber"

	UnindexedFieldURITypePersonaImAddress UnindexedFieldURIType = "persona:ImAddress"

	UnindexedFieldURITypePersonaImAddresses UnindexedFieldURIType = "persona:ImAddresses"

	UnindexedFieldURITypePersonaImAddresses2 UnindexedFieldURIType = "persona:ImAddresses2"

	UnindexedFieldURITypePersonaImAddresses3 UnindexedFieldURIType = "persona:ImAddresses3"

	UnindexedFieldURITypePersonaFolderIds UnindexedFieldURIType = "persona:FolderIds"

	UnindexedFieldURITypePersonaAttributions UnindexedFieldURIType = "persona:Attributions"

	UnindexedFieldURITypePersonaDisplayNames UnindexedFieldURIType = "persona:DisplayNames"

	UnindexedFieldURITypePersonaInitials UnindexedFieldURIType = "persona:Initials"

	UnindexedFieldURITypePersonaFileAses UnindexedFieldURIType = "persona:FileAses"

	UnindexedFieldURITypePersonaFileAsIds UnindexedFieldURIType = "persona:FileAsIds"

	UnindexedFieldURITypePersonaDisplayNamePrefixes UnindexedFieldURIType = "persona:DisplayNamePrefixes"

	UnindexedFieldURITypePersonaGivenNames UnindexedFieldURIType = "persona:GivenNames"

	UnindexedFieldURITypePersonaMiddleNames UnindexedFieldURIType = "persona:MiddleNames"

	UnindexedFieldURITypePersonaSurnames UnindexedFieldURIType = "persona:Surnames"

	UnindexedFieldURITypePersonaGenerations UnindexedFieldURIType = "persona:Generations"

	UnindexedFieldURITypePersonaNicknames UnindexedFieldURIType = "persona:Nicknames"

	UnindexedFieldURITypePersonaYomiCompanyNames UnindexedFieldURIType = "persona:YomiCompanyNames"

	UnindexedFieldURITypePersonaYomiFirstNames UnindexedFieldURIType = "persona:YomiFirstNames"

	UnindexedFieldURITypePersonaYomiLastNames UnindexedFieldURIType = "persona:YomiLastNames"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers UnindexedFieldURIType = "persona:BusinessPhoneNumbers"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers2 UnindexedFieldURIType = "persona:BusinessPhoneNumbers2"

	UnindexedFieldURITypePersonaHomePhones UnindexedFieldURIType = "persona:HomePhones"

	UnindexedFieldURITypePersonaHomePhones2 UnindexedFieldURIType = "persona:HomePhones2"

	UnindexedFieldURITypePersonaMobilePhones UnindexedFieldURIType = "persona:MobilePhones"

	UnindexedFieldURITypePersonaMobilePhones2 UnindexedFieldURIType = "persona:MobilePhones2"

	UnindexedFieldURITypePersonaAssistantPhoneNumbers UnindexedFieldURIType = "persona:AssistantPhoneNumbers"

	UnindexedFieldURITypePersonaCallbackPhones UnindexedFieldURIType = "persona:CallbackPhones"

	UnindexedFieldURITypePersonaCarPhones UnindexedFieldURIType = "persona:CarPhones"

	UnindexedFieldURITypePersonaHomeFaxes UnindexedFieldURIType = "persona:HomeFaxes"

	UnindexedFieldURITypePersonaOrganizationMainPhones UnindexedFieldURIType = "persona:OrganizationMainPhones"

	UnindexedFieldURITypePersonaOtherFaxes UnindexedFieldURIType = "persona:OtherFaxes"

	UnindexedFieldURITypePersonaOtherTelephones UnindexedFieldURIType = "persona:OtherTelephones"

	UnindexedFieldURITypePersonaOtherPhones2 UnindexedFieldURIType = "persona:OtherPhones2"

	UnindexedFieldURITypePersonaPagers UnindexedFieldURIType = "persona:Pagers"

	UnindexedFieldURITypePersonaRadioPhones UnindexedFieldURIType = "persona:RadioPhones"

	UnindexedFieldURITypePersonaTelexNumbers UnindexedFieldURIType = "persona:TelexNumbers"

	UnindexedFieldURITypePersonaWorkFaxes UnindexedFieldURIType = "persona:WorkFaxes"

	UnindexedFieldURITypePersonaEmails1 UnindexedFieldURIType = "persona:Emails1"

	UnindexedFieldURITypePersonaEmails2 UnindexedFieldURIType = "persona:Emails2"

	UnindexedFieldURITypePersonaEmails3 UnindexedFieldURIType = "persona:Emails3"

	UnindexedFieldURITypePersonaBusinessHomePages UnindexedFieldURIType = "persona:BusinessHomePages"

	UnindexedFieldURITypePersonaSchool UnindexedFieldURIType = "persona:School"

	UnindexedFieldURITypePersonaPersonalHomePages UnindexedFieldURIType = "persona:PersonalHomePages"

	UnindexedFieldURITypePersonaOfficeLocations UnindexedFieldURIType = "persona:OfficeLocations"

	UnindexedFieldURITypePersonaBusinessAddresses UnindexedFieldURIType = "persona:BusinessAddresses"

	UnindexedFieldURITypePersonaHomeAddresses UnindexedFieldURIType = "persona:HomeAddresses"

	UnindexedFieldURITypePersonaOtherAddresses UnindexedFieldURIType = "persona:OtherAddresses"

	UnindexedFieldURITypePersonaTitles UnindexedFieldURIType = "persona:Titles"

	UnindexedFieldURITypePersonaDepartments UnindexedFieldURIType = "persona:Departments"

	UnindexedFieldURITypePersonaCompanyNames UnindexedFieldURIType = "persona:CompanyNames"

	UnindexedFieldURITypePersonaManagers UnindexedFieldURIType = "persona:Managers"

	UnindexedFieldURITypePersonaAssistantNames UnindexedFieldURIType = "persona:AssistantNames"

	UnindexedFieldURITypePersonaProfessions UnindexedFieldURIType = "persona:Professions"

	UnindexedFieldURITypePersonaSpouseNames UnindexedFieldURIType = "persona:SpouseNames"

	UnindexedFieldURITypePersonaHobbies UnindexedFieldURIType = "persona:Hobbies"

	UnindexedFieldURITypePersonaWeddingAnniversaries UnindexedFieldURIType = "persona:WeddingAnniversaries"

	UnindexedFieldURITypePersonaBirthdays UnindexedFieldURIType = "persona:Birthdays"

	UnindexedFieldURITypePersonaChildren UnindexedFieldURIType = "persona:Children"

	UnindexedFieldURITypePersonaLocations UnindexedFieldURIType = "persona:Locations"

	UnindexedFieldURITypePersonaExtendedProperties UnindexedFieldURIType = "persona:ExtendedProperties"

	UnindexedFieldURITypePersonaPostalAddress UnindexedFieldURIType = "persona:PostalAddress"

	UnindexedFieldURITypePersonaBodies UnindexedFieldURIType = "persona:Bodies"

	UnindexedFieldURITypePersonaIsFavorite UnindexedFieldURIType = "persona:IsFavorite"

	UnindexedFieldURITypePersonaInlineLinks UnindexedFieldURIType = "persona:InlineLinks"

	UnindexedFieldURITypePersonaItemLinkIds UnindexedFieldURIType = "persona:ItemLinkIds"

	UnindexedFieldURITypePersonaHasActiveDeals UnindexedFieldURIType = "persona:HasActiveDeals"

	UnindexedFieldURITypePersonaIsBusinessContact UnindexedFieldURIType = "persona:IsBusinessContact"

	UnindexedFieldURITypePersonaAttributedHasActiveDeals UnindexedFieldURIType = "persona:AttributedHasActiveDeals"

	UnindexedFieldURITypePersonaAttributedIsBusinessContact UnindexedFieldURIType = "persona:AttributedIsBusinessContact"

	UnindexedFieldURITypePersonaSourceMailboxGuids UnindexedFieldURIType = "persona:SourceMailboxGuids"

	UnindexedFieldURITypePersonaLastContactedDate UnindexedFieldURIType = "persona:LastContactedDate"

	UnindexedFieldURITypePersonaExternalDirectoryObjectId UnindexedFieldURIType = "persona:ExternalDirectoryObjectId"

	UnindexedFieldURITypePersonaMapiEntryId UnindexedFieldURIType = "persona:MapiEntryId"

	UnindexedFieldURITypePersonaMapiEmailAddress UnindexedFieldURIType = "persona:MapiEmailAddress"

	UnindexedFieldURITypePersonaMapiAddressType UnindexedFieldURIType = "persona:MapiAddressType"

	UnindexedFieldURITypePersonaMapiSearchKey UnindexedFieldURIType = "persona:MapiSearchKey"

	UnindexedFieldURITypePersonaMapiTransmittableDisplayName UnindexedFieldURIType = "persona:MapiTransmittableDisplayName"

	UnindexedFieldURITypePersonaMapiSendRichInfo UnindexedFieldURIType = "persona:MapiSendRichInfo"

	UnindexedFieldURITypeRolememberMemberType UnindexedFieldURIType = "rolemember:MemberType"

	UnindexedFieldURITypeRolememberMemberId UnindexedFieldURIType = "rolemember:MemberId"

	UnindexedFieldURITypeRolememberDisplayName UnindexedFieldURIType = "rolemember:DisplayName"

	UnindexedFieldURITypeNetworkTokenRefreshLastCompleted UnindexedFieldURIType = "network:TokenRefreshLastCompleted"

	UnindexedFieldURITypeNetworkTokenRefreshLastAttempted UnindexedFieldURIType = "network:TokenRefreshLastAttempted"

	UnindexedFieldURITypeNetworkSyncEnabled UnindexedFieldURIType = "network:SyncEnabled"

	UnindexedFieldURITypeNetworkRejectedOffers UnindexedFieldURIType = "network:RejectedOffers"

	UnindexedFieldURITypeNetworkSessionHandle UnindexedFieldURIType = "network:SessionHandle"

	UnindexedFieldURITypeNetworkRefreshTokenExpiry2 UnindexedFieldURIType = "network:RefreshTokenExpiry2"

	UnindexedFieldURITypeNetworkRefreshToken2 UnindexedFieldURIType = "network:RefreshToken2"

	UnindexedFieldURITypeNetworkPsaLastChanged UnindexedFieldURIType = "network:PsaLastChanged"

	UnindexedFieldURITypeNetworkOffers UnindexedFieldURIType = "network:Offers"

	UnindexedFieldURITypeNetworkLastWelcomeContact UnindexedFieldURIType = "network:LastWelcomeContact"

	UnindexedFieldURITypeNetworkLastVersionSaved UnindexedFieldURIType = "network:LastVersionSaved"

	UnindexedFieldURITypeNetworkDomainTag UnindexedFieldURIType = "network:DomainTag"

	UnindexedFieldURITypeNetworkFirstAuthErrorDates UnindexedFieldURIType = "network:FirstAuthErrorDates"

	UnindexedFieldURITypeNetworkErrorOffers UnindexedFieldURIType = "network:ErrorOffers"

	UnindexedFieldURITypeNetworkContactSyncSuccess UnindexedFieldURIType = "network:ContactSyncSuccess"

	UnindexedFieldURITypeNetworkContactSyncError UnindexedFieldURIType = "network:ContactSyncError"

	UnindexedFieldURITypeNetworkClientToken2 UnindexedFieldURIType = "network:ClientToken2"

	UnindexedFieldURITypeNetworkClientToken UnindexedFieldURIType = "network:ClientToken"

	UnindexedFieldURITypeNetworkClientPublishSecret UnindexedFieldURIType = "network:ClientPublishSecret"

	UnindexedFieldURITypeNetworkUserEmail UnindexedFieldURIType = "network:UserEmail"

	UnindexedFieldURITypeNetworkAutoLinkSuccess UnindexedFieldURIType = "network:AutoLinkSuccess"

	UnindexedFieldURITypeNetworkAutoLinkError UnindexedFieldURIType = "network:AutoLinkError"

	UnindexedFieldURITypeNetworkIsDefault UnindexedFieldURIType = "network:IsDefault"

	UnindexedFieldURITypeNetworkSettings UnindexedFieldURIType = "network:Settings"

	UnindexedFieldURITypeNetworkProfileUrl UnindexedFieldURIType = "network:ProfileUrl"

	UnindexedFieldURITypeNetworkUserTileUrl UnindexedFieldURIType = "network:UserTileUrl"

	UnindexedFieldURITypeNetworkDomainId UnindexedFieldURIType = "network:DomainId"

	UnindexedFieldURITypeNetworkDisplayName UnindexedFieldURIType = "network:DisplayName"

	UnindexedFieldURITypeNetworkAccountName UnindexedFieldURIType = "network:AccountName"

	UnindexedFieldURITypeNetworkSourceEntryID UnindexedFieldURIType = "network:SourceEntryID"

	UnindexedFieldURITypeAbchpersonFavoriteOrder UnindexedFieldURIType = "abchperson:FavoriteOrder"

	UnindexedFieldURITypeAbchpersonPersonId UnindexedFieldURIType = "abchperson:PersonId"

	UnindexedFieldURITypeAbchpersonExchangePersonIdGuid UnindexedFieldURIType = "abchperson:ExchangePersonIdGuid"

	UnindexedFieldURITypeAbchpersonAntiLinkInfo UnindexedFieldURIType = "abchperson:AntiLinkInfo"

	UnindexedFieldURITypeAbchpersonRelevanceOrder1 UnindexedFieldURIType = "abchperson:RelevanceOrder1"

	UnindexedFieldURITypeAbchpersonRelevanceOrder2 UnindexedFieldURIType = "abchperson:RelevanceOrder2"

	UnindexedFieldURITypeAbchpersonContactHandles UnindexedFieldURIType = "abchperson:ContactHandles"

	UnindexedFieldURITypeAbchpersonCategories UnindexedFieldURIType = "abchperson:Categories"

	UnindexedFieldURITypeBookingServiceIds UnindexedFieldURIType = "booking:ServiceIds"

	UnindexedFieldURITypeBookingStaffIds UnindexedFieldURIType = "booking:StaffIds"

	UnindexedFieldURITypeBookingStaffInitials UnindexedFieldURIType = "booking:StaffInitials"

	UnindexedFieldURITypeBookingCustomerName UnindexedFieldURIType = "booking:CustomerName"

	UnindexedFieldURITypeBookingCustomerEmail UnindexedFieldURIType = "booking:CustomerEmail"

	UnindexedFieldURITypeBookingCustomerPhone UnindexedFieldURIType = "booking:CustomerPhone"

	UnindexedFieldURITypeBookingCustomerId UnindexedFieldURIType = "booking:CustomerId"

	UnindexedFieldURITypeInsightInsightId UnindexedFieldURIType = "insight:InsightId"

	UnindexedFieldURITypeInsightType UnindexedFieldURIType = "insight:Type"

	UnindexedFieldURITypeInsightStartTimeUtc UnindexedFieldURIType = "insight:StartTimeUtc"

	UnindexedFieldURITypeInsightEndTimeUtc UnindexedFieldURIType = "insight:EndTimeUtc"

	UnindexedFieldURITypeInsightStatus UnindexedFieldURIType = "insight:Status"

	UnindexedFieldURITypeInsightVersion UnindexedFieldURIType = "insight:Version"

	UnindexedFieldURITypeInsightApplicationsIds UnindexedFieldURIType = "insight:ApplicationsIds"

	UnindexedFieldURITypeInsightText UnindexedFieldURIType = "insight:Text"

	UnindexedFieldURITypeInsightSuggestedActions UnindexedFieldURIType = "insight:SuggestedActions"

	UnindexedFieldURITypeInsightAppContexts UnindexedFieldURIType = "insight:AppContexts"
)

type DictionaryURIType string

const (
	DictionaryURITypeItemInternetMessageHeader DictionaryURIType = "item:InternetMessageHeader"

	DictionaryURITypeContactsImAddress DictionaryURIType = "contacts:ImAddress"

	DictionaryURITypeContactsPhysicalAddressStreet DictionaryURIType = "contacts:PhysicalAddress:Street"

	DictionaryURITypeContactsPhysicalAddressCity DictionaryURIType = "contacts:PhysicalAddress:City"

	DictionaryURITypeContactsPhysicalAddressState DictionaryURIType = "contacts:PhysicalAddress:State"

	DictionaryURITypeContactsPhysicalAddressCountryOrRegion DictionaryURIType = "contacts:PhysicalAddress:CountryOrRegion"

	DictionaryURITypeContactsPhysicalAddressPostalCode DictionaryURIType = "contacts:PhysicalAddress:PostalCode"

	DictionaryURITypeContactsPhoneNumber DictionaryURIType = "contacts:PhoneNumber"

	DictionaryURITypeContactsEmailAddress DictionaryURIType = "contacts:EmailAddress"

	DictionaryURITypeDistributionlistMembersMember DictionaryURIType = "distributionlist:Members:Member"
)

type ExceptionPropertyURIType string

const (
	ExceptionPropertyURITypeAttachmentName ExceptionPropertyURIType = "attachment:Name"

	ExceptionPropertyURITypeAttachmentContentType ExceptionPropertyURIType = "attachment:ContentType"

	ExceptionPropertyURITypeAttachmentContent ExceptionPropertyURIType = "attachment:Content"

	ExceptionPropertyURITypeRecurrenceMonth ExceptionPropertyURIType = "recurrence:Month"

	ExceptionPropertyURITypeRecurrenceDayOfWeekIndex ExceptionPropertyURIType = "recurrence:DayOfWeekIndex"

	ExceptionPropertyURITypeRecurrenceDaysOfWeek ExceptionPropertyURIType = "recurrence:DaysOfWeek"

	ExceptionPropertyURITypeRecurrenceDayOfMonth ExceptionPropertyURIType = "recurrence:DayOfMonth"

	ExceptionPropertyURITypeRecurrenceInterval ExceptionPropertyURIType = "recurrence:Interval"

	ExceptionPropertyURITypeRecurrenceNumberOfOccurrences ExceptionPropertyURIType = "recurrence:NumberOfOccurrences"

	ExceptionPropertyURITypeTimezoneOffset ExceptionPropertyURIType = "timezone:Offset"
)

// The regular expression captures the standard representation of a GUID

type GuidType string

// Defines the well known property set ids for extended properties.

type DistinguishedPropertySetType string

const (
	DistinguishedPropertySetTypeMeeting DistinguishedPropertySetType = "Meeting"

	DistinguishedPropertySetTypeAppointment DistinguishedPropertySetType = "Appointment"

	DistinguishedPropertySetTypeCommon DistinguishedPropertySetType = "Common"

	DistinguishedPropertySetTypePublicStrings DistinguishedPropertySetType = "PublicStrings"

	DistinguishedPropertySetTypeAddress DistinguishedPropertySetType = "Address"

	DistinguishedPropertySetTypeInternetHeaders DistinguishedPropertySetType = "InternetHeaders"

	DistinguishedPropertySetTypeCalendarAssistant DistinguishedPropertySetType = "CalendarAssistant"

	DistinguishedPropertySetTypeUnifiedMessaging DistinguishedPropertySetType = "UnifiedMessaging"

	DistinguishedPropertySetTypeTask DistinguishedPropertySetType = "Task"

	DistinguishedPropertySetTypeSharing DistinguishedPropertySetType = "Sharing"
)

// Includes all of the extended property types that we support. Note that Error, Null, Object and Object array can not be used in restrictions, or for setting/getting
// values. They are only there for error reporting purposes.

type MapiPropertyTypeType string

const (
	MapiPropertyTypeTypeApplicationTime MapiPropertyTypeType = "ApplicationTime"

	MapiPropertyTypeTypeApplicationTimeArray MapiPropertyTypeType = "ApplicationTimeArray"

	MapiPropertyTypeTypeBinary MapiPropertyTypeType = "Binary"

	MapiPropertyTypeTypeBinaryArray MapiPropertyTypeType = "BinaryArray"

	MapiPropertyTypeTypeBoolean MapiPropertyTypeType = "Boolean"

	MapiPropertyTypeTypeCLSID MapiPropertyTypeType = "CLSID"

	MapiPropertyTypeTypeCLSIDArray MapiPropertyTypeType = "CLSIDArray"

	MapiPropertyTypeTypeCurrency MapiPropertyTypeType = "Currency"

	MapiPropertyTypeTypeCurrencyArray MapiPropertyTypeType = "CurrencyArray"

	MapiPropertyTypeTypeDouble MapiPropertyTypeType = "Double"

	MapiPropertyTypeTypeDoubleArray MapiPropertyTypeType = "DoubleArray"

	MapiPropertyTypeTypeError MapiPropertyTypeType = "Error"

	MapiPropertyTypeTypeFloat MapiPropertyTypeType = "Float"

	MapiPropertyTypeTypeFloatArray MapiPropertyTypeType = "FloatArray"

	MapiPropertyTypeTypeInteger MapiPropertyTypeType = "Integer"

	MapiPropertyTypeTypeIntegerArray MapiPropertyTypeType = "IntegerArray"

	MapiPropertyTypeTypeLong MapiPropertyTypeType = "Long"

	MapiPropertyTypeTypeLongArray MapiPropertyTypeType = "LongArray"

	MapiPropertyTypeTypeNull MapiPropertyTypeType = "Null"

	MapiPropertyTypeTypeObject MapiPropertyTypeType = "Object"

	MapiPropertyTypeTypeObjectArray MapiPropertyTypeType = "ObjectArray"

	MapiPropertyTypeTypeShort MapiPropertyTypeType = "Short"

	MapiPropertyTypeTypeShortArray MapiPropertyTypeType = "ShortArray"

	MapiPropertyTypeTypeSystemTime MapiPropertyTypeType = "SystemTime"

	MapiPropertyTypeTypeSystemTimeArray MapiPropertyTypeType = "SystemTimeArray"

	MapiPropertyTypeTypeString MapiPropertyTypeType = "String"

	MapiPropertyTypeTypeStringArray MapiPropertyTypeType = "StringArray"
)

// This type represents the property tag (MINUS the type part). There are two options for representation: 1. Hex ==> 0x3fa4 2. Decimal ==> 0-65535

type PropertyTagType string

// Types of sub-tree traversal for deletion and enumeration

type FolderQueryTraversalType string

const (
	FolderQueryTraversalTypeShallow FolderQueryTraversalType = "Shallow"

	FolderQueryTraversalTypeDeep FolderQueryTraversalType = "Deep"

	FolderQueryTraversalTypeSoftDeleted FolderQueryTraversalType = "SoftDeleted"
)

// Types of sub-tree traversal for deletion and enumeration

type SearchFolderTraversalType string

const (
	SearchFolderTraversalTypeShallow SearchFolderTraversalType = "Shallow"

	SearchFolderTraversalTypeDeep SearchFolderTraversalType = "Deep"
)

// Types of sub-tree traversal for deletion and enumeration

type ItemQueryTraversalType string

const (
	ItemQueryTraversalTypeShallow ItemQueryTraversalType = "Shallow"

	ItemQueryTraversalTypeSoftDeleted ItemQueryTraversalType = "SoftDeleted"

	ItemQueryTraversalTypeAssociated ItemQueryTraversalType = "Associated"
)

// Types of sub-tree traversal for conversations

type ConversationQueryTraversalType string

const (
	ConversationQueryTraversalTypeShallow ConversationQueryTraversalType = "Shallow"

	ConversationQueryTraversalTypeDeep ConversationQueryTraversalType = "Deep"
)

type DefaultShapeNamesType string

const (
	DefaultShapeNamesTypeIdOnly DefaultShapeNamesType = "IdOnly"

	DefaultShapeNamesTypeDefault DefaultShapeNamesType = "Default"

	DefaultShapeNamesTypeAllProperties DefaultShapeNamesType = "AllProperties"

	DefaultShapeNamesTypePcxPeopleSearch DefaultShapeNamesType = "PcxPeopleSearch"
)

type BodyTypeResponseType string

const (
	BodyTypeResponseTypeBest BodyTypeResponseType = "Best"

	BodyTypeResponseTypeHTML BodyTypeResponseType = "HTML"

	BodyTypeResponseTypeText BodyTypeResponseType = "Text"
)

type DisposalType string

const (
	DisposalTypeHardDelete DisposalType = "HardDelete"

	DisposalTypeSoftDelete DisposalType = "SoftDelete"

	DisposalTypeMoveToDeletedItems DisposalType = "MoveToDeletedItems"
)

// Type of conflict resolution to attempt during update

type ConflictResolutionType string

const (
	ConflictResolutionTypeNeverOverwrite ConflictResolutionType = "NeverOverwrite"

	ConflictResolutionTypeAutoResolve ConflictResolutionType = "AutoResolve"

	ConflictResolutionTypeAlwaysOverwrite ConflictResolutionType = "AlwaysOverwrite"
)

type ClientAccessTokenTypeType string

const (
	ClientAccessTokenTypeTypeCallerIdentity ClientAccessTokenTypeType = "CallerIdentity"

	ClientAccessTokenTypeTypeExtensionCallback ClientAccessTokenTypeType = "ExtensionCallback"

	ClientAccessTokenTypeTypeScopedToken ClientAccessTokenTypeType = "ScopedToken"

	ClientAccessTokenTypeTypeExtensionRestApiCallback ClientAccessTokenTypeType = "ExtensionRestApiCallback"

	ClientAccessTokenTypeTypeConnectors ClientAccessTokenTypeType = "Connectors"

	ClientAccessTokenTypeTypeLoki ClientAccessTokenTypeType = "Loki"

	ClientAccessTokenTypeTypeDesktopOutlook ClientAccessTokenTypeType = "DesktopOutlook"
)

type ResponseClassType string

const (
	ResponseClassTypeSuccess ResponseClassType = "Success"

	ResponseClassTypeWarning ResponseClassType = "Warning"

	ResponseClassTypeError ResponseClassType = "Error"
)

type SensitivityChoicesType string

const (
	SensitivityChoicesTypeNormal SensitivityChoicesType = "Normal"

	SensitivityChoicesTypePersonal SensitivityChoicesType = "Personal"

	SensitivityChoicesTypePrivate SensitivityChoicesType = "Private"

	SensitivityChoicesTypeConfidential SensitivityChoicesType = "Confidential"
)

type ImportanceChoicesType string

const (
	ImportanceChoicesTypeLow ImportanceChoicesType = "Low"

	ImportanceChoicesTypeNormal ImportanceChoicesType = "Normal"

	ImportanceChoicesTypeHigh ImportanceChoicesType = "High"
)

type BodyTypeType string

const (
	BodyTypeTypeHTML BodyTypeType = "HTML"

	BodyTypeTypeText BodyTypeType = "Text"
)

type FolderClassType string

// URIs for the distinguished folders accessible from a mailbox

type DistinguishedFolderIdNameType string

const (
	DistinguishedFolderIdNameTypeCalendar DistinguishedFolderIdNameType = "calendar"

	DistinguishedFolderIdNameTypeContacts DistinguishedFolderIdNameType = "contacts"

	DistinguishedFolderIdNameTypeDeleteditems DistinguishedFolderIdNameType = "deleteditems"

	DistinguishedFolderIdNameTypeDrafts DistinguishedFolderIdNameType = "drafts"

	DistinguishedFolderIdNameTypeInbox DistinguishedFolderIdNameType = "inbox"

	DistinguishedFolderIdNameTypeJournal DistinguishedFolderIdNameType = "journal"

	DistinguishedFolderIdNameTypeNotes DistinguishedFolderIdNameType = "notes"

	DistinguishedFolderIdNameTypeOutbox DistinguishedFolderIdNameType = "outbox"

	DistinguishedFolderIdNameTypeSentitems DistinguishedFolderIdNameType = "sentitems"

	DistinguishedFolderIdNameTypeTasks DistinguishedFolderIdNameType = "tasks"

	DistinguishedFolderIdNameTypeMsgfolderroot DistinguishedFolderIdNameType = "msgfolderroot"

	DistinguishedFolderIdNameTypePublicfoldersroot DistinguishedFolderIdNameType = "publicfoldersroot"

	DistinguishedFolderIdNameTypeRoot DistinguishedFolderIdNameType = "root"

	DistinguishedFolderIdNameTypeJunkemail DistinguishedFolderIdNameType = "junkemail"

	DistinguishedFolderIdNameTypeSearchfolders DistinguishedFolderIdNameType = "searchfolders"

	DistinguishedFolderIdNameTypeVoicemail DistinguishedFolderIdNameType = "voicemail"

	DistinguishedFolderIdNameTypeRecoverableitemsroot DistinguishedFolderIdNameType = "recoverableitemsroot"

	DistinguishedFolderIdNameTypeRecoverableitemsdeletions DistinguishedFolderIdNameType = "recoverableitemsdeletions"

	DistinguishedFolderIdNameTypeRecoverableitemsversions DistinguishedFolderIdNameType = "recoverableitemsversions"

	DistinguishedFolderIdNameTypeRecoverableitemspurges DistinguishedFolderIdNameType = "recoverableitemspurges"

	DistinguishedFolderIdNameTypeRecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "recoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeArchiveroot DistinguishedFolderIdNameType = "archiveroot"

	DistinguishedFolderIdNameTypeArchivemsgfolderroot DistinguishedFolderIdNameType = "archivemsgfolderroot"

	DistinguishedFolderIdNameTypeArchivedeleteditems DistinguishedFolderIdNameType = "archivedeleteditems"

	DistinguishedFolderIdNameTypeArchiveinbox DistinguishedFolderIdNameType = "archiveinbox"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsroot DistinguishedFolderIdNameType = "archiverecoverableitemsroot"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdeletions DistinguishedFolderIdNameType = "archiverecoverableitemsdeletions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsversions DistinguishedFolderIdNameType = "archiverecoverableitemsversions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemspurges DistinguishedFolderIdNameType = "archiverecoverableitemspurges"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "archiverecoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeSyncissues DistinguishedFolderIdNameType = "syncissues"

	DistinguishedFolderIdNameTypeConflicts DistinguishedFolderIdNameType = "conflicts"

	DistinguishedFolderIdNameTypeLocalfailures DistinguishedFolderIdNameType = "localfailures"

	DistinguishedFolderIdNameTypeServerfailures DistinguishedFolderIdNameType = "serverfailures"

	DistinguishedFolderIdNameTypeRecipientcache DistinguishedFolderIdNameType = "recipientcache"

	DistinguishedFolderIdNameTypeQuickcontacts DistinguishedFolderIdNameType = "quickcontacts"

	DistinguishedFolderIdNameTypeConversationhistory DistinguishedFolderIdNameType = "conversationhistory"

	DistinguishedFolderIdNameTypeAdminauditlogs DistinguishedFolderIdNameType = "adminauditlogs"

	DistinguishedFolderIdNameTypeTodosearch DistinguishedFolderIdNameType = "todosearch"

	DistinguishedFolderIdNameTypeMycontacts DistinguishedFolderIdNameType = "mycontacts"

	DistinguishedFolderIdNameTypeDirectory DistinguishedFolderIdNameType = "directory"

	DistinguishedFolderIdNameTypeImcontactlist DistinguishedFolderIdNameType = "imcontactlist"

	DistinguishedFolderIdNameTypePeopleconnect DistinguishedFolderIdNameType = "peopleconnect"

	DistinguishedFolderIdNameTypeFavorites DistinguishedFolderIdNameType = "favorites"

	DistinguishedFolderIdNameTypeMecontact DistinguishedFolderIdNameType = "mecontact"

	DistinguishedFolderIdNameTypePersonmetadata DistinguishedFolderIdNameType = "personmetadata"

	DistinguishedFolderIdNameTypeTeamspaceactivity DistinguishedFolderIdNameType = "teamspaceactivity"

	DistinguishedFolderIdNameTypeTeamspacemessaging DistinguishedFolderIdNameType = "teamspacemessaging"

	DistinguishedFolderIdNameTypeTeamspaceworkitems DistinguishedFolderIdNameType = "teamspaceworkitems"

	DistinguishedFolderIdNameTypeScheduled DistinguishedFolderIdNameType = "scheduled"

	DistinguishedFolderIdNameTypeOrionnotes DistinguishedFolderIdNameType = "orionnotes"

	DistinguishedFolderIdNameTypeTagitems DistinguishedFolderIdNameType = "tagitems"

	DistinguishedFolderIdNameTypeAlltaggeditems DistinguishedFolderIdNameType = "alltaggeditems"

	DistinguishedFolderIdNameTypeExternalcontacts DistinguishedFolderIdNameType = "externalcontacts"

	DistinguishedFolderIdNameTypeTeamchat DistinguishedFolderIdNameType = "teamchat"

	DistinguishedFolderIdNameTypeTeamchathistory DistinguishedFolderIdNameType = "teamchathistory"

	DistinguishedFolderIdNameTypeYammerroot DistinguishedFolderIdNameType = "yammerroot"

	DistinguishedFolderIdNameTypeYammerinbound DistinguishedFolderIdNameType = "yammerinbound"

	DistinguishedFolderIdNameTypeYammeroutbound DistinguishedFolderIdNameType = "yammeroutbound"

	DistinguishedFolderIdNameTypeYammerfeeds DistinguishedFolderIdNameType = "yammerfeeds"

	DistinguishedFolderIdNameTypeOnedriveroot DistinguishedFolderIdNameType = "onedriveroot"

	DistinguishedFolderIdNameTypeOnedriverecylebin DistinguishedFolderIdNameType = "onedriverecylebin"

	DistinguishedFolderIdNameTypeOnedrivesystem DistinguishedFolderIdNameType = "onedrivesystem"

	DistinguishedFolderIdNameTypeOnedrivevolume DistinguishedFolderIdNameType = "onedrivevolume"

	DistinguishedFolderIdNameTypeImportant DistinguishedFolderIdNameType = "important"

	DistinguishedFolderIdNameTypeStarred DistinguishedFolderIdNameType = "starred"

	DistinguishedFolderIdNameTypeArchive DistinguishedFolderIdNameType = "archive"
)

type CreateActionType string

const (
	CreateActionTypeCreateNew CreateActionType = "CreateNew"

	CreateActionTypeUpdate CreateActionType = "Update"

	CreateActionTypeUpdateOrCreate CreateActionType = "UpdateOrCreate"
)

type CompleteActionType string

const (
	CompleteActionTypeCommit CompleteActionType = "Commit"

	CompleteActionTypeAbandon CompleteActionType = "Abandon"
)

// Types of view filters for finding items/conversations

type ViewFilterType string

const (
	ViewFilterTypeAll ViewFilterType = "All"

	ViewFilterTypeFlagged ViewFilterType = "Flagged"

	ViewFilterTypeHasAttachment ViewFilterType = "HasAttachment"

	ViewFilterTypeToOrCcMe ViewFilterType = "ToOrCcMe"

	ViewFilterTypeUnread ViewFilterType = "Unread"

	ViewFilterTypeTaskActive ViewFilterType = "TaskActive"

	ViewFilterTypeTaskOverdue ViewFilterType = "TaskOverdue"

	ViewFilterTypeTaskCompleted ViewFilterType = "TaskCompleted"

	ViewFilterTypeNoClutter ViewFilterType = "NoClutter"

	ViewFilterTypeClutter ViewFilterType = "Clutter"
)

type ReminderActionType string

const (
	ReminderActionTypeDismiss ReminderActionType = "Dismiss"

	ReminderActionTypeSnooze ReminderActionType = "Snooze"
)

type DerivedItemIdType string

type ItemClassType string

type FlagStatusType string

const (
	FlagStatusTypeNotFlagged FlagStatusType = "NotFlagged"

	FlagStatusTypeFlagged FlagStatusType = "Flagged"

	FlagStatusTypeComplete FlagStatusType = "Complete"
)

type PredictedActionReasonType string

const (
	PredictedActionReasonTypeNone PredictedActionReasonType = "None"

	PredictedActionReasonTypeConversationStarterIsYou PredictedActionReasonType = "ConversationStarterIsYou"

	PredictedActionReasonTypeOnlyRecipient PredictedActionReasonType = "OnlyRecipient"

	PredictedActionReasonTypeConversationContributions PredictedActionReasonType = "ConversationContributions"

	PredictedActionReasonTypeMarkedImportantBySender PredictedActionReasonType = "MarkedImportantBySender"

	PredictedActionReasonTypeSenderIsManager PredictedActionReasonType = "SenderIsManager"

	PredictedActionReasonTypeSenderIsInManagementChain PredictedActionReasonType = "SenderIsInManagementChain"

	PredictedActionReasonTypeSenderIsDirectReport PredictedActionReasonType = "SenderIsDirectReport"

	PredictedActionReasonTypeActionBasedOnSender PredictedActionReasonType = "ActionBasedOnSender"

	PredictedActionReasonTypeNameOnToLine PredictedActionReasonType = "NameOnToLine"

	PredictedActionReasonTypeNameOnCcLine PredictedActionReasonType = "NameOnCcLine"

	PredictedActionReasonTypeManagerPosition PredictedActionReasonType = "ManagerPosition"

	PredictedActionReasonTypeReplyToAMessageFromMe PredictedActionReasonType = "ReplyToAMessageFromMe"

	PredictedActionReasonTypePreviouslyFlagged PredictedActionReasonType = "PreviouslyFlagged"

	PredictedActionReasonTypeActionBasedOnRecipients PredictedActionReasonType = "ActionBasedOnRecipients"

	PredictedActionReasonTypeActionBasedOnSubjectWords PredictedActionReasonType = "ActionBasedOnSubjectWords"

	PredictedActionReasonTypeActionBasedOnBasedOnBodyWords PredictedActionReasonType = "ActionBasedOnBasedOnBodyWords"
)

type EmailPositionType string

const (
	EmailPositionTypeLatestReply EmailPositionType = "LatestReply"

	EmailPositionTypeOther EmailPositionType = "Other"

	EmailPositionTypeSubject EmailPositionType = "Subject"

	EmailPositionTypeSignature EmailPositionType = "Signature"
)

type InferenceClassificationType string

const (
	InferenceClassificationTypeFocused InferenceClassificationType = "Focused"

	InferenceClassificationTypeOther InferenceClassificationType = "Other"
)

type ConversationActionTypeType string

const (
	ConversationActionTypeTypeAlwaysCategorize ConversationActionTypeType = "AlwaysCategorize"

	ConversationActionTypeTypeAlwaysDelete ConversationActionTypeType = "AlwaysDelete"

	ConversationActionTypeTypeAlwaysMove ConversationActionTypeType = "AlwaysMove"

	ConversationActionTypeTypeDelete ConversationActionTypeType = "Delete"

	ConversationActionTypeTypeMove ConversationActionTypeType = "Move"

	ConversationActionTypeTypeCopy ConversationActionTypeType = "Copy"

	ConversationActionTypeTypeSetReadState ConversationActionTypeType = "SetReadState"

	ConversationActionTypeTypeSetRetentionPolicy ConversationActionTypeType = "SetRetentionPolicy"

	ConversationActionTypeTypeFlag ConversationActionTypeType = "Flag"
)

type ConversationNodeSortOrder string

const (
	ConversationNodeSortOrderTreeOrderAscending ConversationNodeSortOrder = "TreeOrderAscending"

	ConversationNodeSortOrderTreeOrderDescending ConversationNodeSortOrder = "TreeOrderDescending"

	ConversationNodeSortOrderDateOrderAscending ConversationNodeSortOrder = "DateOrderAscending"

	ConversationNodeSortOrderDateOrderDescending ConversationNodeSortOrder = "DateOrderDescending"
)

type TokenSourceType string

const (
	TokenSourceTypeNone TokenSourceType = "None"

	TokenSourceTypeLinkedIn TokenSourceType = "LinkedIn"
)

type GroupMailboxConfigurationActionType interface{}

type InstantSearchItemType interface{}

type InstantSearchResultType interface{}

type QueryOptionsType interface{}

type OneDriveViewType interface{}

type DelveViewType interface{}

type GroupMemberIdentifierType string

const (
	GroupMemberIdentifierTypeExternalDirectoryObjectId GroupMemberIdentifierType = "ExternalDirectoryObjectId"

	GroupMemberIdentifierTypeLegacyExchangeDN GroupMemberIdentifierType = "LegacyExchangeDN"

	GroupMemberIdentifierTypeSmtpAddress GroupMemberIdentifierType = "SmtpAddress"
)

type ModernGroupTypeType string

const (
	ModernGroupTypeTypeNone ModernGroupTypeType = "None"

	ModernGroupTypeTypePrivate ModernGroupTypeType = "Private"

	ModernGroupTypeTypeSecret ModernGroupTypeType = "Secret"

	ModernGroupTypeTypePublic ModernGroupTypeType = "Public"
)

type MessageDispositionType string

const (
	MessageDispositionTypeSaveOnly MessageDispositionType = "SaveOnly"

	MessageDispositionTypeSendOnly MessageDispositionType = "SendOnly"

	MessageDispositionTypeSendAndSaveCopy MessageDispositionType = "SendAndSaveCopy"
)

type CalendarItemCreateOrDeleteOperationType string

const (
	CalendarItemCreateOrDeleteOperationTypeSendToNone CalendarItemCreateOrDeleteOperationType = "SendToNone"

	CalendarItemCreateOrDeleteOperationTypeSendOnlyToAll CalendarItemCreateOrDeleteOperationType = "SendOnlyToAll"

	CalendarItemCreateOrDeleteOperationTypeSendToAllAndSaveCopy CalendarItemCreateOrDeleteOperationType = "SendToAllAndSaveCopy"
)

type CalendarItemUpdateOperationType string

const (
	CalendarItemUpdateOperationTypeSendToNone CalendarItemUpdateOperationType = "SendToNone"

	CalendarItemUpdateOperationTypeSendOnlyToAll CalendarItemUpdateOperationType = "SendOnlyToAll"

	CalendarItemUpdateOperationTypeSendOnlyToChanged CalendarItemUpdateOperationType = "SendOnlyToChanged"

	CalendarItemUpdateOperationTypeSendToAllAndSaveCopy CalendarItemUpdateOperationType = "SendToAllAndSaveCopy"

	CalendarItemUpdateOperationTypeSendToChangedAndSaveCopy CalendarItemUpdateOperationType = "SendToChangedAndSaveCopy"
)

type AffectedTaskOccurrencesType string

const (
	AffectedTaskOccurrencesTypeAllOccurrences AffectedTaskOccurrencesType = "AllOccurrences"

	AffectedTaskOccurrencesTypeSpecifiedOccurrenceOnly AffectedTaskOccurrencesType = "SpecifiedOccurrenceOnly"
)

type TaskStatusType string

const (
	TaskStatusTypeNotStarted TaskStatusType = "NotStarted"

	TaskStatusTypeInProgress TaskStatusType = "InProgress"

	TaskStatusTypeCompleted TaskStatusType = "Completed"

	TaskStatusTypeWaitingOnOthers TaskStatusType = "WaitingOnOthers"

	TaskStatusTypeDeferred TaskStatusType = "Deferred"
)

type TaskDelegateStateType string

const (
	TaskDelegateStateTypeNoMatch TaskDelegateStateType = "NoMatch"

	TaskDelegateStateTypeOwnNew TaskDelegateStateType = "OwnNew"

	TaskDelegateStateTypeOwned TaskDelegateStateType = "Owned"

	TaskDelegateStateTypeAccepted TaskDelegateStateType = "Accepted"

	TaskDelegateStateTypeDeclined TaskDelegateStateType = "Declined"

	TaskDelegateStateTypeMax TaskDelegateStateType = "Max"
)

type SharingActionImportance string

const (
	SharingActionImportancePrimary SharingActionImportance = "Primary"

	SharingActionImportanceSecondary SharingActionImportance = "Secondary"
)

type SharingAction string

const (
	SharingActionAcceptAndViewCalendar SharingAction = "AcceptAndViewCalendar"

	SharingActionViewCalendar SharingAction = "ViewCalendar"

	SharingActionAddThisCalendar SharingAction = "AddThisCalendar"

	SharingActionAccept SharingAction = "Accept"
)

type SharingActionType string

const (
	SharingActionTypeAccept SharingActionType = "Accept"
)

type IndexBasePointType string

const (
	IndexBasePointTypeBeginning IndexBasePointType = "Beginning"

	IndexBasePointTypeEnd IndexBasePointType = "End"
)

type ResolveNamesSearchScopeType string

const (
	ResolveNamesSearchScopeTypeActiveDirectory ResolveNamesSearchScopeType = "ActiveDirectory"

	ResolveNamesSearchScopeTypeActiveDirectoryContacts ResolveNamesSearchScopeType = "ActiveDirectoryContacts"

	ResolveNamesSearchScopeTypeContacts ResolveNamesSearchScopeType = "Contacts"

	ResolveNamesSearchScopeTypeContactsActiveDirectory ResolveNamesSearchScopeType = "ContactsActiveDirectory"
)

type MeetingRequestTypeType string

const (
	MeetingRequestTypeTypeNone MeetingRequestTypeType = "None"

	MeetingRequestTypeTypeFullUpdate MeetingRequestTypeType = "FullUpdate"

	MeetingRequestTypeTypeInformationalUpdate MeetingRequestTypeType = "InformationalUpdate"

	MeetingRequestTypeTypeNewMeetingRequest MeetingRequestTypeType = "NewMeetingRequest"

	MeetingRequestTypeTypeOutdated MeetingRequestTypeType = "Outdated"

	MeetingRequestTypeTypeSilentUpdate MeetingRequestTypeType = "SilentUpdate"

	MeetingRequestTypeTypePrincipalWantsCopy MeetingRequestTypeType = "PrincipalWantsCopy"
)

type ReminderMinutesBeforeStartType string

type AvailabilityStatusType string

const (
	AvailabilityStatusTypeUnknown AvailabilityStatusType = "Unknown"

	AvailabilityStatusTypeFree AvailabilityStatusType = "Free"

	AvailabilityStatusTypeTentative AvailabilityStatusType = "Tentative"

	AvailabilityStatusTypeBusy AvailabilityStatusType = "Busy"

	AvailabilityStatusTypeOof AvailabilityStatusType = "Oof"

	AvailabilityStatusTypeWorkingElsewhere AvailabilityStatusType = "WorkingElsewhere"
)

type LegacyFreeBusyType string

const (
	LegacyFreeBusyTypeFree LegacyFreeBusyType = "Free"

	LegacyFreeBusyTypeTentative LegacyFreeBusyType = "Tentative"

	LegacyFreeBusyTypeBusy LegacyFreeBusyType = "Busy"

	LegacyFreeBusyTypeOOF LegacyFreeBusyType = "OOF"

	LegacyFreeBusyTypeWorkingElsewhere LegacyFreeBusyType = "WorkingElsewhere"

	LegacyFreeBusyTypeNoData LegacyFreeBusyType = "NoData"
)

type CalendarItemTypeType string

const (
	CalendarItemTypeTypeSingle CalendarItemTypeType = "Single"

	CalendarItemTypeTypeOccurrence CalendarItemTypeType = "Occurrence"

	CalendarItemTypeTypeException CalendarItemTypeType = "Exception"

	CalendarItemTypeTypeRecurringMaster CalendarItemTypeType = "RecurringMaster"
)

type ResponseTypeType string

const (
	ResponseTypeTypeUnknown ResponseTypeType = "Unknown"

	ResponseTypeTypeOrganizer ResponseTypeType = "Organizer"

	ResponseTypeTypeTentative ResponseTypeType = "Tentative"

	ResponseTypeTypeAccept ResponseTypeType = "Accept"

	ResponseTypeTypeDecline ResponseTypeType = "Decline"

	ResponseTypeTypeNoResponseReceived ResponseTypeType = "NoResponseReceived"
)

type LobbyBypassType string

const (
	LobbyBypassTypeDisabled LobbyBypassType = "Disabled"

	LobbyBypassTypeEnabledForGatewayParticipants LobbyBypassType = "EnabledForGatewayParticipants"
)

type OnlineMeetingAccessLevelType string

const (
	OnlineMeetingAccessLevelTypeLocked OnlineMeetingAccessLevelType = "Locked"

	OnlineMeetingAccessLevelTypeInvited OnlineMeetingAccessLevelType = "Invited"

	OnlineMeetingAccessLevelTypeInternal OnlineMeetingAccessLevelType = "Internal"

	OnlineMeetingAccessLevelTypeEveryone OnlineMeetingAccessLevelType = "Everyone"
)

type PresentersType string

const (
	PresentersTypeDisabled PresentersType = "Disabled"

	PresentersTypeInternal PresentersType = "Internal"

	PresentersTypeEveryone PresentersType = "Everyone"
)

type DayOfWeekType string

const (
	DayOfWeekTypeSunday DayOfWeekType = "Sunday"

	DayOfWeekTypeMonday DayOfWeekType = "Monday"

	DayOfWeekTypeTuesday DayOfWeekType = "Tuesday"

	DayOfWeekTypeWednesday DayOfWeekType = "Wednesday"

	DayOfWeekTypeThursday DayOfWeekType = "Thursday"

	DayOfWeekTypeFriday DayOfWeekType = "Friday"

	DayOfWeekTypeSaturday DayOfWeekType = "Saturday"

	DayOfWeekTypeDay DayOfWeekType = "Day"

	DayOfWeekTypeWeekday DayOfWeekType = "Weekday"

	DayOfWeekTypeWeekendDay DayOfWeekType = "WeekendDay"
)

type DaysOfWeekType []DayOfWeekType

type DayOfWeekIndexType string

const (
	DayOfWeekIndexTypeFirst DayOfWeekIndexType = "First"

	DayOfWeekIndexTypeSecond DayOfWeekIndexType = "Second"

	DayOfWeekIndexTypeThird DayOfWeekIndexType = "Third"

	DayOfWeekIndexTypeFourth DayOfWeekIndexType = "Fourth"

	DayOfWeekIndexTypeLast DayOfWeekIndexType = "Last"
)

type MonthNamesType string

const (
	MonthNamesTypeJanuary MonthNamesType = "January"

	MonthNamesTypeFebruary MonthNamesType = "February"

	MonthNamesTypeMarch MonthNamesType = "March"

	MonthNamesTypeApril MonthNamesType = "April"

	MonthNamesTypeMay MonthNamesType = "May"

	MonthNamesTypeJune MonthNamesType = "June"

	MonthNamesTypeJuly MonthNamesType = "July"

	MonthNamesTypeAugust MonthNamesType = "August"

	MonthNamesTypeSeptember MonthNamesType = "September"

	MonthNamesTypeOctober MonthNamesType = "October"

	MonthNamesTypeNovember MonthNamesType = "November"

	MonthNamesTypeDecember MonthNamesType = "December"
)

type LocationSourceType string

const (
	LocationSourceTypeNone LocationSourceType = "None"

	LocationSourceTypeLocationServices LocationSourceType = "LocationServices"

	LocationSourceTypePhonebookServices LocationSourceType = "PhonebookServices"

	LocationSourceTypeDevice LocationSourceType = "Device"

	LocationSourceTypeContact LocationSourceType = "Contact"

	LocationSourceTypeResource LocationSourceType = "Resource"
)

type TransitionTargetKindType string

const (
	TransitionTargetKindTypePeriod TransitionTargetKindType = "Period"

	TransitionTargetKindTypeGroup TransitionTargetKindType = "Group"
)

type RoleMemberTypeType string

const (
	RoleMemberTypeTypeNone RoleMemberTypeType = "None"

	RoleMemberTypeTypePassport RoleMemberTypeType = "Passport"

	RoleMemberTypeTypeEveryone RoleMemberTypeType = "Everyone"

	RoleMemberTypeTypeEmail RoleMemberTypeType = "Email"

	RoleMemberTypeTypePhone RoleMemberTypeType = "Phone"

	RoleMemberTypeTypeSkypeId RoleMemberTypeType = "SkypeId"

	RoleMemberTypeTypeExternalId RoleMemberTypeType = "ExternalId"

	RoleMemberTypeTypeGroup RoleMemberTypeType = "Group"

	RoleMemberTypeTypeGuid RoleMemberTypeType = "Guid"

	RoleMemberTypeTypeRole RoleMemberTypeType = "Role"

	RoleMemberTypeTypeService RoleMemberTypeType = "Service"

	RoleMemberTypeTypeCircle RoleMemberTypeType = "Circle"

	RoleMemberTypeTypeDomain RoleMemberTypeType = "Domain"

	RoleMemberTypeTypePartner RoleMemberTypeType = "Partner"
)

type ImAddressKeyType string

const (
	ImAddressKeyTypeImAddress1 ImAddressKeyType = "ImAddress1"

	ImAddressKeyTypeImAddress2 ImAddressKeyType = "ImAddress2"

	ImAddressKeyTypeImAddress3 ImAddressKeyType = "ImAddress3"
)

type EmailAddressKeyType string

const (
	EmailAddressKeyTypeEmailAddress1 EmailAddressKeyType = "EmailAddress1"

	EmailAddressKeyTypeEmailAddress2 EmailAddressKeyType = "EmailAddress2"

	EmailAddressKeyTypeEmailAddress3 EmailAddressKeyType = "EmailAddress3"
)

type AbchEmailAddressTypeType string

const (
	AbchEmailAddressTypeTypePersonal AbchEmailAddressTypeType = "Personal"

	AbchEmailAddressTypeTypeBusiness AbchEmailAddressTypeType = "Business"

	AbchEmailAddressTypeTypeOther AbchEmailAddressTypeType = "Other"

	AbchEmailAddressTypeTypePassport AbchEmailAddressTypeType = "Passport"
)

type ContactUrlKeyType string

const (
	ContactUrlKeyTypePersonal ContactUrlKeyType = "Personal"

	ContactUrlKeyTypeBusiness ContactUrlKeyType = "Business"

	ContactUrlKeyTypeAttachment ContactUrlKeyType = "Attachment"

	ContactUrlKeyTypeEbcDisplayDefinition ContactUrlKeyType = "EbcDisplayDefinition"

	ContactUrlKeyTypeEbcFinalImage ContactUrlKeyType = "EbcFinalImage"

	ContactUrlKeyTypeEbcLogo ContactUrlKeyType = "EbcLogo"

	ContactUrlKeyTypeFeed ContactUrlKeyType = "Feed"

	ContactUrlKeyTypeImage ContactUrlKeyType = "Image"

	ContactUrlKeyTypeInternalMarker ContactUrlKeyType = "InternalMarker"

	ContactUrlKeyTypeOther ContactUrlKeyType = "Other"
)

type PhoneNumberKeyType string

const (
	PhoneNumberKeyTypeAssistantPhone PhoneNumberKeyType = "AssistantPhone"

	PhoneNumberKeyTypeBusinessFax PhoneNumberKeyType = "BusinessFax"

	PhoneNumberKeyTypeBusinessPhone PhoneNumberKeyType = "BusinessPhone"

	PhoneNumberKeyTypeBusinessPhone2 PhoneNumberKeyType = "BusinessPhone2"

	PhoneNumberKeyTypeCallback PhoneNumberKeyType = "Callback"

	PhoneNumberKeyTypeCarPhone PhoneNumberKeyType = "CarPhone"

	PhoneNumberKeyTypeCompanyMainPhone PhoneNumberKeyType = "CompanyMainPhone"

	PhoneNumberKeyTypeHomeFax PhoneNumberKeyType = "HomeFax"

	PhoneNumberKeyTypeHomePhone PhoneNumberKeyType = "HomePhone"

	PhoneNumberKeyTypeHomePhone2 PhoneNumberKeyType = "HomePhone2"

	PhoneNumberKeyTypeIsdn PhoneNumberKeyType = "Isdn"

	PhoneNumberKeyTypeMobilePhone PhoneNumberKeyType = "MobilePhone"

	PhoneNumberKeyTypeOtherFax PhoneNumberKeyType = "OtherFax"

	PhoneNumberKeyTypeOtherTelephone PhoneNumberKeyType = "OtherTelephone"

	PhoneNumberKeyTypePager PhoneNumberKeyType = "Pager"

	PhoneNumberKeyTypePrimaryPhone PhoneNumberKeyType = "PrimaryPhone"

	PhoneNumberKeyTypeRadioPhone PhoneNumberKeyType = "RadioPhone"

	PhoneNumberKeyTypeTelex PhoneNumberKeyType = "Telex"

	PhoneNumberKeyTypeTtyTddPhone PhoneNumberKeyType = "TtyTddPhone"

	PhoneNumberKeyTypeBusinessMobile PhoneNumberKeyType = "BusinessMobile"

	PhoneNumberKeyTypeIPPhone PhoneNumberKeyType = "IPPhone"

	PhoneNumberKeyTypeMms PhoneNumberKeyType = "Mms"

	PhoneNumberKeyTypeMsn PhoneNumberKeyType = "Msn"
)

type PhysicalAddressIndexType string

const (
	PhysicalAddressIndexTypeNone PhysicalAddressIndexType = "None"

	PhysicalAddressIndexTypeHome PhysicalAddressIndexType = "Home"

	PhysicalAddressIndexTypeBusiness PhysicalAddressIndexType = "Business"

	PhysicalAddressIndexTypeOther PhysicalAddressIndexType = "Other"
)

type PhysicalAddressKeyType string

const (
	PhysicalAddressKeyTypeHome PhysicalAddressKeyType = "Home"

	PhysicalAddressKeyTypeBusiness PhysicalAddressKeyType = "Business"

	PhysicalAddressKeyTypeOther PhysicalAddressKeyType = "Other"
)

type FileAsMappingType string

const (
	FileAsMappingTypeNone FileAsMappingType = "None"

	FileAsMappingTypeLastCommaFirst FileAsMappingType = "LastCommaFirst"

	FileAsMappingTypeFirstSpaceLast FileAsMappingType = "FirstSpaceLast"

	FileAsMappingTypeCompany FileAsMappingType = "Company"

	FileAsMappingTypeLastCommaFirstCompany FileAsMappingType = "LastCommaFirstCompany"

	FileAsMappingTypeCompanyLastFirst FileAsMappingType = "CompanyLastFirst"

	FileAsMappingTypeLastFirst FileAsMappingType = "LastFirst"

	FileAsMappingTypeLastFirstCompany FileAsMappingType = "LastFirstCompany"

	FileAsMappingTypeCompanyLastCommaFirst FileAsMappingType = "CompanyLastCommaFirst"

	FileAsMappingTypeLastFirstSuffix FileAsMappingType = "LastFirstSuffix"

	FileAsMappingTypeLastSpaceFirstCompany FileAsMappingType = "LastSpaceFirstCompany"

	FileAsMappingTypeCompanyLastSpaceFirst FileAsMappingType = "CompanyLastSpaceFirst"

	FileAsMappingTypeLastSpaceFirst FileAsMappingType = "LastSpaceFirst"

	FileAsMappingTypeDisplayName FileAsMappingType = "DisplayName"

	FileAsMappingTypeFirstName FileAsMappingType = "FirstName"

	FileAsMappingTypeLastFirstMiddleSuffix FileAsMappingType = "LastFirstMiddleSuffix"

	FileAsMappingTypeLastName FileAsMappingType = "LastName"

	FileAsMappingTypeEmpty FileAsMappingType = "Empty"
)

type ContactSourceType string

const (
	ContactSourceTypeActiveDirectory ContactSourceType = "ActiveDirectory"

	ContactSourceTypeStore ContactSourceType = "Store"
)

type MemberStatusType string

const (
	MemberStatusTypeUnrecognized MemberStatusType = "Unrecognized"

	MemberStatusTypeNormal MemberStatusType = "Normal"

	MemberStatusTypeDemoted MemberStatusType = "Demoted"
)

// This max/min evaluation is applied to the field specified within the group by instance for EACH item within that group. This determines which item from each group is to
// be selected as the representative for that group.

type AggregateType string

const (
	AggregateTypeMinimum AggregateType = "Minimum"

	AggregateTypeMaximum AggregateType = "Maximum"
)

// Represents standard groupings for GroupBy queries.

type StandardGroupByType string

const (
	StandardGroupByTypeConversationTopic StandardGroupByType = "ConversationTopic"
)

type ExcludesAttributeType string

type ContainmentModeType string

const (
	ContainmentModeTypeFullString ContainmentModeType = "FullString"

	ContainmentModeTypePrefixed ContainmentModeType = "Prefixed"

	ContainmentModeTypeSubstring ContainmentModeType = "Substring"

	ContainmentModeTypePrefixOnWords ContainmentModeType = "PrefixOnWords"

	ContainmentModeTypeExactPhrase ContainmentModeType = "ExactPhrase"
)

type ContainmentComparisonType string

const (
	ContainmentComparisonTypeExact ContainmentComparisonType = "Exact"

	ContainmentComparisonTypeIgnoreCase ContainmentComparisonType = "IgnoreCase"

	ContainmentComparisonTypeIgnoreNonSpacingCharacters ContainmentComparisonType = "IgnoreNonSpacingCharacters"

	ContainmentComparisonTypeLoose ContainmentComparisonType = "Loose"

	ContainmentComparisonTypeIgnoreCaseAndNonSpacingCharacters ContainmentComparisonType = "IgnoreCaseAndNonSpacingCharacters"

	ContainmentComparisonTypeLooseAndIgnoreCase ContainmentComparisonType = "LooseAndIgnoreCase"

	ContainmentComparisonTypeLooseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreNonSpace"

	ContainmentComparisonTypeLooseAndIgnoreCaseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreCaseAndIgnoreNonSpace"
)

type SortDirectionType string

const (
	SortDirectionTypeAscending SortDirectionType = "Ascending"

	SortDirectionTypeDescending SortDirectionType = "Descending"
)

type WatermarkType NonEmptyStringType

type SubscriptionIdType NonEmptyStringType

type NotificationEventTypeType string

const (
	NotificationEventTypeTypeCopiedEvent NotificationEventTypeType = "CopiedEvent"

	NotificationEventTypeTypeCreatedEvent NotificationEventTypeType = "CreatedEvent"

	NotificationEventTypeTypeDeletedEvent NotificationEventTypeType = "DeletedEvent"

	NotificationEventTypeTypeModifiedEvent NotificationEventTypeType = "ModifiedEvent"

	NotificationEventTypeTypeMovedEvent NotificationEventTypeType = "MovedEvent"

	NotificationEventTypeTypeNewMailEvent NotificationEventTypeType = "NewMailEvent"

	NotificationEventTypeTypeFreeBusyChangedEvent NotificationEventTypeType = "FreeBusyChangedEvent"
)

type SubscriptionTimeoutType int32

type SubscriptionStatusFrequencyType int32

type SubscriptionStatusType string

const (
	SubscriptionStatusTypeOK SubscriptionStatusType = "OK"

	SubscriptionStatusTypeUnsubscribe SubscriptionStatusType = "Unsubscribe"
)

type StreamingSubscriptionConnectionTimeoutType int32

type ConnectionStatusType string

const (
	ConnectionStatusTypeOK ConnectionStatusType = "OK"

	ConnectionStatusTypeClosed ConnectionStatusType = "Closed"
)

type UnifiedGroupAccessType string

const (
	UnifiedGroupAccessTypeNone UnifiedGroupAccessType = "None"

	UnifiedGroupAccessTypePrivate UnifiedGroupAccessType = "Private"

	UnifiedGroupAccessTypeSecret UnifiedGroupAccessType = "Secret"

	UnifiedGroupAccessTypePublic UnifiedGroupAccessType = "Public"
)

type MaxSyncChangesReturnedType int32

type SyncFolderItemsScopeType string

const (
	SyncFolderItemsScopeTypeNormalItems SyncFolderItemsScopeType = "NormalItems"

	SyncFolderItemsScopeTypeNormalAndAssociatedItems SyncFolderItemsScopeType = "NormalAndAssociatedItems"
)

type AvailabilityProxyRequestType string

const (
	AvailabilityProxyRequestTypeCrossSite AvailabilityProxyRequestType = "CrossSite"

	AvailabilityProxyRequestTypeCrossForest AvailabilityProxyRequestType = "CrossForest"
)

type MeetingAttendeeType string

const (
	MeetingAttendeeTypeOrganizer MeetingAttendeeType = "Organizer"

	MeetingAttendeeTypeRequired MeetingAttendeeType = "Required"

	MeetingAttendeeTypeOptional MeetingAttendeeType = "Optional"

	MeetingAttendeeTypeRoom MeetingAttendeeType = "Room"

	MeetingAttendeeTypeResource MeetingAttendeeType = "Resource"
)

type FreeBusyViewType interface{}

type SuggestionQuality string

const (
	SuggestionQualityExcellent SuggestionQuality = "Excellent"

	SuggestionQualityGood SuggestionQuality = "Good"

	SuggestionQualityFair SuggestionQuality = "Fair"

	SuggestionQualityPoor SuggestionQuality = "Poor"
)

type OofState string

const (
	OofStateDisabled OofState = "Disabled"

	OofStateEnabled OofState = "Enabled"

	OofStateScheduled OofState = "Scheduled"
)

type ExternalAudience string

const (
	ExternalAudienceNone ExternalAudience = "None"

	ExternalAudienceKnown ExternalAudience = "Known"

	ExternalAudienceAll ExternalAudience = "All"
)

type SendPromptType string

const (
	SendPromptTypeNone SendPromptType = "None"

	SendPromptTypeSend SendPromptType = "Send"

	SendPromptTypeVotingOption SendPromptType = "VotingOption"
)

// Surfaces the various id types that are supported for conversion

type IdFormatType string

const (
	IdFormatTypeEwsLegacyId IdFormatType = "EwsLegacyId"

	IdFormatTypeEwsId IdFormatType = "EwsId"

	IdFormatTypeEntryId IdFormatType = "EntryId"

	IdFormatTypeHexEntryId IdFormatType = "HexEntryId"

	IdFormatTypeStoreId IdFormatType = "StoreId"

	IdFormatTypeOwaId IdFormatType = "OwaId"
)

type DistinguishedUserType string

const (
	DistinguishedUserTypeDefault DistinguishedUserType = "Default"

	DistinguishedUserTypeAnonymous DistinguishedUserType = "Anonymous"
)

type PermissionReadAccessType string

const (
	PermissionReadAccessTypeNone PermissionReadAccessType = "None"

	PermissionReadAccessTypeFullDetails PermissionReadAccessType = "FullDetails"
)

type CalendarPermissionReadAccessType string

const (
	CalendarPermissionReadAccessTypeNone CalendarPermissionReadAccessType = "None"

	CalendarPermissionReadAccessTypeTimeOnly CalendarPermissionReadAccessType = "TimeOnly"

	CalendarPermissionReadAccessTypeTimeAndSubjectAndLocation CalendarPermissionReadAccessType = "TimeAndSubjectAndLocation"

	CalendarPermissionReadAccessTypeFullDetails CalendarPermissionReadAccessType = "FullDetails"
)

type PermissionActionType string

const (
	PermissionActionTypeNone PermissionActionType = "None"

	PermissionActionTypeOwned PermissionActionType = "Owned"

	PermissionActionTypeAll PermissionActionType = "All"
)

type PermissionLevelType string

const (
	PermissionLevelTypeNone PermissionLevelType = "None"

	PermissionLevelTypeOwner PermissionLevelType = "Owner"

	PermissionLevelTypePublishingEditor PermissionLevelType = "PublishingEditor"

	PermissionLevelTypeEditor PermissionLevelType = "Editor"

	PermissionLevelTypePublishingAuthor PermissionLevelType = "PublishingAuthor"

	PermissionLevelTypeAuthor PermissionLevelType = "Author"

	PermissionLevelTypeNoneditingAuthor PermissionLevelType = "NoneditingAuthor"

	PermissionLevelTypeReviewer PermissionLevelType = "Reviewer"

	PermissionLevelTypeContributor PermissionLevelType = "Contributor"

	PermissionLevelTypeCustom PermissionLevelType = "Custom"
)

type CalendarPermissionLevelType string

const (
	CalendarPermissionLevelTypeNone CalendarPermissionLevelType = "None"

	CalendarPermissionLevelTypeOwner CalendarPermissionLevelType = "Owner"

	CalendarPermissionLevelTypePublishingEditor CalendarPermissionLevelType = "PublishingEditor"

	CalendarPermissionLevelTypeEditor CalendarPermissionLevelType = "Editor"

	CalendarPermissionLevelTypePublishingAuthor CalendarPermissionLevelType = "PublishingAuthor"

	CalendarPermissionLevelTypeAuthor CalendarPermissionLevelType = "Author"

	CalendarPermissionLevelTypeNoneditingAuthor CalendarPermissionLevelType = "NoneditingAuthor"

	CalendarPermissionLevelTypeReviewer CalendarPermissionLevelType = "Reviewer"

	CalendarPermissionLevelTypeContributor CalendarPermissionLevelType = "Contributor"

	CalendarPermissionLevelTypeFreeBusyTimeOnly CalendarPermissionLevelType = "FreeBusyTimeOnly"

	CalendarPermissionLevelTypeFreeBusyTimeAndSubjectAndLocation CalendarPermissionLevelType = "FreeBusyTimeAndSubjectAndLocation"

	CalendarPermissionLevelTypeCustom CalendarPermissionLevelType = "Custom"
)

type DeliverMeetingRequestsType string

const (
	DeliverMeetingRequestsTypeDelegatesOnly DeliverMeetingRequestsType = "DelegatesOnly"

	DeliverMeetingRequestsTypeDelegatesAndMe DeliverMeetingRequestsType = "DelegatesAndMe"

	DeliverMeetingRequestsTypeDelegatesAndSendInformationToMe DeliverMeetingRequestsType = "DelegatesAndSendInformationToMe"

	DeliverMeetingRequestsTypeNoForward DeliverMeetingRequestsType = "NoForward"
)

type DelegateFolderPermissionLevelType string

const (
	DelegateFolderPermissionLevelTypeNone DelegateFolderPermissionLevelType = "None"

	DelegateFolderPermissionLevelTypeEditor DelegateFolderPermissionLevelType = "Editor"

	DelegateFolderPermissionLevelTypeReviewer DelegateFolderPermissionLevelType = "Reviewer"

	DelegateFolderPermissionLevelTypeAuthor DelegateFolderPermissionLevelType = "Author"

	DelegateFolderPermissionLevelTypeCustom DelegateFolderPermissionLevelType = "Custom"
)

type MailTipTypes interface{}

type ServiceConfigurationType interface{}

// Represents the message keys that can be returned for invalid recipients

type InvalidRecipientResponseCodeType string

const (
	InvalidRecipientResponseCodeTypeOtherError InvalidRecipientResponseCodeType = "OtherError"

	InvalidRecipientResponseCodeTypeRecipientOrganizationNotFederated InvalidRecipientResponseCodeType = "RecipientOrganizationNotFederated"

	InvalidRecipientResponseCodeTypeCannotObtainTokenFromSTS InvalidRecipientResponseCodeType = "CannotObtainTokenFromSTS"

	InvalidRecipientResponseCodeTypeSystemPolicyBlocksSharingWithThisRecipient InvalidRecipientResponseCodeType = "SystemPolicyBlocksSharingWithThisRecipient"

	InvalidRecipientResponseCodeTypeRecipientOrganizationFederatedWithUnknownTokenIssuer InvalidRecipientResponseCodeType = "RecipientOrganizationFederatedWithUnknownTokenIssuer"
)

type SharingDataType string

const (
	SharingDataTypeCalendar SharingDataType = "Calendar"

	SharingDataTypeContacts SharingDataType = "Contacts"
)

type PhoneCallStateType string

const (
	PhoneCallStateTypeIdle PhoneCallStateType = "Idle"

	PhoneCallStateTypeConnecting PhoneCallStateType = "Connecting"

	PhoneCallStateTypeAlerted PhoneCallStateType = "Alerted"

	PhoneCallStateTypeConnected PhoneCallStateType = "Connected"

	PhoneCallStateTypeDisconnected PhoneCallStateType = "Disconnected"

	PhoneCallStateTypeIncoming PhoneCallStateType = "Incoming"

	PhoneCallStateTypeTransferring PhoneCallStateType = "Transferring"

	PhoneCallStateTypeForwarding PhoneCallStateType = "Forwarding"
)

type ConnectionFailureCauseType string

const (
	ConnectionFailureCauseTypeNone ConnectionFailureCauseType = "None"

	ConnectionFailureCauseTypeUserBusy ConnectionFailureCauseType = "UserBusy"

	ConnectionFailureCauseTypeNoAnswer ConnectionFailureCauseType = "NoAnswer"

	ConnectionFailureCauseTypeUnavailable ConnectionFailureCauseType = "Unavailable"

	ConnectionFailureCauseTypeOther ConnectionFailureCauseType = "Other"
)

type UserConfigurationDictionaryObjectTypesType string

const (
	UserConfigurationDictionaryObjectTypesTypeDateTime UserConfigurationDictionaryObjectTypesType = "DateTime"

	UserConfigurationDictionaryObjectTypesTypeBoolean UserConfigurationDictionaryObjectTypesType = "Boolean"

	UserConfigurationDictionaryObjectTypesTypeByte UserConfigurationDictionaryObjectTypesType = "Byte"

	UserConfigurationDictionaryObjectTypesTypeString UserConfigurationDictionaryObjectTypesType = "String"

	UserConfigurationDictionaryObjectTypesTypeInteger32 UserConfigurationDictionaryObjectTypesType = "Integer32"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger32 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger32"

	UserConfigurationDictionaryObjectTypesTypeInteger64 UserConfigurationDictionaryObjectTypesType = "Integer64"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger64 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger64"

	UserConfigurationDictionaryObjectTypesTypeStringArray UserConfigurationDictionaryObjectTypesType = "StringArray"

	UserConfigurationDictionaryObjectTypesTypeByteArray UserConfigurationDictionaryObjectTypesType = "ByteArray"
)

type UserConfigurationPropertyType interface{}

type ProtectionRuleTrueType string

type ProtectionRuleAllInternalType string

type ProtectionRuleValueType string

type ProtectionRuleActionKindType string

const (
	ProtectionRuleActionKindTypeRightsProtectMessage ProtectionRuleActionKindType = "RightsProtectMessage"
)

type TeamMailboxLifecycleStateType string

const (
	TeamMailboxLifecycleStateTypeActive TeamMailboxLifecycleStateType = "Active"

	TeamMailboxLifecycleStateTypeClosed TeamMailboxLifecycleStateType = "Closed"

	TeamMailboxLifecycleStateTypeUnlinked TeamMailboxLifecycleStateType = "Unlinked"

	TeamMailboxLifecycleStateTypePendingDelete TeamMailboxLifecycleStateType = "PendingDelete"
)

// Surfaces the various report message action types

type ReportMessageActionType string

const (
	ReportMessageActionTypeJunk ReportMessageActionType = "Junk"

	ReportMessageActionTypeNotJunk ReportMessageActionType = "NotJunk"

	ReportMessageActionTypePhish ReportMessageActionType = "Phish"

	ReportMessageActionTypeUnsubscribe ReportMessageActionType = "Unsubscribe"
)

type MessageTrackingReportTemplateType string

const (
	MessageTrackingReportTemplateTypeSummary MessageTrackingReportTemplateType = "Summary"

	MessageTrackingReportTemplateTypeRecipientPath MessageTrackingReportTemplateType = "RecipientPath"
)

// Flagged for action enumeration, currently used in FlaggedForAction rule predicate

type FlaggedForActionType string

const (
	FlaggedForActionTypeAny FlaggedForActionType = "Any"

	FlaggedForActionTypeCall FlaggedForActionType = "Call"

	FlaggedForActionTypeDoNotForward FlaggedForActionType = "DoNotForward"

	FlaggedForActionTypeFollowUp FlaggedForActionType = "FollowUp"

	FlaggedForActionTypeFYI FlaggedForActionType = "FYI"

	FlaggedForActionTypeForward FlaggedForActionType = "Forward"

	FlaggedForActionTypeNoResponseNecessary FlaggedForActionType = "NoResponseNecessary"

	FlaggedForActionTypeRead FlaggedForActionType = "Read"

	FlaggedForActionTypeReply FlaggedForActionType = "Reply"

	FlaggedForActionTypeReplyToAll FlaggedForActionType = "ReplyToAll"

	FlaggedForActionTypeReview FlaggedForActionType = "Review"
)

// Rule field URI enumerates all possible rule fields that could trigger validation error

type RuleFieldURIType string

const (
	RuleFieldURITypeRuleId RuleFieldURIType = "RuleId"

	RuleFieldURITypeDisplayName RuleFieldURIType = "DisplayName"

	RuleFieldURITypePriority RuleFieldURIType = "Priority"

	RuleFieldURITypeIsNotSupported RuleFieldURIType = "IsNotSupported"

	RuleFieldURITypeActions RuleFieldURIType = "Actions"

	RuleFieldURITypeConditionCategories RuleFieldURIType = "Condition:Categories"

	RuleFieldURITypeConditionContainsBodyStrings RuleFieldURIType = "Condition:ContainsBodyStrings"

	RuleFieldURITypeConditionContainsHeaderStrings RuleFieldURIType = "Condition:ContainsHeaderStrings"

	RuleFieldURITypeConditionContainsRecipientStrings RuleFieldURIType = "Condition:ContainsRecipientStrings"

	RuleFieldURITypeConditionContainsSenderStrings RuleFieldURIType = "Condition:ContainsSenderStrings"

	RuleFieldURITypeConditionContainsSubjectOrBodyStrings RuleFieldURIType = "Condition:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeConditionContainsSubjectStrings RuleFieldURIType = "Condition:ContainsSubjectStrings"

	RuleFieldURITypeConditionFlaggedForAction RuleFieldURIType = "Condition:FlaggedForAction"

	RuleFieldURITypeConditionFromAddresses RuleFieldURIType = "Condition:FromAddresses"

	RuleFieldURITypeConditionFromConnectedAccounts RuleFieldURIType = "Condition:FromConnectedAccounts"

	RuleFieldURITypeConditionHasAttachments RuleFieldURIType = "Condition:HasAttachments"

	RuleFieldURITypeConditionImportance RuleFieldURIType = "Condition:Importance"

	RuleFieldURITypeConditionIsApprovalRequest RuleFieldURIType = "Condition:IsApprovalRequest"

	RuleFieldURITypeConditionIsAutomaticForward RuleFieldURIType = "Condition:IsAutomaticForward"

	RuleFieldURITypeConditionIsAutomaticReply RuleFieldURIType = "Condition:IsAutomaticReply"

	RuleFieldURITypeConditionIsEncrypted RuleFieldURIType = "Condition:IsEncrypted"

	RuleFieldURITypeConditionIsMeetingRequest RuleFieldURIType = "Condition:IsMeetingRequest"

	RuleFieldURITypeConditionIsMeetingResponse RuleFieldURIType = "Condition:IsMeetingResponse"

	RuleFieldURITypeConditionIsNDR RuleFieldURIType = "Condition:IsNDR"

	RuleFieldURITypeConditionIsPermissionControlled RuleFieldURIType = "Condition:IsPermissionControlled"

	RuleFieldURITypeConditionIsReadReceipt RuleFieldURIType = "Condition:IsReadReceipt"

	RuleFieldURITypeConditionIsSigned RuleFieldURIType = "Condition:IsSigned"

	RuleFieldURITypeConditionIsVoicemail RuleFieldURIType = "Condition:IsVoicemail"

	RuleFieldURITypeConditionItemClasses RuleFieldURIType = "Condition:ItemClasses"

	RuleFieldURITypeConditionMessageClassifications RuleFieldURIType = "Condition:MessageClassifications"

	RuleFieldURITypeConditionNotSentToMe RuleFieldURIType = "Condition:NotSentToMe"

	RuleFieldURITypeConditionSentCcMe RuleFieldURIType = "Condition:SentCcMe"

	RuleFieldURITypeConditionSentOnlyToMe RuleFieldURIType = "Condition:SentOnlyToMe"

	RuleFieldURITypeConditionSentToAddresses RuleFieldURIType = "Condition:SentToAddresses"

	RuleFieldURITypeConditionSentToMe RuleFieldURIType = "Condition:SentToMe"

	RuleFieldURITypeConditionSentToOrCcMe RuleFieldURIType = "Condition:SentToOrCcMe"

	RuleFieldURITypeConditionSensitivity RuleFieldURIType = "Condition:Sensitivity"

	RuleFieldURITypeConditionWithinDateRange RuleFieldURIType = "Condition:WithinDateRange"

	RuleFieldURITypeConditionWithinSizeRange RuleFieldURIType = "Condition:WithinSizeRange"

	RuleFieldURITypeExceptionCategories RuleFieldURIType = "Exception:Categories"

	RuleFieldURITypeExceptionContainsBodyStrings RuleFieldURIType = "Exception:ContainsBodyStrings"

	RuleFieldURITypeExceptionContainsHeaderStrings RuleFieldURIType = "Exception:ContainsHeaderStrings"

	RuleFieldURITypeExceptionContainsRecipientStrings RuleFieldURIType = "Exception:ContainsRecipientStrings"

	RuleFieldURITypeExceptionContainsSenderStrings RuleFieldURIType = "Exception:ContainsSenderStrings"

	RuleFieldURITypeExceptionContainsSubjectOrBodyStrings RuleFieldURIType = "Exception:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeExceptionContainsSubjectStrings RuleFieldURIType = "Exception:ContainsSubjectStrings"

	RuleFieldURITypeExceptionFlaggedForAction RuleFieldURIType = "Exception:FlaggedForAction"

	RuleFieldURITypeExceptionFromAddresses RuleFieldURIType = "Exception:FromAddresses"

	RuleFieldURITypeExceptionFromConnectedAccounts RuleFieldURIType = "Exception:FromConnectedAccounts"

	RuleFieldURITypeExceptionHasAttachments RuleFieldURIType = "Exception:HasAttachments"

	RuleFieldURITypeExceptionImportance RuleFieldURIType = "Exception:Importance"

	RuleFieldURITypeExceptionIsApprovalRequest RuleFieldURIType = "Exception:IsApprovalRequest"

	RuleFieldURITypeExceptionIsAutomaticForward RuleFieldURIType = "Exception:IsAutomaticForward"

	RuleFieldURITypeExceptionIsAutomaticReply RuleFieldURIType = "Exception:IsAutomaticReply"

	RuleFieldURITypeExceptionIsEncrypted RuleFieldURIType = "Exception:IsEncrypted"

	RuleFieldURITypeExceptionIsMeetingRequest RuleFieldURIType = "Exception:IsMeetingRequest"

	RuleFieldURITypeExceptionIsMeetingResponse RuleFieldURIType = "Exception:IsMeetingResponse"

	RuleFieldURITypeExceptionIsNDR RuleFieldURIType = "Exception:IsNDR"

	RuleFieldURITypeExceptionIsPermissionControlled RuleFieldURIType = "Exception:IsPermissionControlled"

	RuleFieldURITypeExceptionIsReadReceipt RuleFieldURIType = "Exception:IsReadReceipt"

	RuleFieldURITypeExceptionIsSigned RuleFieldURIType = "Exception:IsSigned"

	RuleFieldURITypeExceptionIsVoicemail RuleFieldURIType = "Exception:IsVoicemail"

	RuleFieldURITypeExceptionItemClasses RuleFieldURIType = "Exception:ItemClasses"

	RuleFieldURITypeExceptionMessageClassifications RuleFieldURIType = "Exception:MessageClassifications"

	RuleFieldURITypeExceptionNotSentToMe RuleFieldURIType = "Exception:NotSentToMe"

	RuleFieldURITypeExceptionSentCcMe RuleFieldURIType = "Exception:SentCcMe"

	RuleFieldURITypeExceptionSentOnlyToMe RuleFieldURIType = "Exception:SentOnlyToMe"

	RuleFieldURITypeExceptionSentToAddresses RuleFieldURIType = "Exception:SentToAddresses"

	RuleFieldURITypeExceptionSentToMe RuleFieldURIType = "Exception:SentToMe"

	RuleFieldURITypeExceptionSentToOrCcMe RuleFieldURIType = "Exception:SentToOrCcMe"

	RuleFieldURITypeExceptionSensitivity RuleFieldURIType = "Exception:Sensitivity"

	RuleFieldURITypeExceptionWithinDateRange RuleFieldURIType = "Exception:WithinDateRange"

	RuleFieldURITypeExceptionWithinSizeRange RuleFieldURIType = "Exception:WithinSizeRange"

	RuleFieldURITypeActionAssignCategories RuleFieldURIType = "Action:AssignCategories"

	RuleFieldURITypeActionCopyToFolder RuleFieldURIType = "Action:CopyToFolder"

	RuleFieldURITypeActionDelete RuleFieldURIType = "Action:Delete"

	RuleFieldURITypeActionForwardAsAttachmentToRecipients RuleFieldURIType = "Action:ForwardAsAttachmentToRecipients"

	RuleFieldURITypeActionForwardToRecipients RuleFieldURIType = "Action:ForwardToRecipients"

	RuleFieldURITypeActionMarkImportance RuleFieldURIType = "Action:MarkImportance"

	RuleFieldURITypeActionMarkAsRead RuleFieldURIType = "Action:MarkAsRead"

	RuleFieldURITypeActionMoveToFolder RuleFieldURIType = "Action:MoveToFolder"

	RuleFieldURITypeActionPermanentDelete RuleFieldURIType = "Action:PermanentDelete"

	RuleFieldURITypeActionRedirectToRecipients RuleFieldURIType = "Action:RedirectToRecipients"

	RuleFieldURITypeActionSendSMSAlertToRecipients RuleFieldURIType = "Action:SendSMSAlertToRecipients"

	RuleFieldURITypeActionServerReplyWithMessage RuleFieldURIType = "Action:ServerReplyWithMessage"

	RuleFieldURITypeActionStopProcessingRules RuleFieldURIType = "Action:StopProcessingRules"

	RuleFieldURITypeIsEnabled RuleFieldURIType = "IsEnabled"

	RuleFieldURITypeIsInError RuleFieldURIType = "IsInError"

	RuleFieldURITypeConditions RuleFieldURIType = "Conditions"

	RuleFieldURITypeExceptions RuleFieldURIType = "Exceptions"
)

// Rule validation error code describing what failed validation for each rule predicate or action.

type RuleValidationErrorCodeType string

const (
	RuleValidationErrorCodeTypeADOperationFailure RuleValidationErrorCodeType = "ADOperationFailure"

	RuleValidationErrorCodeTypeConnectedAccountNotFound RuleValidationErrorCodeType = "ConnectedAccountNotFound"

	RuleValidationErrorCodeTypeCreateWithRuleId RuleValidationErrorCodeType = "CreateWithRuleId"

	RuleValidationErrorCodeTypeEmptyValueFound RuleValidationErrorCodeType = "EmptyValueFound"

	RuleValidationErrorCodeTypeDuplicatedPriority RuleValidationErrorCodeType = "DuplicatedPriority"

	RuleValidationErrorCodeTypeDuplicatedOperationOnTheSameRule RuleValidationErrorCodeType = "DuplicatedOperationOnTheSameRule"

	RuleValidationErrorCodeTypeFolderDoesNotExist RuleValidationErrorCodeType = "FolderDoesNotExist"

	RuleValidationErrorCodeTypeInvalidAddress RuleValidationErrorCodeType = "InvalidAddress"

	RuleValidationErrorCodeTypeInvalidDateRange RuleValidationErrorCodeType = "InvalidDateRange"

	RuleValidationErrorCodeTypeInvalidFolderId RuleValidationErrorCodeType = "InvalidFolderId"

	RuleValidationErrorCodeTypeInvalidSizeRange RuleValidationErrorCodeType = "InvalidSizeRange"

	RuleValidationErrorCodeTypeInvalidValue RuleValidationErrorCodeType = "InvalidValue"

	RuleValidationErrorCodeTypeMessageClassificationNotFound RuleValidationErrorCodeType = "MessageClassificationNotFound"

	RuleValidationErrorCodeTypeMissingAction RuleValidationErrorCodeType = "MissingAction"

	RuleValidationErrorCodeTypeMissingParameter RuleValidationErrorCodeType = "MissingParameter"

	RuleValidationErrorCodeTypeMissingRangeValue RuleValidationErrorCodeType = "MissingRangeValue"

	RuleValidationErrorCodeTypeNotSettable RuleValidationErrorCodeType = "NotSettable"

	RuleValidationErrorCodeTypeRecipientDoesNotExist RuleValidationErrorCodeType = "RecipientDoesNotExist"

	RuleValidationErrorCodeTypeRuleNotFound RuleValidationErrorCodeType = "RuleNotFound"

	RuleValidationErrorCodeTypeSizeLessThanZero RuleValidationErrorCodeType = "SizeLessThanZero"

	RuleValidationErrorCodeTypeStringValueTooBig RuleValidationErrorCodeType = "StringValueTooBig"

	RuleValidationErrorCodeTypeUnsupportedAddress RuleValidationErrorCodeType = "UnsupportedAddress"

	RuleValidationErrorCodeTypeUnexpectedError RuleValidationErrorCodeType = "UnexpectedError"

	RuleValidationErrorCodeTypeUnsupportedRule RuleValidationErrorCodeType = "UnsupportedRule"
)

type SearchItemKindType string

const (
	SearchItemKindTypeEmail SearchItemKindType = "Email"

	SearchItemKindTypeMeetings SearchItemKindType = "Meetings"

	SearchItemKindTypeTasks SearchItemKindType = "Tasks"

	SearchItemKindTypeNotes SearchItemKindType = "Notes"

	SearchItemKindTypeDocs SearchItemKindType = "Docs"

	SearchItemKindTypeJournals SearchItemKindType = "Journals"

	SearchItemKindTypeContacts SearchItemKindType = "Contacts"

	SearchItemKindTypeIm SearchItemKindType = "Im"

	SearchItemKindTypeVoicemail SearchItemKindType = "Voicemail"

	SearchItemKindTypeFaxes SearchItemKindType = "Faxes"

	SearchItemKindTypePosts SearchItemKindType = "Posts"

	SearchItemKindTypeRssfeeds SearchItemKindType = "Rssfeeds"
)

type MailboxSearchLocationType string

const (
	MailboxSearchLocationTypePrimaryOnly MailboxSearchLocationType = "PrimaryOnly"

	MailboxSearchLocationTypeArchiveOnly MailboxSearchLocationType = "ArchiveOnly"

	MailboxSearchLocationTypeAll MailboxSearchLocationType = "All"
)

type SearchResultType string

const (
	SearchResultTypeStatisticsOnly SearchResultType = "StatisticsOnly"

	SearchResultTypePreviewOnly SearchResultType = "PreviewOnly"
)

type SearchPageDirectionType string

const (
	SearchPageDirectionTypePrevious SearchPageDirectionType = "Previous"

	SearchPageDirectionTypeNext SearchPageDirectionType = "Next"
)

type PreviewItemBaseShapeType string

const (
	PreviewItemBaseShapeTypeDefault PreviewItemBaseShapeType = "Default"

	PreviewItemBaseShapeTypeCompact PreviewItemBaseShapeType = "Compact"
)

type HoldActionType string

const (
	HoldActionTypeCreate HoldActionType = "Create"

	HoldActionTypeUpdate HoldActionType = "Update"

	HoldActionTypeRemove HoldActionType = "Remove"
)

type HoldStatusType string

const (
	HoldStatusTypeNotOnHold HoldStatusType = "NotOnHold"

	HoldStatusTypePending HoldStatusType = "Pending"

	HoldStatusTypeOnHold HoldStatusType = "OnHold"

	HoldStatusTypePartialHold HoldStatusType = "PartialHold"

	HoldStatusTypeFailed HoldStatusType = "Failed"
)

type ItemIndexErrorType string

const (
	ItemIndexErrorTypeNone ItemIndexErrorType = "None"

	ItemIndexErrorTypeGenericError ItemIndexErrorType = "GenericError"

	ItemIndexErrorTypeTimeout ItemIndexErrorType = "Timeout"

	ItemIndexErrorTypeStaleEvent ItemIndexErrorType = "StaleEvent"

	ItemIndexErrorTypeMailboxOffline ItemIndexErrorType = "MailboxOffline"

	ItemIndexErrorTypeAttachmentLimitReached ItemIndexErrorType = "AttachmentLimitReached"

	ItemIndexErrorTypeMarsWriterTruncation ItemIndexErrorType = "MarsWriterTruncation"

	ItemIndexErrorTypeDocumentParserFailure ItemIndexErrorType = "DocumentParserFailure"
)

type UserPhotoSizeType string

const (
	UserPhotoSizeTypeHR48x48 UserPhotoSizeType = "HR48x48"

	UserPhotoSizeTypeHR64x64 UserPhotoSizeType = "HR64x64"

	UserPhotoSizeTypeHR96x96 UserPhotoSizeType = "HR96x96"

	UserPhotoSizeTypeHR120x120 UserPhotoSizeType = "HR120x120"

	UserPhotoSizeTypeHR240x240 UserPhotoSizeType = "HR240x240"

	UserPhotoSizeTypeHR360x360 UserPhotoSizeType = "HR360x360"

	UserPhotoSizeTypeHR432x432 UserPhotoSizeType = "HR432x432"

	UserPhotoSizeTypeHR504x504 UserPhotoSizeType = "HR504x504"

	UserPhotoSizeTypeHR648x648 UserPhotoSizeType = "HR648x648"

	UserPhotoSizeTypeHR1024xN UserPhotoSizeType = "HR1024xN"

	UserPhotoSizeTypeHR1920xN UserPhotoSizeType = "HR1920xN"
)

type UserPhotoTypeType string

const (
	UserPhotoTypeTypeUserPhoto UserPhotoTypeType = "UserPhoto"

	UserPhotoTypeTypeProfileHeaderPhoto UserPhotoTypeType = "ProfileHeaderPhoto"
)

type ElcFolderType string

const (
	ElcFolderTypeCalendar ElcFolderType = "Calendar"

	ElcFolderTypeContacts ElcFolderType = "Contacts"

	ElcFolderTypeDeletedItems ElcFolderType = "DeletedItems"

	ElcFolderTypeDrafts ElcFolderType = "Drafts"

	ElcFolderTypeInbox ElcFolderType = "Inbox"

	ElcFolderTypeJunkEmail ElcFolderType = "JunkEmail"

	ElcFolderTypeJournal ElcFolderType = "Journal"

	ElcFolderTypeNotes ElcFolderType = "Notes"

	ElcFolderTypeOutbox ElcFolderType = "Outbox"

	ElcFolderTypeSentItems ElcFolderType = "SentItems"

	ElcFolderTypeTasks ElcFolderType = "Tasks"

	ElcFolderTypeAll ElcFolderType = "All"

	ElcFolderTypeManagedCustomFolder ElcFolderType = "ManagedCustomFolder"

	ElcFolderTypeRssSubscriptions ElcFolderType = "RssSubscriptions"

	ElcFolderTypeSyncIssues ElcFolderType = "SyncIssues"

	ElcFolderTypeConversationHistory ElcFolderType = "ConversationHistory"

	ElcFolderTypePersonal ElcFolderType = "Personal"

	ElcFolderTypeRecoverableItems ElcFolderType = "RecoverableItems"

	ElcFolderTypeNonIpmRoot ElcFolderType = "NonIpmRoot"
)

type RetentionActionType string

const (
	RetentionActionTypeNone RetentionActionType = "None"

	RetentionActionTypeMoveToDeletedItems RetentionActionType = "MoveToDeletedItems"

	RetentionActionTypeMoveToFolder RetentionActionType = "MoveToFolder"

	RetentionActionTypeDeleteAndAllowRecovery RetentionActionType = "DeleteAndAllowRecovery"

	RetentionActionTypePermanentlyDelete RetentionActionType = "PermanentlyDelete"

	RetentionActionTypeMarkAsPastRetentionLimit RetentionActionType = "MarkAsPastRetentionLimit"

	RetentionActionTypeMoveToArchive RetentionActionType = "MoveToArchive"
)

type RetentionType string

const (
	RetentionTypeDelete RetentionType = "Delete"

	RetentionTypeArchive RetentionType = "Archive"
)

type ClientExtensionProvidedToType string

const (
	ClientExtensionProvidedToTypeEveryone ClientExtensionProvidedToType = "Everyone"

	ClientExtensionProvidedToTypeSpecificUsers ClientExtensionProvidedToType = "SpecificUsers"
)

type ClientExtensionTypeType string

const (
	ClientExtensionTypeTypeDefault ClientExtensionTypeType = "Default"

	ClientExtensionTypeTypePrivate ClientExtensionTypeType = "Private"

	ClientExtensionTypeTypeMarketPlace ClientExtensionTypeType = "MarketPlace"

	ClientExtensionTypeTypePrivateCatalog ClientExtensionTypeType = "PrivateCatalog"

	ClientExtensionTypeTypeMarketplacePrivateCatalog ClientExtensionTypeType = "MarketplacePrivateCatalog"
)

type ClientExtensionScopeType string

const (
	ClientExtensionScopeTypeNone ClientExtensionScopeType = "None"

	ClientExtensionScopeTypeUser ClientExtensionScopeType = "User"

	ClientExtensionScopeTypeOrganization ClientExtensionScopeType = "Organization"

	ClientExtensionScopeTypeDefault ClientExtensionScopeType = "Default"
)

type ConsentStateType string

const (
	ConsentStateTypeNotResponded ConsentStateType = "NotResponded"

	ConsentStateTypeNotConsented ConsentStateType = "NotConsented"

	ConsentStateTypeConsented ConsentStateType = "Consented"
)

// List of possible reasons for disabling the client extension

type DisableReasonType string

const (
	DisableReasonTypeNoReason DisableReasonType = "NoReason"

	DisableReasonTypeOutlookClientPerformance DisableReasonType = "OutlookClientPerformance"

	DisableReasonTypeOWAClientPerformance DisableReasonType = "OWAClientPerformance"

	DisableReasonTypeMobileClientPerformance DisableReasonType = "MobileClientPerformance"
)

type IconIndexType string

const (
	IconIndexTypeDefault IconIndexType = "Default"

	IconIndexTypePostItem IconIndexType = "PostItem"

	IconIndexTypeMailRead IconIndexType = "MailRead"

	IconIndexTypeMailUnread IconIndexType = "MailUnread"

	IconIndexTypeMailReplied IconIndexType = "MailReplied"

	IconIndexTypeMailForwarded IconIndexType = "MailForwarded"

	IconIndexTypeMailEncrypted IconIndexType = "MailEncrypted"

	IconIndexTypeMailSmimeSigned IconIndexType = "MailSmimeSigned"

	IconIndexTypeMailEncryptedReplied IconIndexType = "MailEncryptedReplied"

	IconIndexTypeMailSmimeSignedReplied IconIndexType = "MailSmimeSignedReplied"

	IconIndexTypeMailEncryptedForwarded IconIndexType = "MailEncryptedForwarded"

	IconIndexTypeMailSmimeSignedForwarded IconIndexType = "MailSmimeSignedForwarded"

	IconIndexTypeMailEncryptedRead IconIndexType = "MailEncryptedRead"

	IconIndexTypeMailSmimeSignedRead IconIndexType = "MailSmimeSignedRead"

	IconIndexTypeMailIrm IconIndexType = "MailIrm"

	IconIndexTypeMailIrmForwarded IconIndexType = "MailIrmForwarded"

	IconIndexTypeMailIrmReplied IconIndexType = "MailIrmReplied"

	IconIndexTypeSmsSubmitted IconIndexType = "SmsSubmitted"

	IconIndexTypeSmsRoutedToDeliveryPoint IconIndexType = "SmsRoutedToDeliveryPoint"

	IconIndexTypeSmsRoutedToExternalMessagingSystem IconIndexType = "SmsRoutedToExternalMessagingSystem"

	IconIndexTypeSmsDelivered IconIndexType = "SmsDelivered"

	IconIndexTypeOutlookDefaultForContacts IconIndexType = "OutlookDefaultForContacts"

	IconIndexTypeAppointmentItem IconIndexType = "AppointmentItem"

	IconIndexTypeAppointmentRecur IconIndexType = "AppointmentRecur"

	IconIndexTypeAppointmentMeet IconIndexType = "AppointmentMeet"

	IconIndexTypeAppointmentMeetRecur IconIndexType = "AppointmentMeetRecur"

	IconIndexTypeAppointmentMeetNY IconIndexType = "AppointmentMeetNY"

	IconIndexTypeAppointmentMeetYes IconIndexType = "AppointmentMeetYes"

	IconIndexTypeAppointmentMeetNo IconIndexType = "AppointmentMeetNo"

	IconIndexTypeAppointmentMeetMaybe IconIndexType = "AppointmentMeetMaybe"

	IconIndexTypeAppointmentMeetCancel IconIndexType = "AppointmentMeetCancel"

	IconIndexTypeAppointmentMeetInfo IconIndexType = "AppointmentMeetInfo"

	IconIndexTypeTaskItem IconIndexType = "TaskItem"

	IconIndexTypeTaskRecur IconIndexType = "TaskRecur"

	IconIndexTypeTaskOwned IconIndexType = "TaskOwned"

	IconIndexTypeTaskDelegated IconIndexType = "TaskDelegated"
)

type MeetingSpaceTypeEnum string

const (
	MeetingSpaceTypeEnumPublic MeetingSpaceTypeEnum = "Public"

	MeetingSpaceTypeEnumPrivate MeetingSpaceTypeEnum = "Private"
)

type ParticipantActivityRole string

const (
	ParticipantActivityRoleOrganizer ParticipantActivityRole = "Organizer"

	ParticipantActivityRoleAttendee ParticipantActivityRole = "Attendee"

	ParticipantActivityRolePresenter ParticipantActivityRole = "Presenter"
)

type ParticipantActivityMediaType string

const (
	ParticipantActivityMediaTypeAppSharing ParticipantActivityMediaType = "AppSharing"

	ParticipantActivityMediaTypeAudioVideo ParticipantActivityMediaType = "AudioVideo"

	ParticipantActivityMediaTypeChat ParticipantActivityMediaType = "Chat"

	ParticipantActivityMediaTypeDataConf ParticipantActivityMediaType = "DataConf"

	ParticipantActivityMediaTypeMeeting ParticipantActivityMediaType = "Meeting"

	ParticipantActivityMediaTypeMeetingConf ParticipantActivityMediaType = "MeetingConf"

	ParticipantActivityMediaTypePhoneConf ParticipantActivityMediaType = "PhoneConf"

	ParticipantActivityMediaTypeFocus ParticipantActivityMediaType = "Focus"
)

type ContentActivityType string

const (
	ContentActivityTypePoll ContentActivityType = "Poll"

	ContentActivityTypeWhiteBoard ContentActivityType = "WhiteBoard"

	ContentActivityTypeQAndA ContentActivityType = "QAndA"

	ContentActivityTypeChat ContentActivityType = "Chat"

	ContentActivityTypeMeeting ContentActivityType = "Meeting"

	ContentActivityTypeAnnotations ContentActivityType = "Annotations"

	ContentActivityTypeSharedNotes ContentActivityType = "SharedNotes"
)

type ContentActivityMediaType string

const (
	ContentActivityMediaTypeAppSharing ContentActivityMediaType = "AppSharing"

	ContentActivityMediaTypeAudioVideo ContentActivityMediaType = "AudioVideo"

	ContentActivityMediaTypeChat ContentActivityMediaType = "Chat"

	ContentActivityMediaTypeDataConf ContentActivityMediaType = "DataConf"

	ContentActivityMediaTypeMeeting ContentActivityMediaType = "Meeting"

	ContentActivityMediaTypeMeetingConf ContentActivityMediaType = "MeetingConf"

	ContentActivityMediaTypePhoneConf ContentActivityMediaType = "PhoneConf"
)

type ContentActivityAcl string

const (
	ContentActivityAclOrganizer ContentActivityAcl = "Organizer"

	ContentActivityAclPresenter ContentActivityAcl = "Presenter"

	ContentActivityAclEveryone ContentActivityAcl = "Everyone"
)

type WarmupOptionsType interface{}

type SearchApplicationIdType string

const (
	SearchApplicationIdTypeOutlook SearchApplicationIdType = "Outlook"

	SearchApplicationIdTypeOwa SearchApplicationIdType = "Owa"

	SearchApplicationIdTypePaw SearchApplicationIdType = "Paw"

	SearchApplicationIdTypeTeamspace SearchApplicationIdType = "Teamspace"

	SearchApplicationIdTypeOneDrive SearchApplicationIdType = "OneDrive"

	SearchApplicationIdTypeOther SearchApplicationIdType = "Other"
)

type ItemTypesFilterType interface{}

type SuggestionKindType interface{}

type RefinerTypeType string

const (
	RefinerTypeTypeNone RefinerTypeType = "None"

	RefinerTypeTypeTo RefinerTypeType = "To"

	RefinerTypeTypeFrom RefinerTypeType = "From"

	RefinerTypeTypeFolder RefinerTypeType = "Folder"

	RefinerTypeTypeHasAttachment RefinerTypeType = "HasAttachment"

	RefinerTypeTypeMailboxSource RefinerTypeType = "MailboxSource"
)

type SearchResultsPropertySetNameType string

const (
	SearchResultsPropertySetNameTypeDefault SearchResultsPropertySetNameType = "Default"

	SearchResultsPropertySetNameTypeOwa16 SearchResultsPropertySetNameType = "Owa16"

	SearchResultsPropertySetNameTypeOutlook16 SearchResultsPropertySetNameType = "Outlook16"
)

type SearchScopeGroupsType interface{}

type SearchScopeArchivesType interface{}

type ExecuteSearchSortOrderType string

const (
	ExecuteSearchSortOrderTypeDateTime ExecuteSearchSortOrderType = "DateTime"

	ExecuteSearchSortOrderTypeRelevance ExecuteSearchSortOrderType = "Relevance"
)

type MatchOptionsType string

const (
	MatchOptionsTypeFullString MatchOptionsType = "FullString"

	MatchOptionsTypePrefix MatchOptionsType = "Prefix"
)

type PeopleSuggestionPersonType string

const (
	PeopleSuggestionPersonTypeUnknown PeopleSuggestionPersonType = "Unknown"

	PeopleSuggestionPersonTypePerson PeopleSuggestionPersonType = "Person"

	PeopleSuggestionPersonTypeDistributionList PeopleSuggestionPersonType = "DistributionList"

	PeopleSuggestionPersonTypeRoom PeopleSuggestionPersonType = "Room"

	PeopleSuggestionPersonTypePlace PeopleSuggestionPersonType = "Place"

	PeopleSuggestionPersonTypeModernGroup PeopleSuggestionPersonType = "ModernGroup"
)

type ClientIdType string

const (
	ClientIdTypeWeb ClientIdType = "Web"

	ClientIdTypeMobile ClientIdType = "Mobile"

	ClientIdTypeTablet ClientIdType = "Tablet"

	ClientIdTypeDesktop ClientIdType = "Desktop"

	ClientIdTypeExchange ClientIdType = "Exchange"

	ClientIdTypeOutlook ClientIdType = "Outlook"

	ClientIdTypeMacOutlook ClientIdType = "MacOutlook"

	ClientIdTypePOP3 ClientIdType = "POP3"

	ClientIdTypeIMAP4 ClientIdType = "IMAP4"

	ClientIdTypeOther ClientIdType = "Other"

	ClientIdTypeLync ClientIdType = "Lync"

	ClientIdTypeOutlookService ClientIdType = "OutlookService"

	ClientIdTypeMacMail ClientIdType = "MacMail"
)

type EntityFeedbackEntityAddSourceType string

const (
	EntityFeedbackEntityAddSourceTypeNone EntityFeedbackEntityAddSourceType = "None"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApi EntityFeedbackEntityAddSourceType = "EntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApiCache EntityFeedbackEntityAddSourceType = "EntityRelevanceApiCache"

	EntityFeedbackEntityAddSourceTypeActiveDirectory EntityFeedbackEntityAddSourceType = "ActiveDirectory"

	EntityFeedbackEntityAddSourceTypeExplicitTyping EntityFeedbackEntityAddSourceType = "ExplicitTyping"

	EntityFeedbackEntityAddSourceTypePaste EntityFeedbackEntityAddSourceType = "Paste"

	EntityFeedbackEntityAddSourceTypeLocalCacheAndEntityRelevanceApi EntityFeedbackEntityAddSourceType = "LocalCacheAndEntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeLocalCache EntityFeedbackEntityAddSourceType = "LocalCache"

	EntityFeedbackEntityAddSourceTypeOther EntityFeedbackEntityAddSourceType = "Other"
)

type SystemDayOfWeek string

const (
	SystemDayOfWeekSunday SystemDayOfWeek = "Sunday"

	SystemDayOfWeekMonday SystemDayOfWeek = "Monday"

	SystemDayOfWeekTuesday SystemDayOfWeek = "Tuesday"

	SystemDayOfWeekWednesday SystemDayOfWeek = "Wednesday"

	SystemDayOfWeekThursday SystemDayOfWeek = "Thursday"

	SystemDayOfWeekFriday SystemDayOfWeek = "Friday"

	SystemDayOfWeekSaturday SystemDayOfWeek = "Saturday"
)

type EmailReminderChangeType string

const (
	EmailReminderChangeTypeNone EmailReminderChangeType = "None"

	EmailReminderChangeTypeAdded EmailReminderChangeType = "Added"

	EmailReminderChangeTypeOverride EmailReminderChangeType = "Override"

	EmailReminderChangeTypeDeleted EmailReminderChangeType = "Deleted"
)

type EmailReminderSendOption string

const (
	EmailReminderSendOptionNotSet EmailReminderSendOption = "NotSet"

	EmailReminderSendOptionUser EmailReminderSendOption = "User"

	EmailReminderSendOptionAllAttendees EmailReminderSendOption = "AllAttendees"

	EmailReminderSendOptionStaff EmailReminderSendOption = "Staff"

	EmailReminderSendOptionCustomer EmailReminderSendOption = "Customer"
)

type InsightStatusType string

const (
	InsightStatusTypeCreated InsightStatusType = "Created"

	InsightStatusTypeActive InsightStatusType = "Active"

	InsightStatusTypeDismissed InsightStatusType = "Dismissed"

	InsightStatusTypeInvalid InsightStatusType = "Invalid"
)

// Reasons no suggestions are returned by FindMeetingTimeCandidates

type EmptySuggestionReason string

const (
	EmptySuggestionReasonUnknown EmptySuggestionReason = "Unknown"

	EmptySuggestionReasonAttendeesUnavailable EmptySuggestionReason = "AttendeesUnavailable"

	EmptySuggestionReasonLocationsUnavailable EmptySuggestionReason = "LocationsUnavailable"

	EmptySuggestionReasonOrganizerUnavailable EmptySuggestionReason = "OrganizerUnavailable"

	EmptySuggestionReasonAttendeesUnavailableOrUnknown EmptySuggestionReason = "AttendeesUnavailableOrUnknown"
)

type AddInStateType string

const (
	AddInStateTypeFlagged AddInStateType = "Flagged"

	AddInStateTypeOK AddInStateType = "OK"

	AddInStateTypeRemoved AddInStateType = "Removed"

	AddInStateTypeUndefined AddInStateType = "Undefined"

	AddInStateTypeWithdrawingSoon AddInStateType = "WithdrawingSoon"

	AddInStateTypeWithdrawn AddInStateType = "Withdrawn"
)

type OfficeClientCodeType string

type VersionType string

type MailboxCulture MailboxCultureType

type ManagementRole ManagementRoleType

type SerializedSecurityContext SerializedSecurityContextType

type ExchangeImpersonation ExchangeImpersonationType

type OpenAsAdminOrSystemService OpenAsAdminOrSystemServiceType

type SharingSecurity EncryptedDataContainerType

type ProxySecurityContext ProxySecurityContextType

type ProxySuggesterSid ProxySecurityContextType

type ProxyPartnerToken ProxySecurityContextType

type ServerVersionInfo struct {
	XMLName xml.Name `xml:"t:ServerVersionInfo"`

	MajorVersion int32 `xml:"MajorVersion,attr,omitempty" json:"MajorVersion,omitempty"`

	MinorVersion int32 `xml:"MinorVersion,attr,omitempty" json:"MinorVersion,omitempty"`

	MajorBuildNumber int32 `xml:"MajorBuildNumber,attr,omitempty" json:"MajorBuildNumber,omitempty"`

	MinorBuildNumber int32 `xml:"MinorBuildNumber,attr,omitempty" json:"MinorBuildNumber,omitempty"`

	Version string `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type RequestServerVersion struct {
	XMLName xml.Name `xml:"t:RequestServerVersion"`

	Version *ExchangeVersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type DateTimePrecision DateTimePrecisionType

type Path BasePathToElementType

type FieldURI PathToUnindexedFieldType

type IndexedFieldURI PathToIndexedFieldType

type ExtendedFieldURI PathToExtendedFieldType

type ExceptionFieldURI PathToExceptionFieldType

type BaseItemId BaseItemIdType

type TimeZoneContext TimeZoneContextType

type Transition TransitionType

type AbsoluteDateTransition AbsoluteDateTransitionType

type RecurringDayTransition RecurringDayTransitionType

type RecurringDateTransition RecurringDateTransitionType

type SearchExpression SearchExpressionType

type Exists ExistsType

type Excludes ExcludesType

type IsEqualTo IsEqualToType

type IsNotEqualTo IsNotEqualToType

type IsGreaterThan IsGreaterThanType

type IsGreaterThanOrEqualTo IsGreaterThanOrEqualToType

type IsLessThan IsLessThanType

type IsLessThanOrEqualTo IsLessThanOrEqualToType

type Contains ContainsExpressionType

type Not NotType

type And AndType

type Or OrType

type Near NearType

type Mailbox EmailAddress

type FreeBusyViewOptions FreeBusyViewOptionsType

type TimeZone SerializableTimeZone

type SuggestionsViewOptions SuggestionsViewOptionsType

type OofSettings UserOofSettings

type MeetingSpace MeetingSpaceType

type MeetingInstance MeetingInstanceType

type NonNegativeInteger struct {
	Value *NonNegativeInteger `xml:",chardata" json:"-,"`
}

type Language string

type MailboxCultureType struct {
	XMLName xml.Name `xml:"t:MailboxCulture"`

	Value *Language `xml:",chardata" json:"-,"`
}

type InstalledAppType struct {
	XMLName xml.Name `xml:"t:Extension"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	MarketplaceAssetId string `xml:"t:MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	Enabled bool `xml:"t:Enabled,omitempty" json:"Enabled,omitempty"`

	ConsentState string `xml:"t:ConsentState,omitempty" json:"ConsentState,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`

	LicenseStatus string `xml:"t:LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate xsd.DateTime `xml:"t:TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	ProviderName string `xml:"t:ProviderName,omitempty" json:"ProviderName,omitempty"`

	IconUrl string `xml:"t:IconUrl,omitempty" json:"IconUrl,omitempty"`

	HighResolutionIconUrl string `xml:"t:HighResolutionIconUrl,omitempty" json:"HighResolutionIconUrl,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	Description string `xml:"t:Description,omitempty" json:"Description,omitempty"`

	Requirements string `xml:"t:Requirements,omitempty" json:"Requirements,omitempty"`

	Version string `xml:"t:Version,omitempty" json:"Version,omitempty"`
}

type NonEmptyArrayOfRoleType struct {
	Role []string `xml:"t:Role,omitempty" json:"Role,omitempty"`
}

type ManagementRoleType struct {
	XMLName xml.Name `xml:"t:ManagementRole"`

	UserRoles *NonEmptyArrayOfRoleType `xml:"t:UserRoles,omitempty" json:"UserRoles,omitempty"`

	ApplicationRoles *NonEmptyArrayOfRoleType `xml:"t:ApplicationRoles,omitempty" json:"ApplicationRoles,omitempty"`
}

type SidAndAttributesType struct {
	SecurityIdentifier string `xml:"t:SecurityIdentifier,omitempty" json:"SecurityIdentifier,omitempty"`

	Attributes uint32 `xml:"Attributes,attr,omitempty" json:"Attributes,omitempty"`
}

type NonEmptyArrayOfGroupIdentifiersType struct {
	XMLName xml.Name `xml:"t:GroupSids"`

	GroupIdentifier []*SidAndAttributesType `xml:"t:GroupIdentifier,omitempty" json:"GroupIdentifier,omitempty"`
}

type NonEmptyArrayOfRestrictedGroupIdentifiersType struct {
	XMLName xml.Name `xml:"t:RestrictedGroupSids"`

	RestrictedGroupIdentifier []*SidAndAttributesType `xml:"t:RestrictedGroupIdentifier,omitempty" json:"RestrictedGroupIdentifier,omitempty"`
}

type SerializedSecurityContextType struct {
	XMLName xml.Name `xml:"t:SerializedSecurityContext"`

	UserSid string `xml:"t:UserSid,omitempty" json:"UserSid,omitempty"`

	GroupSids *NonEmptyArrayOfGroupIdentifiersType `xml:"t:GroupSids,omitempty" json:"GroupSids,omitempty"`

	RestrictedGroupSids *NonEmptyArrayOfRestrictedGroupIdentifiersType `xml:"t:RestrictedGroupSids,omitempty" json:"RestrictedGroupSids,omitempty"`

	PrimarySmtpAddress string `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type ConnectingSIDType struct {
	PrincipalName *PrincipalNameType `xml:"t:PrincipalName,omitempty" json:"PrincipalName,omitempty"`

	SID *SIDType `xml:"t:SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress *PrimarySmtpAddressType `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"t:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type PrincipalNameType struct {
	XMLName xml.Name `xml:"t:PrincipalName"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SIDType struct {
	XMLName xml.Name `xml:"t:SID"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type PrimarySmtpAddressType struct {
	XMLName xml.Name `xml:"t:PrimarySmtpAddress"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SmtpAddressType struct {
	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type ExchangeImpersonationType struct {
	XMLName xml.Name `xml:"t:ExchangeImpersonation"`

	ConnectingSID *ConnectingSIDType `xml:"t:ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`
}

type OpenAsAdminOrSystemServiceType struct {
	XMLName xml.Name `xml:"t:OpenAsAdminOrSystemService"`

	ConnectingSID *ConnectingSIDType `xml:"t:ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`

	LogonType *SpecialLogonTypeType `xml:"LogonType,attr,omitempty" json:"LogonType,omitempty"`

	BudgetType int32 `xml:"BudgetType,attr,omitempty" json:"BudgetType,omitempty"`
}

type ProxySecurityContextType struct {
	Value []byte `xml:",chardata" json:"-,"`
}

type BaseEmailAddressType struct {
}

type EmailAddressType struct {
	*BaseEmailAddressType

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	EmailAddress *NonEmptyStringType `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	RoutingType *NonEmptyStringType `xml:"t:RoutingType,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"t:MailboxType,omitempty" json:"MailboxType,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	OriginalDisplayName string `xml:"t:OriginalDisplayName,omitempty" json:"OriginalDisplayName,omitempty"`
}

type EmailAddressExtendedType struct {
	*EmailAddressType

	ExternalObjectId string `xml:"t:ExternalObjectId,omitempty" json:"ExternalObjectId,omitempty"`

	PrimaryEmailAddress *NonEmptyStringType `xml:"t:PrimaryEmailAddress,omitempty" json:"PrimaryEmailAddress,omitempty"`
}

type ArrayOfEmailAddressesType struct {
	Address []*EmailAddressType `xml:"t:Address,omitempty" json:"Address,omitempty"`
}

type DirectoryEntryType struct {
	Id *EmailAddressType `xml:"t:Id,omitempty" json:"Id,omitempty"`
}

type RoomType struct {
	XMLName xml.Name `xml:"t:Room"`

	*DirectoryEntryType
}

type ArrayOfRoomsType struct {
	XMLName xml.Name `xml:"t:Rooms"`

	Room []*RoomType `xml:"t:Room,omitempty" json:"Room,omitempty"`
}

type TimeSlot struct {
	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	DurationInMinutes float64 `xml:"t:DurationInMinutes,omitempty" json:"DurationInMinutes,omitempty"`
}

type MeetingLocation struct {
	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type ReminderType struct {
	XMLName xml.Name `xml:"t:Reminder"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	ReminderTime xsd.DateTime `xml:"t:ReminderTime,omitempty" json:"ReminderTime,omitempty"`

	StartDate xsd.DateTime `xml:"t:StartDate,omitempty" json:"StartDate,omitempty"`

	EndDate xsd.DateTime `xml:"t:EndDate,omitempty" json:"EndDate,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	RecurringMasterItemId *ItemIdType `xml:"t:RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	ReminderGroup *ReminderGroupType `xml:"t:ReminderGroup,omitempty" json:"ReminderGroup,omitempty"`

	UID string `xml:"t:UID,omitempty" json:"UID,omitempty"`
}

type ArrayOfRemindersType struct {
	XMLName xml.Name `xml:"t:Reminders"`

	Reminder []*ReminderType `xml:"t:Reminder,omitempty" json:"Reminder,omitempty"`
}

type ArrayOfRecipientsType struct {
	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type SingleRecipientType struct {
	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type BasePathToElementType struct {
}

type PathToUnindexedFieldType struct {
	*BasePathToElementType

	FieldURI *UnindexedFieldURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToIndexedFieldType struct {
	*BasePathToElementType

	FieldURI *DictionaryURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`

	FieldIndex string `xml:"FieldIndex,attr,omitempty" json:"FieldIndex,omitempty"`
}

type PathToExceptionFieldType struct {
	XMLName xml.Name `xml:"t:ExceptionFieldURI"`

	*BasePathToElementType

	FieldURI *ExceptionPropertyURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToExtendedFieldType struct {
	*BasePathToElementType

	DistinguishedPropertySetId *DistinguishedPropertySetType `xml:"DistinguishedPropertySetId,attr,omitempty" json:"DistinguishedPropertySetId,omitempty"`

	PropertySetId *GuidType `xml:"PropertySetId,attr,omitempty" json:"PropertySetId,omitempty"`

	PropertyTag *PropertyTagType `xml:"PropertyTag,attr,omitempty" json:"PropertyTag,omitempty"`

	PropertyName string `xml:"PropertyName,attr,omitempty" json:"PropertyName,omitempty"`

	PropertyId int32 `xml:"PropertyId,attr,omitempty" json:"PropertyId,omitempty"`

	PropertyType *MapiPropertyTypeType `xml:"PropertyType,attr,omitempty" json:"PropertyType,omitempty"`
}

type NonEmptyArrayOfPathsToElementType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type NonEmptyArrayOfPropertyValuesType struct {
	XMLName xml.Name `xml:"t:Values"`

	Value []string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type NonEmptyArrayOfExtendedPropertyType struct {
	ExtendedProperty []*ExtendedPropertyType `xml:"t:ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type ExtendedPropertyType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"t:ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Values *NonEmptyArrayOfPropertyValuesType `xml:"t:Values,omitempty" json:"Values,omitempty"`
}

type FolderResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ItemResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	IncludeMimeContent bool `xml:"t:IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"t:BodyType,omitempty" json:"BodyType,omitempty"`

	UniqueBodyType *BodyTypeResponseType `xml:"t:UniqueBodyType,omitempty" json:"UniqueBodyType,omitempty"`

	NormalizedBodyType *BodyTypeResponseType `xml:"t:NormalizedBodyType,omitempty" json:"NormalizedBodyType,omitempty"`

	FilterHtmlContent bool `xml:"t:FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	ConvertHtmlCodePageToUTF8 bool `xml:"t:ConvertHtmlCodePageToUTF8,omitempty" json:"ConvertHtmlCodePageToUTF8,omitempty"`

	InlineImageUrlTemplate string `xml:"t:InlineImageUrlTemplate,omitempty" json:"InlineImageUrlTemplate,omitempty"`

	BlockExternalImages bool `xml:"t:BlockExternalImages,omitempty" json:"BlockExternalImages,omitempty"`

	AddBlankTargetToLinks bool `xml:"t:AddBlankTargetToLinks,omitempty" json:"AddBlankTargetToLinks,omitempty"`

	MaximumBodySize int32 `xml:"t:MaximumBodySize,omitempty" json:"MaximumBodySize,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type AttachmentResponseShapeType struct {
	XMLName xml.Name `xml:"t:AttachmentShape"`

	IncludeMimeContent bool `xml:"t:IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"t:BodyType,omitempty" json:"BodyType,omitempty"`

	FilterHtmlContent bool `xml:"t:FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ConversationResponseShapeType struct {
	XMLName xml.Name `xml:"t:ConversationShape"`

	BaseShape *DefaultShapeNamesType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonaResponseShapeType struct {
	XMLName xml.Name `xml:"t:PersonaShape"`

	BaseShape *DefaultShapeNamesType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type NonEmptyArrayOfClientAccessTokenRequestsType struct {
	XMLName xml.Name `xml:"t:TokenRequests"`

	TokenRequest []*ClientAccessTokenRequestType `xml:"t:TokenRequest,omitempty" json:"TokenRequest,omitempty"`
}

type ClientAccessTokenRequestType struct {
	XMLName xml.Name `xml:"t:TokenRequest"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"t:TokenType,omitempty" json:"TokenType,omitempty"`

	Scope string `xml:"t:Scope,omitempty" json:"Scope,omitempty"`

	ResourceUri string `xml:"t:ResourceUri,omitempty" json:"ResourceUri,omitempty"`
}

type ClientAccessTokenType struct {
	XMLName xml.Name `xml:"t:Token"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"t:TokenType,omitempty" json:"TokenType,omitempty"`

	TokenValue string `xml:"t:TokenValue,omitempty" json:"TokenValue,omitempty"`

	TTL int32 `xml:"t:TTL,omitempty" json:"TTL,omitempty"`
}

type ChangeDescriptionType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type ItemChangeDescriptionType struct {
	*ChangeDescriptionType
}

type FolderChangeDescriptionType struct {
	*ChangeDescriptionType
}

type SetItemFieldType struct {
	XMLName xml.Name `xml:"t:SetItemField"`

	*ItemChangeDescriptionType

	FieldURI *FieldURI `xml:"FieldURI,omitempty" json:"FieldURI,omitempty"`

	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"t:DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type SetFolderFieldType struct {
	XMLName xml.Name `xml:"t:SetFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"t:Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"t:CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"t:ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"t:SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"t:TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type DeleteItemFieldType struct {
	XMLName xml.Name `xml:"t:DeleteItemField"`

	*ItemChangeDescriptionType
}

type DeleteFolderFieldType struct {
	XMLName xml.Name `xml:"t:DeleteFolderField"`

	*FolderChangeDescriptionType
}

type AppendToItemFieldType struct {
	XMLName xml.Name `xml:"t:AppendToItemField"`

	*ItemChangeDescriptionType

	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"t:DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type AppendToFolderFieldType struct {
	XMLName xml.Name `xml:"t:AppendToFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"t:Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"t:CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"t:ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"t:SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"t:TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type NonEmptyArrayOfItemChangeDescriptionsType struct {
	AppendToItemField *AppendToItemFieldType `xml:"t:AppendToItemField,omitempty" json:"AppendToItemField,omitempty"`

	SetItemField *SetItemFieldType `xml:"t:SetItemField,omitempty" json:"SetItemField,omitempty"`

	DeleteItemField *DeleteItemFieldType `xml:"t:DeleteItemField,omitempty" json:"DeleteItemField,omitempty"`
}

type NonEmptyArrayOfFolderChangeDescriptionsType struct {
	XMLName xml.Name `xml:"t:Updates"`

	AppendToFolderField *AppendToFolderFieldType `xml:"t:AppendToFolderField,omitempty" json:"AppendToFolderField,omitempty"`

	SetFolderField *SetFolderFieldType `xml:"t:SetFolderField,omitempty" json:"SetFolderField,omitempty"`

	DeleteFolderField *DeleteFolderFieldType `xml:"t:DeleteFolderField,omitempty" json:"DeleteFolderField,omitempty"`
}

type ItemChangeType struct {
	XMLName xml.Name `xml:"t:ItemChange"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"t:Updates,omitempty" json:"Updates,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"t:CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"t:OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"t:RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`
}

type NonEmptyArrayOfItemChangesType struct {
	XMLName xml.Name `xml:"t:ItemChanges"`

	ItemChange []*ItemChangeType `xml:"t:ItemChange,omitempty" json:"ItemChange,omitempty"`
}

type InternetHeaderType struct {
	XMLName xml.Name `xml:"t:InternetMessageHeader"`

	Value string `xml:",chardata" json:"-,"`

	HeaderName string `xml:"HeaderName,attr,omitempty" json:"HeaderName,omitempty"`
}

type NonEmptyArrayOfInternetHeadersType struct {
	XMLName xml.Name `xml:"t:InternetMessageHeaders"`

	InternetMessageHeader []*InternetHeaderType `xml:"t:InternetMessageHeader,omitempty" json:"InternetMessageHeader,omitempty"`
}

type NonEmptyArrayOfPredictedActionReasonType struct {
	XMLName xml.Name `xml:"t:PredictedActionReasons"`

	PredictedActionReason []*PredictedActionReasonType `xml:"t:PredictedActionReason,omitempty" json:"PredictedActionReason,omitempty"`
}

type RequestAttachmentIdType struct {
	XMLName xml.Name `xml:"t:AttachmentId"`

	*BaseItemIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type AttachmentIdType struct {
	XMLName xml.Name `xml:"t:AttachmentId"`

	*RequestAttachmentIdType

	RootItemId string `xml:"RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type RootItemIdType struct {
	XMLName xml.Name `xml:"t:RootItemId"`

	*BaseItemIdType

	RootItemId string `xml:"RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type NonEmptyArrayOfRequestAttachmentIdsType struct {
	AttachmentId *RequestAttachmentIdType `xml:"t:AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type AttachmentType struct {
	AttachmentId *AttachmentIdType `xml:"t:AttachmentId,omitempty" json:"AttachmentId,omitempty"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	ContentType string `xml:"t:ContentType,omitempty" json:"ContentType,omitempty"`

	ContentId string `xml:"t:ContentId,omitempty" json:"ContentId,omitempty"`

	ContentLocation string `xml:"t:ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	AttachmentOriginalUrl string `xml:"t:AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty"`

	Size int32 `xml:"t:Size,omitempty" json:"Size,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"t:LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsInline bool `xml:"t:IsInline,omitempty" json:"IsInline,omitempty"`
}

type ItemAttachmentType struct {
	*AttachmentType

	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type SyncFolderItemsCreateOrUpdateType struct {
	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"t:DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type FileAttachmentType struct {
	*AttachmentType

	IsContactPhoto bool `xml:"t:IsContactPhoto,omitempty" json:"IsContactPhoto,omitempty"`

	Content []byte `xml:"t:Content,omitempty" json:"Content,omitempty"`
}

type ReferenceAttachmentType struct {
	*AttachmentType

	AttachLongPathName string `xml:"t:AttachLongPathName,omitempty" json:"AttachLongPathName,omitempty"`

	ProviderType string `xml:"t:ProviderType,omitempty" json:"ProviderType,omitempty"`

	ProviderEndpointUrl string `xml:"t:ProviderEndpointUrl,omitempty" json:"ProviderEndpointUrl,omitempty"`

	AttachmentThumbnailUrl string `xml:"t:AttachmentThumbnailUrl,omitempty" json:"AttachmentThumbnailUrl,omitempty"`

	AttachmentPreviewUrl string `xml:"t:AttachmentPreviewUrl,omitempty" json:"AttachmentPreviewUrl,omitempty"`

	PermissionType int32 `xml:"t:PermissionType,omitempty" json:"PermissionType,omitempty"`

	OriginalPermissionType int32 `xml:"t:OriginalPermissionType,omitempty" json:"OriginalPermissionType,omitempty"`

	AttachmentIsFolder bool `xml:"t:AttachmentIsFolder,omitempty" json:"AttachmentIsFolder,omitempty"`
}

type ArrayOfAttachmentsType struct {
	ItemAttachment *ItemAttachmentType `xml:"t:ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"t:FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"t:ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type NonEmptyArrayOfAttachmentsType struct {
	ItemAttachment *ItemAttachmentType `xml:"t:ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"t:FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"t:ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type BodyType struct {
	Value string `xml:",chardata" json:"-,"`

	BodyType *BodyTypeType `xml:"BodyType,attr,omitempty" json:"t:BodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type UniqueBodyType struct {
	Value string `xml:",chardata" json:"-,"`

	UniqueBodyType *BodyTypeType `xml:"UniqueBodyType,attr,omitempty" json:"UniqueBodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type NormalizedBodyType struct {
	Value string `xml:",chardata" json:"-,"`

	NormalizedBodyType *BodyTypeType `xml:"NormalizedBodyType,attr,omitempty" json:"NormalizedBodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type BaseFolderIdType struct {
}

type DistinguishedFolderIdType struct {
	*BaseFolderIdType

	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	Id *DistinguishedFolderIdNameType `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type FolderIdType struct {
	*BaseFolderIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type AddressListIdType struct {
	XMLName xml.Name `xml:"t:AddressListId"`

	*BaseFolderIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfDistinguishedFolderIdType struct {
	XMLName xml.Name `xml:"t:DistinguishedFolderScope"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"t:DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfBaseFolderIdsType struct {
	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"t:DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type TargetFolderIdType struct {
	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"t:DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	AddressListId *AddressListIdType `xml:"t:AddressListId,omitempty" json:"AddressListId,omitempty"`
}

type NonEmptyArrayOfUploadItemsType struct {
	XMLName xml.Name `xml:"t:Items"`

	Item []*UploadItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type UploadItemType struct {
	XMLName xml.Name `xml:"t:Item"`

	ParentFolderId *FolderIdType `xml:"t:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	Data []byte `xml:"t:Data,omitempty" json:"Data,omitempty"`

	CreateAction *CreateActionType `xml:"CreateAction,attr,omitempty" json:"CreateAction,omitempty"`

	IsAssociated bool `xml:"IsAssociated,attr,omitempty" json:"IsAssociated,omitempty"`
}

type FindFolderParentType struct {
	XMLName xml.Name `xml:"t:RootFolder"`

	Folders *ArrayOfFoldersType `xml:"t:Folders,omitempty" json:"Folders,omitempty"`
}

type BaseFolderType struct {
	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	ParentFolderId *FolderIdType `xml:"t:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderClass string `xml:"t:FolderClass,omitempty" json:"FolderClass,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	TotalCount int32 `xml:"t:TotalCount,omitempty" json:"TotalCount,omitempty"`

	ChildFolderCount int32 `xml:"t:ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"t:ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	ManagedFolderInformation *ManagedFolderInformationType `xml:"t:ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"t:EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdNameType `xml:"t:DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	PolicyTag *RetentionTagType `xml:"t:PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"t:ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	ReplicaList *ArrayOfStringsType `xml:"t:ReplicaList,omitempty" json:"ReplicaList,omitempty"`
}

type ManagedFolderInformationType struct {
	XMLName xml.Name `xml:"t:ManagedFolderInformation"`

	CanDelete bool `xml:"t:CanDelete,omitempty" json:"CanDelete,omitempty"`

	CanRenameOrMove bool `xml:"t:CanRenameOrMove,omitempty" json:"CanRenameOrMove,omitempty"`

	MustDisplayComment bool `xml:"t:MustDisplayComment,omitempty" json:"MustDisplayComment,omitempty"`

	HasQuota bool `xml:"t:HasQuota,omitempty" json:"HasQuota,omitempty"`

	IsManagedFoldersRoot bool `xml:"t:IsManagedFoldersRoot,omitempty" json:"IsManagedFoldersRoot,omitempty"`

	ManagedFolderId string `xml:"t:ManagedFolderId,omitempty" json:"ManagedFolderId,omitempty"`

	Comment string `xml:"t:Comment,omitempty" json:"Comment,omitempty"`

	StorageQuota int32 `xml:"t:StorageQuota,omitempty" json:"StorageQuota,omitempty"`

	FolderSize int32 `xml:"t:FolderSize,omitempty" json:"FolderSize,omitempty"`

	HomePage string `xml:"t:HomePage,omitempty" json:"HomePage,omitempty"`
}

type FolderType struct {
	*BaseFolderType

	PermissionSet *PermissionSetType `xml:"t:PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	UnreadCount int32 `xml:"t:UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type CalendarFolderType struct {
	*BaseFolderType

	SharingEffectiveRights *CalendarPermissionReadAccessType `xml:"t:SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *CalendarPermissionSetType `xml:"t:PermissionSet,omitempty" json:"PermissionSet,omitempty"`
}

type ReminderItemActionType struct {
	XMLName xml.Name `xml:"t:ReminderItemAction"`

	ActionType *ReminderActionType `xml:"t:ActionType,omitempty" json:"ActionType,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	NewReminderTime string `xml:"t:NewReminderTime,omitempty" json:"NewReminderTime,omitempty"`
}

type NonEmptyArrayOfReminderItemActionType struct {
	XMLName xml.Name `xml:"t:ReminderItemActions"`

	ReminderItemAction []*ReminderItemActionType `xml:"t:ReminderItemAction,omitempty" json:"ReminderItemAction,omitempty"`
}

type ContactsFolderType struct {
	*BaseFolderType

	SharingEffectiveRights *PermissionReadAccessType `xml:"t:SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *PermissionSetType `xml:"t:PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	SourceId string `xml:"t:SourceId,omitempty" json:"SourceId,omitempty"`

	AccountName string `xml:"t:AccountName,omitempty" json:"AccountName,omitempty"`
}

type SearchFolderType struct {
	*FolderType

	SearchParameters *SearchParametersType `xml:"t:SearchParameters,omitempty" json:"SearchParameters,omitempty"`
}

type TasksFolderType struct {
	*FolderType
}

type NonEmptyArrayOfFoldersType struct {
	Folder *FolderType `xml:"t:Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"t:CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"t:ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"t:SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"t:TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type ArrayOfFoldersType struct {
	Folder *FolderType `xml:"t:Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"t:CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"t:ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"t:SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"t:TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type BaseItemIdType struct {
}

type ItemIdType struct {
	*BaseItemIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type NonEmptyArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"t:OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"t:RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	RecurringMasterItemIdRanges *RecurringMasterItemIdRangesType `xml:"t:RecurringMasterItemIdRanges,omitempty" json:"RecurringMasterItemIdRanges,omitempty"`
}

type ArrayOfBaseItemIdsType struct {
	XMLName xml.Name `xml:"t:Ignore"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`
}

type ArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`
}

type ResponseObjectCoreType struct {
	*MessageType

	ReferenceItemId *ItemIdType `xml:"t:ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty"`
}

type ResponseObjectType struct {
	*ResponseObjectCoreType

	// The name of this reply object class as an English string. The client application is required to translate it if it's running in a different locale

	ObjectName string `xml:"ObjectName,attr,omitempty" json:"ObjectName,omitempty"`
}

type NonEmptyArrayOfResponseObjectsType struct {
	XMLName xml.Name `xml:"t:ResponseObjects"`

	AcceptItem *AcceptItemType `xml:"t:AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"t:TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"t:DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"t:ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"t:ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"t:ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"t:CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"t:RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"t:SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"t:PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"t:AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	AddItemToMyCalendar *AddItemToMyCalendarType `xml:"t:AddItemToMyCalendar,omitempty" json:"AddItemToMyCalendar,omitempty"`

	ProposeNewTime *ProposeNewTimeType `xml:"t:ProposeNewTime,omitempty" json:"ProposeNewTime,omitempty"`
}

type FolderChangeType struct {
	XMLName xml.Name `xml:"t:FolderChange"`

	Updates *NonEmptyArrayOfFolderChangeDescriptionsType `xml:"t:Updates,omitempty" json:"Updates,omitempty"`

	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"t:DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfFolderChangesType struct {
	XMLName xml.Name `xml:"t:FolderChanges"`

	FolderChange []*FolderChangeType `xml:"t:FolderChange,omitempty" json:"FolderChange,omitempty"`
}

type WellKnownResponseObjectType struct {
}

type SmartResponseBaseType struct {
}

type SmartResponseType struct {
	*SmartResponseBaseType

	NewBodyContent *BodyType `xml:"t:NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type ReplyToItemType struct {
	*SmartResponseType
}

type ReplyAllToItemType struct {
	*SmartResponseType

	IsSpecificMessageReply bool `xml:"t:IsSpecificMessageReply,omitempty" json:"IsSpecificMessageReply,omitempty"`
}

type ForwardItemType struct {
	*SmartResponseType
}

type CancelCalendarItemType struct {
	*SmartResponseType
}

type ReferenceItemResponseType struct {
}

type SuppressReadReceiptType struct {
	*ReferenceItemResponseType
}

type FindItemParentType struct {
	XMLName xml.Name `xml:"t:RootFolder"`

	Items *ArrayOfRealItemsType `xml:"t:Items,omitempty" json:"Items,omitempty"`

	Groups *ArrayOfGroupedItemsType `xml:"t:Groups,omitempty" json:"Groups,omitempty"`
}

type ItemType struct {
	MimeContent *MimeContentType `xml:"t:MimeContent,omitempty" json:"MimeContent,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	ParentFolderId *FolderIdType `xml:"t:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemClass *ItemClassType `xml:"t:ItemClass,omitempty" json:"ItemClass,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"t:Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	Body *BodyType `xml:"t:Body,omitempty" json:"Body,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"t:Attachments,omitempty" json:"Attachments,omitempty"`

	DateTimeReceived xsd.DateTime `xml:"t:DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty"`

	Size int32 `xml:"t:Size,omitempty" json:"Size,omitempty"`

	Categories *ArrayOfStringsType `xml:"t:Categories,omitempty" json:"Categories,omitempty"`

	Importance *ImportanceChoicesType `xml:"t:Importance,omitempty" json:"Importance,omitempty"`

	InReplyTo string `xml:"t:InReplyTo,omitempty" json:"InReplyTo,omitempty"`

	IsSubmitted bool `xml:"t:IsSubmitted,omitempty" json:"IsSubmitted,omitempty"`

	IsDraft bool `xml:"t:IsDraft,omitempty" json:"IsDraft,omitempty"`

	IsFromMe bool `xml:"t:IsFromMe,omitempty" json:"IsFromMe,omitempty"`

	IsResend bool `xml:"t:IsResend,omitempty" json:"IsResend,omitempty"`

	IsUnmodified bool `xml:"t:IsUnmodified,omitempty" json:"IsUnmodified,omitempty"`

	InternetMessageHeaders *NonEmptyArrayOfInternetHeadersType `xml:"t:InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty"`

	DateTimeSent xsd.DateTime `xml:"t:DateTimeSent,omitempty" json:"DateTimeSent,omitempty"`

	DateTimeCreated xsd.DateTime `xml:"t:DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	ResponseObjects *NonEmptyArrayOfResponseObjectsType `xml:"t:ResponseObjects,omitempty" json:"ResponseObjects,omitempty"`

	ReminderDueBy xsd.DateTime `xml:"t:ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty"`

	ReminderIsSet bool `xml:"t:ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty"`

	ReminderNextTime xsd.DateTime `xml:"t:ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty"`

	ReminderMinutesBeforeStart *ReminderMinutesBeforeStartType `xml:"t:ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty"`

	DisplayCc string `xml:"t:DisplayCc,omitempty" json:"DisplayCc,omitempty"`

	DisplayTo string `xml:"t:DisplayTo,omitempty" json:"DisplayTo,omitempty"`

	DisplayBcc string `xml:"t:DisplayBcc,omitempty" json:"DisplayBcc,omitempty"`

	HasAttachments bool `xml:"t:HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"t:ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	Culture *Language `xml:"t:Culture,omitempty" json:"Culture,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"t:EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	LastModifiedName string `xml:"t:LastModifiedName,omitempty" json:"LastModifiedName,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"t:LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsAssociated bool `xml:"t:IsAssociated,omitempty" json:"IsAssociated,omitempty"`

	WebClientReadFormQueryString string `xml:"t:WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty"`

	WebClientEditFormQueryString string `xml:"t:WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty"`

	ConversationId *ItemIdType `xml:"t:ConversationId,omitempty" json:"ConversationId,omitempty"`

	UniqueBody *BodyType `xml:"t:UniqueBody,omitempty" json:"UniqueBody,omitempty"`

	Flag *FlagType `xml:"t:Flag,omitempty" json:"Flag,omitempty"`

	StoreEntryId []byte `xml:"t:StoreEntryId,omitempty" json:"StoreEntryId,omitempty"`

	InstanceKey []byte `xml:"t:InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	NormalizedBody *BodyType `xml:"t:NormalizedBody,omitempty" json:"NormalizedBody,omitempty"`

	EntityExtractionResult *EntityExtractionResultType `xml:"t:EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty"`

	PolicyTag *RetentionTagType `xml:"t:PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"t:ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	RetentionDate xsd.DateTime `xml:"t:RetentionDate,omitempty" json:"RetentionDate,omitempty"`

	Preview string `xml:"t:Preview,omitempty" json:"Preview,omitempty"`

	RightsManagementLicenseData *RightsManagementLicenseDataType `xml:"t:RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty"`

	PredictedActionReasons *NonEmptyArrayOfPredictedActionReasonType `xml:"t:PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty"`

	IsClutter bool `xml:"t:IsClutter,omitempty" json:"IsClutter,omitempty"`

	BlockStatus bool `xml:"t:BlockStatus,omitempty" json:"BlockStatus,omitempty"`

	HasBlockedImages bool `xml:"t:HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty"`

	TextBody *BodyType `xml:"t:TextBody,omitempty" json:"TextBody,omitempty"`

	IconIndex *IconIndexType `xml:"t:IconIndex,omitempty" json:"IconIndex,omitempty"`

	SearchKey []byte `xml:"t:SearchKey,omitempty" json:"SearchKey,omitempty"`

	SortKey int64 `xml:"t:SortKey,omitempty" json:"SortKey,omitempty"`

	Hashtags *ArrayOfStringsType `xml:"t:Hashtags,omitempty" json:"Hashtags,omitempty"`

	Mentions *ArrayOfRecipientsType `xml:"t:Mentions,omitempty" json:"Mentions,omitempty"`

	MentionedMe bool `xml:"t:MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	MentionsPreview *MentionsPreviewType `xml:"t:MentionsPreview,omitempty" json:"MentionsPreview,omitempty"`

	MentionsEx *NonEmptyArrayOfMentionActionsType `xml:"t:MentionsEx,omitempty" json:"MentionsEx,omitempty"`

	AppliedHashtags *NonEmptyArrayOfAppliedHashtagType `xml:"t:AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty"`

	AppliedHashtagsPreview *AppliedHashtagsPreviewType `xml:"t:AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty"`

	Likes *NonEmptyArrayOfLikeType `xml:"t:Likes,omitempty" json:"Likes,omitempty"`

	LikesPreview *LikesPreviewType `xml:"t:LikesPreview,omitempty" json:"LikesPreview,omitempty"`

	PendingSocialActivityTagIds *ArrayOfStringsType `xml:"t:PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty"`

	AtAllMention bool `xml:"t:AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	CanDelete bool `xml:"t:CanDelete,omitempty" json:"CanDelete,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"t:InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`
}

type ArrayOfItemClassType struct {
	ItemClass *ItemClassType `xml:"t:ItemClass,omitempty" json:"ItemClass,omitempty"`
}

type FlagType struct {
	FlagStatus *FlagStatusType `xml:"t:FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	StartDate xsd.DateTime `xml:"t:StartDate,omitempty" json:"StartDate,omitempty"`

	DueDate xsd.DateTime `xml:"t:DueDate,omitempty" json:"DueDate,omitempty"`

	CompleteDate xsd.DateTime `xml:"t:CompleteDate,omitempty" json:"CompleteDate,omitempty"`
}

type EntityType struct {
	Position []*EmailPositionType `xml:"t:Position,omitempty" json:"Position,omitempty"`
}

type ArrayOfAddressesType struct {
	XMLName xml.Name `xml:"t:Addresses"`

	Address []string `xml:"t:Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfAddressEntitiesType struct {
	XMLName xml.Name `xml:"t:Addresses"`

	AddressEntity []*AddressEntityType `xml:"t:AddressEntity,omitempty" json:"AddressEntity,omitempty"`
}

type AddressEntityType struct {
	XMLName xml.Name `xml:"t:AddressEntity"`

	*EntityType

	Address string `xml:"t:Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfEmailAddressEntitiesType struct {
	XMLName xml.Name `xml:"t:EmailAddresses"`

	EmailAddressEntity []*EmailAddressEntityType `xml:"t:EmailAddressEntity,omitempty" json:"EmailAddressEntity,omitempty"`
}

type EmailAddressEntityType struct {
	XMLName xml.Name `xml:"t:EmailAddressEntity"`

	*EntityType

	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ArrayOfUrlEntitiesType struct {
	XMLName xml.Name `xml:"t:Urls"`

	UrlEntity []*UrlEntityType `xml:"t:UrlEntity,omitempty" json:"UrlEntity,omitempty"`
}

type UrlEntityType struct {
	XMLName xml.Name `xml:"t:UrlEntity"`

	*EntityType

	Url string `xml:"t:Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfMeetingSuggestionsType struct {
	XMLName xml.Name `xml:"t:MeetingSuggestions"`

	MeetingSuggestion []*MeetingSuggestionType `xml:"t:MeetingSuggestion,omitempty" json:"MeetingSuggestion,omitempty"`
}

type MeetingSuggestionType struct {
	XMLName xml.Name `xml:"t:MeetingSuggestion"`

	*EntityType

	Attendees *ArrayOfEmailUsersType `xml:"t:Attendees,omitempty" json:"Attendees,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	MeetingString string `xml:"t:MeetingString,omitempty" json:"MeetingString,omitempty"`

	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`
}

type ArrayOfTaskSuggestionsType struct {
	XMLName xml.Name `xml:"t:TaskSuggestions"`

	TaskSuggestion []*TaskSuggestionType `xml:"t:TaskSuggestion,omitempty" json:"TaskSuggestion,omitempty"`
}

type ArrayOfContactsType struct {
	XMLName xml.Name `xml:"t:Contacts"`

	Contact []*ContactType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`
}

type ContactType struct {
	XMLName xml.Name `xml:"t:Contact"`

	*EntityType

	PersonName string `xml:"t:PersonName,omitempty" json:"PersonName,omitempty"`

	BusinessName string `xml:"t:BusinessName,omitempty" json:"BusinessName,omitempty"`

	PhoneNumbers *ArrayOfPhonesType `xml:"t:PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	Urls *ArrayOfUrlsType `xml:"t:Urls,omitempty" json:"Urls,omitempty"`

	EmailAddresses *ArrayOfExtractedEmailAddresses `xml:"t:EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Addresses *ArrayOfAddressesType `xml:"t:Addresses,omitempty" json:"Addresses,omitempty"`

	ContactString string `xml:"t:ContactString,omitempty" json:"ContactString,omitempty"`
}

type ArrayOfUrlsType struct {
	XMLName xml.Name `xml:"t:Urls"`

	Url []string `xml:"t:Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfPhonesType struct {
	XMLName xml.Name `xml:"t:PhoneNumbers"`

	Phone []*PhoneType `xml:"t:Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneType struct {
	XMLName xml.Name `xml:"t:Phone"`

	OriginalPhoneString string `xml:"t:OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString string `xml:"t:PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfPhoneEntitiesType struct {
	XMLName xml.Name `xml:"t:PhoneNumbers"`

	Phone []*PhoneEntityType `xml:"t:Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneEntityType struct {
	XMLName xml.Name `xml:"t:Phone"`

	*EntityType

	OriginalPhoneString string `xml:"t:OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString string `xml:"t:PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfEmailUsersType struct {
	EmailUser []*EmailUserType `xml:"t:EmailUser,omitempty" json:"EmailUser,omitempty"`
}

type EmailUserType struct {
	XMLName xml.Name `xml:"t:EmailUser"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	UserId string `xml:"t:UserId,omitempty" json:"UserId,omitempty"`
}

type TaskSuggestionType struct {
	XMLName xml.Name `xml:"t:TaskSuggestion"`

	*EntityType

	TaskString string `xml:"t:TaskString,omitempty" json:"TaskString,omitempty"`

	Assignees *ArrayOfEmailUsersType `xml:"t:Assignees,omitempty" json:"Assignees,omitempty"`
}

type ArrayOfExtractedEmailAddresses struct {
	XMLName xml.Name `xml:"t:EmailAddresses"`

	EmailAddress []string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ParcelDeliveryEntityType struct {
	XMLName xml.Name `xml:"t:ParcelDelivery"`

	Carrier string `xml:"t:Carrier,omitempty" json:"Carrier,omitempty"`

	TrackingNumber string `xml:"t:TrackingNumber,omitempty" json:"TrackingNumber,omitempty"`

	TrackingUrl string `xml:"t:TrackingUrl,omitempty" json:"TrackingUrl,omitempty"`

	ExpectedArrivalFrom string `xml:"t:ExpectedArrivalFrom,omitempty" json:"ExpectedArrivalFrom,omitempty"`

	ExpectedArrivalUntil string `xml:"t:ExpectedArrivalUntil,omitempty" json:"ExpectedArrivalUntil,omitempty"`

	Product string `xml:"t:Product,omitempty" json:"Product,omitempty"`

	ProductUrl string `xml:"t:ProductUrl,omitempty" json:"ProductUrl,omitempty"`

	ProductImage string `xml:"t:ProductImage,omitempty" json:"ProductImage,omitempty"`

	ProductSku string `xml:"t:ProductSku,omitempty" json:"ProductSku,omitempty"`

	ProductDescription string `xml:"t:ProductDescription,omitempty" json:"ProductDescription,omitempty"`

	ProductBrand string `xml:"t:ProductBrand,omitempty" json:"ProductBrand,omitempty"`

	ProductColor string `xml:"t:ProductColor,omitempty" json:"ProductColor,omitempty"`

	OrderNumber string `xml:"t:OrderNumber,omitempty" json:"OrderNumber,omitempty"`

	Seller string `xml:"t:Seller,omitempty" json:"Seller,omitempty"`

	OrderStatus string `xml:"t:OrderStatus,omitempty" json:"OrderStatus,omitempty"`

	AddressName string `xml:"t:AddressName,omitempty" json:"AddressName,omitempty"`

	StreetAddress string `xml:"t:StreetAddress,omitempty" json:"StreetAddress,omitempty"`

	AddressLocality string `xml:"t:AddressLocality,omitempty" json:"AddressLocality,omitempty"`

	AddressRegion string `xml:"t:AddressRegion,omitempty" json:"AddressRegion,omitempty"`

	AddressCountry string `xml:"t:AddressCountry,omitempty" json:"AddressCountry,omitempty"`

	PostalCode string `xml:"t:PostalCode,omitempty" json:"PostalCode,omitempty"`
}

type InferenceClassificationOverrideType struct {
	Id *GuidType `xml:"t:Id,omitempty" json:"Id,omitempty"`

	SenderSmtpAddress string `xml:"t:SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName string `xml:"t:SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"t:AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type ArrayOfInferenceClassificationOverridesType struct {
	XMLName xml.Name `xml:"t:Overrides"`

	Override []*InferenceClassificationOverrideType `xml:"t:Override,omitempty" json:"Override,omitempty"`
}

type ArrayOfParcelDeliveryEntitiesType struct {
	XMLName xml.Name `xml:"t:ParcelDeliveries"`

	ParcelDelivery []*ParcelDeliveryEntityType `xml:"t:ParcelDelivery,omitempty" json:"ParcelDelivery,omitempty"`
}

type FlightEntityType struct {
	XMLName xml.Name `xml:"t:Flight"`

	FlightNumber string `xml:"t:FlightNumber,omitempty" json:"FlightNumber,omitempty"`

	AirlineIataCode string `xml:"t:AirlineIataCode,omitempty" json:"AirlineIataCode,omitempty"`

	DepartureTime string `xml:"t:DepartureTime,omitempty" json:"DepartureTime,omitempty"`

	WindowsTimeZoneName string `xml:"t:WindowsTimeZoneName,omitempty" json:"WindowsTimeZoneName,omitempty"`

	DepartureAirportIataCode string `xml:"t:DepartureAirportIataCode,omitempty" json:"DepartureAirportIataCode,omitempty"`

	ArrivalAirportIataCode string `xml:"t:ArrivalAirportIataCode,omitempty" json:"ArrivalAirportIataCode,omitempty"`
}

type ArrayOfFlightsType struct {
	XMLName xml.Name `xml:"t:Flights"`

	Flight []*FlightEntityType `xml:"t:Flight,omitempty" json:"Flight,omitempty"`
}

type FlightReservationEntityType struct {
	XMLName xml.Name `xml:"t:FlightReservation"`

	ReservationId string `xml:"t:ReservationId,omitempty" json:"ReservationId,omitempty"`

	ReservationStatus string `xml:"t:ReservationStatus,omitempty" json:"ReservationStatus,omitempty"`

	UnderName string `xml:"t:UnderName,omitempty" json:"UnderName,omitempty"`

	BrokerName string `xml:"t:BrokerName,omitempty" json:"BrokerName,omitempty"`

	BrokerPhone string `xml:"t:BrokerPhone,omitempty" json:"BrokerPhone,omitempty"`

	Flights *ArrayOfFlightsType `xml:"t:Flights,omitempty" json:"Flights,omitempty"`
}

type ArrayOfFlightReservationsType struct {
	XMLName xml.Name `xml:"t:FlightReservations"`

	FlightReservation []*FlightReservationEntityType `xml:"t:FlightReservation,omitempty" json:"FlightReservation,omitempty"`
}

type SenderAddInEntityType struct {
	XMLName xml.Name `xml:"t:Microsoft.OutlookServices.SenderApp"`

	ExtensionId string `xml:"t:ExtensionId,omitempty" json:"ExtensionId,omitempty"`
}

type ArrayOfSenderAddInsType struct {
	XMLName xml.Name `xml:"t:SenderAddIns"`

	Microsoft_OutlookServices_SenderApp []*SenderAddInEntityType `xml:"t:Microsoft.OutlookServices.SenderApp,omitempty" json:"Microsoft.OutlookServices.SenderApp,omitempty"`
}

type EntityExtractionResultType struct {
	XMLName xml.Name `xml:"t:EntityExtractionResult"`

	Addresses *ArrayOfAddressEntitiesType `xml:"t:Addresses,omitempty" json:"Addresses,omitempty"`

	MeetingSuggestions *ArrayOfMeetingSuggestionsType `xml:"t:MeetingSuggestions,omitempty" json:"MeetingSuggestions,omitempty"`

	TaskSuggestions *ArrayOfTaskSuggestionsType `xml:"t:TaskSuggestions,omitempty" json:"TaskSuggestions,omitempty"`

	EmailAddresses *ArrayOfEmailAddressEntitiesType `xml:"t:EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Contacts *ArrayOfContactsType `xml:"t:Contacts,omitempty" json:"Contacts,omitempty"`

	Urls *ArrayOfUrlEntitiesType `xml:"t:Urls,omitempty" json:"Urls,omitempty"`

	PhoneNumbers *ArrayOfPhoneEntitiesType `xml:"t:PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	ParcelDeliveries *ArrayOfParcelDeliveryEntitiesType `xml:"t:ParcelDeliveries,omitempty" json:"ParcelDeliveries,omitempty"`

	FlightReservations *ArrayOfFlightReservationsType `xml:"t:FlightReservations,omitempty" json:"FlightReservations,omitempty"`

	SenderAddIns *ArrayOfSenderAddInsType `xml:"t:SenderAddIns,omitempty" json:"SenderAddIns,omitempty"`
}

type RightsManagementLicenseDataType struct {
	XMLName xml.Name `xml:"t:RightsManagementLicenseData"`

	RightsManagedMessageDecryptionStatus int32 `xml:"t:RightsManagedMessageDecryptionStatus,omitempty" json:"RightsManagedMessageDecryptionStatus,omitempty"`

	RmsTemplateId string `xml:"t:RmsTemplateId,omitempty" json:"RmsTemplateId,omitempty"`

	TemplateName string `xml:"t:TemplateName,omitempty" json:"TemplateName,omitempty"`

	TemplateDescription string `xml:"t:TemplateDescription,omitempty" json:"TemplateDescription,omitempty"`

	EditAllowed bool `xml:"t:EditAllowed,omitempty" json:"EditAllowed,omitempty"`

	ReplyAllowed bool `xml:"t:ReplyAllowed,omitempty" json:"ReplyAllowed,omitempty"`

	ReplyAllAllowed bool `xml:"t:ReplyAllAllowed,omitempty" json:"ReplyAllAllowed,omitempty"`

	ForwardAllowed bool `xml:"t:ForwardAllowed,omitempty" json:"ForwardAllowed,omitempty"`

	ModifyRecipientsAllowed bool `xml:"t:ModifyRecipientsAllowed,omitempty" json:"ModifyRecipientsAllowed,omitempty"`

	ExtractAllowed bool `xml:"t:ExtractAllowed,omitempty" json:"ExtractAllowed,omitempty"`

	PrintAllowed bool `xml:"t:PrintAllowed,omitempty" json:"PrintAllowed,omitempty"`

	ExportAllowed bool `xml:"t:ExportAllowed,omitempty" json:"ExportAllowed,omitempty"`

	ProgrammaticAccessAllowed bool `xml:"t:ProgrammaticAccessAllowed,omitempty" json:"ProgrammaticAccessAllowed,omitempty"`

	IsOwner bool `xml:"t:IsOwner,omitempty" json:"IsOwner,omitempty"`

	ContentOwner string `xml:"t:ContentOwner,omitempty" json:"ContentOwner,omitempty"`

	ContentExpiryDate string `xml:"t:ContentExpiryDate,omitempty" json:"ContentExpiryDate,omitempty"`
}

type ConversationActionType struct {
	XMLName xml.Name `xml:"t:ConversationAction"`

	Action *ConversationActionTypeType `xml:"t:Action,omitempty" json:"Action,omitempty"`

	ConversationId *ItemIdType `xml:"t:ConversationId,omitempty" json:"ConversationId,omitempty"`

	ContextFolderId *TargetFolderIdType `xml:"t:ContextFolderId,omitempty" json:"ContextFolderId,omitempty"`

	ConversationLastSyncTime xsd.DateTime `xml:"t:ConversationLastSyncTime,omitempty" json:"ConversationLastSyncTime,omitempty"`

	ProcessRightAway bool `xml:"t:ProcessRightAway,omitempty" json:"ProcessRightAway,omitempty"`

	DestinationFolderId *TargetFolderIdType `xml:"t:DestinationFolderId,omitempty" json:"DestinationFolderId,omitempty"`

	Categories *ArrayOfStringsType `xml:"t:Categories,omitempty" json:"Categories,omitempty"`

	EnableAlwaysDelete bool `xml:"t:EnableAlwaysDelete,omitempty" json:"EnableAlwaysDelete,omitempty"`

	IsRead bool `xml:"t:IsRead,omitempty" json:"IsRead,omitempty"`

	DeleteType *DisposalType `xml:"t:DeleteType,omitempty" json:"DeleteType,omitempty"`

	RetentionPolicyType *RetentionType `xml:"t:RetentionPolicyType,omitempty" json:"RetentionPolicyType,omitempty"`

	RetentionPolicyTagId string `xml:"t:RetentionPolicyTagId,omitempty" json:"RetentionPolicyTagId,omitempty"`

	Flag *FlagType `xml:"t:Flag,omitempty" json:"Flag,omitempty"`

	SuppressReadReceipts bool `xml:"t:SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type NonEmptyArrayOfApplyConversationActionType struct {
	XMLName xml.Name `xml:"t:ConversationActions"`

	ConversationAction []*ConversationActionType `xml:"t:ConversationAction,omitempty" json:"ConversationAction,omitempty"`
}

type ConversationType struct {
	ConversationId *ItemIdType `xml:"t:ConversationId,omitempty" json:"ConversationId,omitempty"`

	ConversationTopic string `xml:"t:ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	UniqueRecipients *ArrayOfStringsType `xml:"t:UniqueRecipients,omitempty" json:"UniqueRecipients,omitempty"`

	GlobalUniqueRecipients *ArrayOfStringsType `xml:"t:GlobalUniqueRecipients,omitempty" json:"GlobalUniqueRecipients,omitempty"`

	UniqueUnreadSenders *ArrayOfStringsType `xml:"t:UniqueUnreadSenders,omitempty" json:"UniqueUnreadSenders,omitempty"`

	GlobalUniqueUnreadSenders *ArrayOfStringsType `xml:"t:GlobalUniqueUnreadSenders,omitempty" json:"GlobalUniqueUnreadSenders,omitempty"`

	UniqueSenders *ArrayOfStringsType `xml:"t:UniqueSenders,omitempty" json:"UniqueSenders,omitempty"`

	GlobalUniqueSenders *ArrayOfStringsType `xml:"t:GlobalUniqueSenders,omitempty" json:"GlobalUniqueSenders,omitempty"`

	LastDeliveryTime xsd.DateTime `xml:"t:LastDeliveryTime,omitempty" json:"LastDeliveryTime,omitempty"`

	GlobalLastDeliveryTime xsd.DateTime `xml:"t:GlobalLastDeliveryTime,omitempty" json:"GlobalLastDeliveryTime,omitempty"`

	Categories *ArrayOfStringsType `xml:"t:Categories,omitempty" json:"Categories,omitempty"`

	GlobalCategories *ArrayOfStringsType `xml:"t:GlobalCategories,omitempty" json:"GlobalCategories,omitempty"`

	FlagStatus *FlagStatusType `xml:"t:FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	GlobalFlagStatus *FlagStatusType `xml:"t:GlobalFlagStatus,omitempty" json:"GlobalFlagStatus,omitempty"`

	HasAttachments bool `xml:"t:HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	GlobalHasAttachments bool `xml:"t:GlobalHasAttachments,omitempty" json:"GlobalHasAttachments,omitempty"`

	MessageCount int32 `xml:"t:MessageCount,omitempty" json:"MessageCount,omitempty"`

	GlobalMessageCount int32 `xml:"t:GlobalMessageCount,omitempty" json:"GlobalMessageCount,omitempty"`

	UnreadCount int32 `xml:"t:UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	GlobalUnreadCount int32 `xml:"t:GlobalUnreadCount,omitempty" json:"GlobalUnreadCount,omitempty"`

	Size int32 `xml:"t:Size,omitempty" json:"Size,omitempty"`

	GlobalSize int32 `xml:"t:GlobalSize,omitempty" json:"GlobalSize,omitempty"`

	ItemClasses *ArrayOfItemClassType `xml:"t:ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	GlobalItemClasses *ArrayOfItemClassType `xml:"t:GlobalItemClasses,omitempty" json:"GlobalItemClasses,omitempty"`

	Importance *ImportanceChoicesType `xml:"t:Importance,omitempty" json:"Importance,omitempty"`

	GlobalImportance *ImportanceChoicesType `xml:"t:GlobalImportance,omitempty" json:"GlobalImportance,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"t:ItemIds,omitempty" json:"ItemIds,omitempty"`

	GlobalItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"t:GlobalItemIds,omitempty" json:"GlobalItemIds,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"t:LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	InstanceKey []byte `xml:"t:InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	Preview string `xml:"t:Preview,omitempty" json:"Preview,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"t:MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	IconIndex *IconIndexType `xml:"t:IconIndex,omitempty" json:"IconIndex,omitempty"`

	GlobalIconIndex *IconIndexType `xml:"t:GlobalIconIndex,omitempty" json:"GlobalIconIndex,omitempty"`

	DraftItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"t:DraftItemIds,omitempty" json:"DraftItemIds,omitempty"`

	HasIrm bool `xml:"t:HasIrm,omitempty" json:"HasIrm,omitempty"`

	GlobalHasIrm bool `xml:"t:GlobalHasIrm,omitempty" json:"GlobalHasIrm,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"t:InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`

	SortKey int64 `xml:"t:SortKey,omitempty" json:"SortKey,omitempty"`

	MentionedMe bool `xml:"t:MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	GlobalMentionedMe bool `xml:"t:GlobalMentionedMe,omitempty" json:"GlobalMentionedMe,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"t:SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"t:MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	From *SingleRecipientType `xml:"t:From,omitempty" json:"From,omitempty"`

	AtAllMention bool `xml:"t:AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	GlobalAtAllMention bool `xml:"t:GlobalAtAllMention,omitempty" json:"GlobalAtAllMention,omitempty"`
}

type HighlightTermType struct {
	XMLName xml.Name `xml:"t:Term"`

	Scope string `xml:"t:Scope,omitempty" json:"Scope,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfConversationsType struct {
	Conversation *ConversationType `xml:"t:Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationRequestType struct {
	XMLName xml.Name `xml:"t:Conversation"`

	ConversationId *ItemIdType `xml:"t:ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState []byte `xml:"t:SyncState,omitempty" json:"SyncState,omitempty"`
}

type ArrayOfConversationRequestsType struct {
	XMLName xml.Name `xml:"t:Conversations"`

	Conversation *ConversationRequestType `xml:"t:Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationNodeType struct {
	XMLName xml.Name `xml:"t:ConversationNode"`

	InternetMessageId string `xml:"t:InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	ParentInternetMessageId string `xml:"t:ParentInternetMessageId,omitempty" json:"ParentInternetMessageId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"t:Items,omitempty" json:"Items,omitempty"`
}

type ArrayOfConversationNodesType struct {
	XMLName xml.Name `xml:"t:ConversationNodes"`

	ConversationNode *ConversationNodeType `xml:"t:ConversationNode,omitempty" json:"ConversationNode,omitempty"`
}

type ConversationResponseType struct {
	XMLName xml.Name `xml:"t:Conversation"`

	ConversationId *ItemIdType `xml:"t:ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState []byte `xml:"t:SyncState,omitempty" json:"SyncState,omitempty"`

	ConversationNodes *ArrayOfConversationNodesType `xml:"t:ConversationNodes,omitempty" json:"ConversationNodes,omitempty"`

	CanDelete bool `xml:"t:CanDelete,omitempty" json:"CanDelete,omitempty"`
}

type ArrayOfHighlightTermsType struct {
	Term []*HighlightTermType `xml:"t:Term,omitempty" json:"Term,omitempty"`
}

type PersonaAttributionType struct {
	XMLName xml.Name `xml:"t:Attribution"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	SourceId *ItemIdType `xml:"t:SourceId,omitempty" json:"SourceId,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsWritable bool `xml:"t:IsWritable,omitempty" json:"IsWritable,omitempty"`

	IsQuickContact bool `xml:"t:IsQuickContact,omitempty" json:"IsQuickContact,omitempty"`

	IsHidden bool `xml:"t:IsHidden,omitempty" json:"IsHidden,omitempty"`

	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`
}

type ArrayOfPersonaAttributionsType struct {
	XMLName xml.Name `xml:"t:Attributions"`

	Attribution []*PersonaAttributionType `xml:"t:Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfValueAttributionsType struct {
	Attribution []string `xml:"t:Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfStringValueType struct {
	XMLName xml.Name `xml:"t:Values"`

	Value []string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type StringAttributedValueType struct {
	XMLName xml.Name `xml:"t:StringAttributedValue"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type BodyContentType struct {
	XMLName xml.Name `xml:"t:Value"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`

	BodyType *BodyTypeType `xml:"t:BodyType,omitempty" json:"BodyType,omitempty"`
}

type BodyContentAttributedValueType struct {
	XMLName xml.Name `xml:"t:BodyContentAttributedValue"`

	Value *BodyContentType `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type StringArrayAttributedValueType struct {
	XMLName xml.Name `xml:"t:StringArrayAttributedValue"`

	Values *ArrayOfStringValueType `xml:"t:Values,omitempty" json:"Values,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type EmailAddressAttributedValueType struct {
	XMLName xml.Name `xml:"t:EmailAddressAttributedValue"`

	Value *EmailAddressType `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPhoneNumberType struct {
	Number string `xml:"t:Number,omitempty" json:"Number,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`
}

type PhoneNumberAttributedValueType struct {
	XMLName xml.Name `xml:"t:PhoneNumberAttributedValue"`

	Value *PersonaPhoneNumberType `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPostalAddressType struct {
	Street string `xml:"t:Street,omitempty" json:"Street,omitempty"`

	City string `xml:"t:City,omitempty" json:"City,omitempty"`

	State string `xml:"t:State,omitempty" json:"State,omitempty"`

	Country string `xml:"t:Country,omitempty" json:"Country,omitempty"`

	PostalCode string `xml:"t:PostalCode,omitempty" json:"PostalCode,omitempty"`

	PostOfficeBox string `xml:"t:PostOfficeBox,omitempty" json:"PostOfficeBox,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`

	Latitude float64 `xml:"t:Latitude,omitempty" json:"Latitude,omitempty"`

	Longitude float64 `xml:"t:Longitude,omitempty" json:"Longitude,omitempty"`

	Accuracy float64 `xml:"t:Accuracy,omitempty" json:"Accuracy,omitempty"`

	Altitude float64 `xml:"t:Altitude,omitempty" json:"Altitude,omitempty"`

	AltitudeAccuracy float64 `xml:"t:AltitudeAccuracy,omitempty" json:"AltitudeAccuracy,omitempty"`

	FormattedAddress string `xml:"t:FormattedAddress,omitempty" json:"FormattedAddress,omitempty"`

	LocationUri string `xml:"t:LocationUri,omitempty" json:"LocationUri,omitempty"`

	LocationSource *LocationSourceType `xml:"t:LocationSource,omitempty" json:"LocationSource,omitempty"`
}

type PostalAddressAttributedValueType struct {
	XMLName xml.Name `xml:"t:PostalAddressAttributedValue"`

	Value *PersonaPostalAddressType `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type ExtendedPropertyAttributedValueType struct {
	XMLName xml.Name `xml:"t:ExtendedPropertyAttributedValue"`

	Value *ExtendedPropertyType `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`
}

type ArrayOfStringAttributedValuesType struct {
	StringAttributedValue []*StringAttributedValueType `xml:"t:StringAttributedValue,omitempty" json:"StringAttributedValue,omitempty"`
}

type ArrayOfStringArrayAttributedValuesType struct {
	StringArrayAttributedValue []*StringArrayAttributedValueType `xml:"t:StringArrayAttributedValue,omitempty" json:"StringArrayAttributedValue,omitempty"`
}

type ArrayOfBodyContentAttributedValuesType struct {
	XMLName xml.Name `xml:"t:Bodies"`

	BodyContentAttributedValue []*BodyContentAttributedValueType `xml:"t:BodyContentAttributedValue,omitempty" json:"BodyContentAttributedValue,omitempty"`
}

type ArrayOfEmailAddressAttributedValuesType struct {
	EmailAddressAttributedValue []*EmailAddressAttributedValueType `xml:"t:EmailAddressAttributedValue,omitempty" json:"EmailAddressAttributedValue,omitempty"`
}

type ArrayOfPhoneNumberAttributedValuesType struct {
	PhoneNumberAttributedValue []*PhoneNumberAttributedValueType `xml:"t:PhoneNumberAttributedValue,omitempty" json:"PhoneNumberAttributedValue,omitempty"`
}

type ArrayOfPostalAddressAttributedValuesType struct {
	PostalAddressAttributedValue []*PostalAddressAttributedValueType `xml:"t:PostalAddressAttributedValue,omitempty" json:"PostalAddressAttributedValue,omitempty"`
}

type ArrayOfExtendedPropertyAttributedValueType struct {
	XMLName xml.Name `xml:"t:ExtendedProperties"`

	ExtendedPropertyAttributedValue []*ExtendedPropertyAttributedValueType `xml:"t:ExtendedPropertyAttributedValue,omitempty" json:"ExtendedPropertyAttributedValue,omitempty"`
}

type InsightFiltersType struct {
	Count int32 `xml:"t:Count,omitempty" json:"Count,omitempty"`

	Types *ArrayOfStringsType `xml:"t:Types,omitempty" json:"Types,omitempty"`

	KeyInsightsOnly bool `xml:"t:KeyInsightsOnly,omitempty" json:"KeyInsightsOnly,omitempty"`
}

type InsightValue struct {
	InsightSource string `xml:"t:InsightSource,omitempty" json:"InsightSource,omitempty"`

	UpdatedUtcTicks int64 `xml:"t:UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty"`
}

type StringInsightValue struct {
	*InsightValue

	Data string `xml:"t:Data,omitempty" json:"Data,omitempty"`
}

type DelveDocument struct {
	*InsightValue

	Rank float64 `xml:"t:Rank,omitempty" json:"Rank,omitempty"`

	Author string `xml:"t:Author,omitempty" json:"Author,omitempty"`

	Created string `xml:"t:Created,omitempty" json:"Created,omitempty"`

	LastModifiedTime string `xml:"t:LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	DefaultEncodingURL string `xml:"t:DefaultEncodingURL,omitempty" json:"DefaultEncodingURL,omitempty"`

	FileType string `xml:"t:FileType,omitempty" json:"FileType,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	DocumentId string `xml:"t:DocumentId,omitempty" json:"DocumentId,omitempty"`

	PreviewURL string `xml:"t:PreviewURL,omitempty" json:"PreviewURL,omitempty"`

	LastEditor string `xml:"t:LastEditor,omitempty" json:"LastEditor,omitempty"`
}

type ProfileInsightValue struct {
	*InsightValue

	FullName string `xml:"t:FullName,omitempty" json:"FullName,omitempty"`

	FirstName string `xml:"t:FirstName,omitempty" json:"FirstName,omitempty"`

	LastName string `xml:"t:LastName,omitempty" json:"LastName,omitempty"`

	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Avatar string `xml:"t:Avatar,omitempty" json:"Avatar,omitempty"`

	JoinedUtcTicks int64 `xml:"t:JoinedUtcTicks,omitempty" json:"JoinedUtcTicks,omitempty"`

	ProfilePicture *UserProfilePicture `xml:"t:ProfilePicture,omitempty" json:"ProfilePicture,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`
}

type OutOfOfficeInsightValue struct {
	*InsightValue

	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`

	Message string `xml:"t:Message,omitempty" json:"Message,omitempty"`

	Culture string `xml:"t:Culture,omitempty" json:"Culture,omitempty"`
}

type JobInsightValue struct {
	XMLName xml.Name `xml:"t:Item"`

	*InsightValue

	Company string `xml:"t:Company,omitempty" json:"Company,omitempty"`

	CompanyDescription string `xml:"t:CompanyDescription,omitempty" json:"CompanyDescription,omitempty"`

	CompanyTicker string `xml:"t:CompanyTicker,omitempty" json:"CompanyTicker,omitempty"`

	CompanyLogoUrl string `xml:"t:CompanyLogoUrl,omitempty" json:"CompanyLogoUrl,omitempty"`

	CompanyWebsiteUrl string `xml:"t:CompanyWebsiteUrl,omitempty" json:"CompanyWebsiteUrl,omitempty"`

	CompanyLinkedInUrl string `xml:"t:CompanyLinkedInUrl,omitempty" json:"CompanyLinkedInUrl,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	StartUtcTicks int64 `xml:"t:StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"t:EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type CompanyInsightValue struct {
	XMLName xml.Name `xml:"t:Item"`

	*InsightValue

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	SatoriId string `xml:"t:SatoriId,omitempty" json:"SatoriId,omitempty"`

	Description string `xml:"t:Description,omitempty" json:"Description,omitempty"`

	DescriptionAttribution string `xml:"t:DescriptionAttribution,omitempty" json:"DescriptionAttribution,omitempty"`

	ImageUrl string `xml:"t:ImageUrl,omitempty" json:"ImageUrl,omitempty"`

	ImageUrlAttribution string `xml:"t:ImageUrlAttribution,omitempty" json:"ImageUrlAttribution,omitempty"`

	YearFound string `xml:"t:YearFound,omitempty" json:"YearFound,omitempty"`

	FinanceSymbol string `xml:"t:FinanceSymbol,omitempty" json:"FinanceSymbol,omitempty"`

	WebsiteUrl string `xml:"t:WebsiteUrl,omitempty" json:"WebsiteUrl,omitempty"`
}

type UserProfilePicture struct {
	*InsightValue

	Blob string `xml:"t:Blob,omitempty" json:"Blob,omitempty"`

	PhotoSize string `xml:"t:PhotoSize,omitempty" json:"PhotoSize,omitempty"`

	Url string `xml:"t:Url,omitempty" json:"Url,omitempty"`

	ImageType string `xml:"t:ImageType,omitempty" json:"ImageType,omitempty"`
}

type EducationInsightValue struct {
	*InsightValue

	Institute string `xml:"t:Institute,omitempty" json:"Institute,omitempty"`

	Degree string `xml:"t:Degree,omitempty" json:"Degree,omitempty"`

	StartUtcTicks int64 `xml:"t:StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"t:EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type SkillInsightValue struct {
	XMLName xml.Name `xml:"t:Item"`

	*InsightValue

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Strength int32 `xml:"t:Strength,omitempty" json:"Strength,omitempty"`
}

type MeetingInsightValue struct {
	*InsightValue

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	StartUtcTicks int64 `xml:"t:StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"t:EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	Organizer *ProfileInsightValue `xml:"t:Organizer,omitempty" json:"Organizer,omitempty"`

	Attendees *ArrayOfProfileInsightValue `xml:"t:Attendees,omitempty" json:"Attendees,omitempty"`
}

type EmailInsightValue struct {
	*InsightValue

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	ThreadId string `xml:"t:ThreadId,omitempty" json:"ThreadId,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	LastEmailDateUtcTicks int64 `xml:"t:LastEmailDateUtcTicks,omitempty" json:"LastEmailDateUtcTicks,omitempty"`

	Body string `xml:"t:Body,omitempty" json:"Body,omitempty"`

	LastEmailSender *ProfileInsightValue `xml:"t:LastEmailSender,omitempty" json:"LastEmailSender,omitempty"`

	EmailsCount int32 `xml:"t:EmailsCount,omitempty" json:"EmailsCount,omitempty"`
}

type ArrayOfInsightValue struct {
	Item []*InsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfSkillInsightValue struct {
	XMLName xml.Name `xml:"t:Skills"`

	Item []*SkillInsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfProfileInsightValue struct {
	Item []*ProfileInsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfJobInsightValue struct {
	XMLName xml.Name `xml:"t:CurrentJob"`

	Item []*JobInsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCompanyInsightValue struct {
	XMLName xml.Name `xml:"t:CompanyProfile"`

	Item []*CompanyInsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type InsightContent struct {
	XMLName xml.Name `xml:"t:Content"`
}

type SingleValueInsightContent struct {
	*InsightContent

	Item *InsightValue `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type MultiValueInsightContent struct {
	*InsightContent

	ItemList *ArrayOfInsightValue `xml:"t:ItemList,omitempty" json:"ItemList,omitempty"`
}

type Insight struct {
	InsightType string `xml:"t:InsightType,omitempty" json:"InsightType,omitempty"`

	Rank float64 `xml:"t:Rank,omitempty" json:"Rank,omitempty"`

	Content *InsightContent `xml:"t:Content,omitempty" json:"Content,omitempty"`

	Text string `xml:"t:Text,omitempty" json:"Text,omitempty"`

	ItemList *ArrayOfInsightValue `xml:"t:ItemList,omitempty" json:"ItemList,omitempty"`

	RequiresToken bool `xml:"t:RequiresToken,omitempty" json:"RequiresToken,omitempty"`
}

type ComputedInsightValueProperty struct {
	XMLName xml.Name `xml:"t:Property"`

	Key string `xml:"t:Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfComputedInsightValueProperty struct {
	XMLName xml.Name `xml:"t:Properties"`

	Property []*ComputedInsightValueProperty `xml:"t:Property,omitempty" json:"Property,omitempty"`
}

type ComputedInsightValue struct {
	*InsightValue

	Properties *ArrayOfComputedInsightValueProperty `xml:"t:Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfInsight struct {
	XMLName xml.Name `xml:"t:Insights"`

	Insight []*Insight `xml:"t:Insight,omitempty" json:"Insight,omitempty"`
}

type PersonResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonType struct {
	XMLName xml.Name `xml:"t:Person"`

	FullName string `xml:"t:FullName,omitempty" json:"FullName,omitempty"`

	GivenName string `xml:"t:GivenName,omitempty" json:"GivenName,omitempty"`

	Surname string `xml:"t:Surname,omitempty" json:"Surname,omitempty"`

	PhoneNumber string `xml:"t:PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	SMSNumber string `xml:"t:SMSNumber,omitempty" json:"SMSNumber,omitempty"`

	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Alias string `xml:"t:Alias,omitempty" json:"Alias,omitempty"`

	Department string `xml:"t:Department,omitempty" json:"Department,omitempty"`

	LinkedInProfileLink string `xml:"t:LinkedInProfileLink,omitempty" json:"LinkedInProfileLink,omitempty"`

	Skills *ArrayOfSkillInsightValue `xml:"t:Skills,omitempty" json:"Skills,omitempty"`

	ProfessionalBiography string `xml:"t:ProfessionalBiography,omitempty" json:"ProfessionalBiography,omitempty"`

	ManagementChain *ArrayOfProfileInsightValue `xml:"t:ManagementChain,omitempty" json:"ManagementChain,omitempty"`

	DirectReports *ArrayOfProfileInsightValue `xml:"t:DirectReports,omitempty" json:"DirectReports,omitempty"`

	Peers *ArrayOfProfileInsightValue `xml:"t:Peers,omitempty" json:"Peers,omitempty"`

	TeamSize string `xml:"t:TeamSize,omitempty" json:"TeamSize,omitempty"`

	CurrentJob *ArrayOfJobInsightValue `xml:"t:CurrentJob,omitempty" json:"CurrentJob,omitempty"`

	Birthday string `xml:"t:Birthday,omitempty" json:"Birthday,omitempty"`

	Hometown string `xml:"t:Hometown,omitempty" json:"Hometown,omitempty"`

	CurrentLocation string `xml:"t:CurrentLocation,omitempty" json:"CurrentLocation,omitempty"`

	CompanyProfile *ArrayOfCompanyInsightValue `xml:"t:CompanyProfile,omitempty" json:"CompanyProfile,omitempty"`

	Office string `xml:"t:Office,omitempty" json:"Office,omitempty"`

	Headline string `xml:"t:Headline,omitempty" json:"Headline,omitempty"`

	MutualConnections *ArrayOfProfileInsightValue `xml:"t:MutualConnections,omitempty" json:"MutualConnections,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	MutualManager *ProfileInsightValue `xml:"t:MutualManager,omitempty" json:"MutualManager,omitempty"`

	Insights *ArrayOfInsight `xml:"t:Insights,omitempty" json:"Insights,omitempty"`

	UserProfilePicture *UserProfilePicture `xml:"t:UserProfilePicture,omitempty" json:"UserProfilePicture,omitempty"`
}

type ArrayOfPersonType struct {
	Person *PersonType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type PeopleTokenType struct {
	XMLName xml.Name `xml:"t:PeopleToken"`

	TokenSource *TokenSourceType `xml:"t:TokenSource,omitempty" json:"TokenSource,omitempty"`

	ExpirationDateTime xsd.DateTime `xml:"t:ExpirationDateTime,omitempty" json:"ExpirationDateTime,omitempty"`

	TokenValue string `xml:"t:TokenValue,omitempty" json:"TokenValue,omitempty"`
}

type NonEmptyArrayOfPeopleTokenType struct {
	PeopleToken []*PeopleTokenType `xml:"t:PeopleToken,omitempty" json:"PeopleToken,omitempty"`
}

type PersonaType struct {
	PersonaId *ItemIdType `xml:"t:PersonaId,omitempty" json:"PersonaId,omitempty"`

	PersonaType string `xml:"t:PersonaType,omitempty" json:"PersonaType,omitempty"`

	PersonaObjectStatus string `xml:"t:PersonaObjectStatus,omitempty" json:"PersonaObjectStatus,omitempty"`

	CreationTime xsd.DateTime `xml:"t:CreationTime,omitempty" json:"CreationTime,omitempty"`

	Bodies *ArrayOfBodyContentAttributedValuesType `xml:"t:Bodies,omitempty" json:"Bodies,omitempty"`

	DisplayNameFirstLastSortKey string `xml:"t:DisplayNameFirstLastSortKey,omitempty" json:"DisplayNameFirstLastSortKey,omitempty"`

	DisplayNameLastFirstSortKey string `xml:"t:DisplayNameLastFirstSortKey,omitempty" json:"DisplayNameLastFirstSortKey,omitempty"`

	CompanyNameSortKey string `xml:"t:CompanyNameSortKey,omitempty" json:"CompanyNameSortKey,omitempty"`

	HomeCitySortKey string `xml:"t:HomeCitySortKey,omitempty" json:"HomeCitySortKey,omitempty"`

	WorkCitySortKey string `xml:"t:WorkCitySortKey,omitempty" json:"WorkCitySortKey,omitempty"`

	DisplayNameFirstLastHeader string `xml:"t:DisplayNameFirstLastHeader,omitempty" json:"DisplayNameFirstLastHeader,omitempty"`

	DisplayNameLastFirstHeader string `xml:"t:DisplayNameLastFirstHeader,omitempty" json:"DisplayNameLastFirstHeader,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	DisplayNameFirstLast string `xml:"t:DisplayNameFirstLast,omitempty" json:"DisplayNameFirstLast,omitempty"`

	DisplayNameLastFirst string `xml:"t:DisplayNameLastFirst,omitempty" json:"DisplayNameLastFirst,omitempty"`

	FileAs string `xml:"t:FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsId string `xml:"t:FileAsId,omitempty" json:"FileAsId,omitempty"`

	DisplayNamePrefix string `xml:"t:DisplayNamePrefix,omitempty" json:"DisplayNamePrefix,omitempty"`

	GivenName string `xml:"t:GivenName,omitempty" json:"GivenName,omitempty"`

	MiddleName string `xml:"t:MiddleName,omitempty" json:"MiddleName,omitempty"`

	Surname string `xml:"t:Surname,omitempty" json:"Surname,omitempty"`

	Generation string `xml:"t:Generation,omitempty" json:"Generation,omitempty"`

	Nickname string `xml:"t:Nickname,omitempty" json:"Nickname,omitempty"`

	YomiCompanyName string `xml:"t:YomiCompanyName,omitempty" json:"YomiCompanyName,omitempty"`

	YomiFirstName string `xml:"t:YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName string `xml:"t:YomiLastName,omitempty" json:"YomiLastName,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	Department string `xml:"t:Department,omitempty" json:"Department,omitempty"`

	CompanyName string `xml:"t:CompanyName,omitempty" json:"CompanyName,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	EmailAddress *EmailAddressType `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	EmailAddresses *ArrayOfEmailAddressesType `xml:"t:EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	PhoneNumber *PersonaPhoneNumberType `xml:"t:PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	ImAddress string `xml:"t:ImAddress,omitempty" json:"ImAddress,omitempty"`

	HomeCity string `xml:"t:HomeCity,omitempty" json:"HomeCity,omitempty"`

	WorkCity string `xml:"t:WorkCity,omitempty" json:"WorkCity,omitempty"`

	RelevanceScore int32 `xml:"t:RelevanceScore,omitempty" json:"RelevanceScore,omitempty"`

	FolderIds *ArrayOfFolderIdType `xml:"t:FolderIds,omitempty" json:"FolderIds,omitempty"`

	Attributions *ArrayOfPersonaAttributionsType `xml:"t:Attributions,omitempty" json:"Attributions,omitempty"`

	DisplayNames *ArrayOfStringAttributedValuesType `xml:"t:DisplayNames,omitempty" json:"DisplayNames,omitempty"`

	FileAses *ArrayOfStringAttributedValuesType `xml:"t:FileAses,omitempty" json:"FileAses,omitempty"`

	FileAsIds *ArrayOfStringAttributedValuesType `xml:"t:FileAsIds,omitempty" json:"FileAsIds,omitempty"`

	DisplayNamePrefixes *ArrayOfStringAttributedValuesType `xml:"t:DisplayNamePrefixes,omitempty" json:"DisplayNamePrefixes,omitempty"`

	GivenNames *ArrayOfStringAttributedValuesType `xml:"t:GivenNames,omitempty" json:"GivenNames,omitempty"`

	MiddleNames *ArrayOfStringAttributedValuesType `xml:"t:MiddleNames,omitempty" json:"MiddleNames,omitempty"`

	Surnames *ArrayOfStringAttributedValuesType `xml:"t:Surnames,omitempty" json:"Surnames,omitempty"`

	Generations *ArrayOfStringAttributedValuesType `xml:"t:Generations,omitempty" json:"Generations,omitempty"`

	Nicknames *ArrayOfStringAttributedValuesType `xml:"t:Nicknames,omitempty" json:"Nicknames,omitempty"`

	Initials *ArrayOfStringAttributedValuesType `xml:"t:Initials,omitempty" json:"Initials,omitempty"`

	YomiCompanyNames *ArrayOfStringAttributedValuesType `xml:"t:YomiCompanyNames,omitempty" json:"YomiCompanyNames,omitempty"`

	YomiFirstNames *ArrayOfStringAttributedValuesType `xml:"t:YomiFirstNames,omitempty" json:"YomiFirstNames,omitempty"`

	YomiLastNames *ArrayOfStringAttributedValuesType `xml:"t:YomiLastNames,omitempty" json:"YomiLastNames,omitempty"`

	BusinessPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"t:BusinessPhoneNumbers,omitempty" json:"BusinessPhoneNumbers,omitempty"`

	BusinessPhoneNumbers2 *ArrayOfPhoneNumberAttributedValuesType `xml:"t:BusinessPhoneNumbers2,omitempty" json:"BusinessPhoneNumbers2,omitempty"`

	HomePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:HomePhones,omitempty" json:"HomePhones,omitempty"`

	HomePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"t:HomePhones2,omitempty" json:"HomePhones2,omitempty"`

	MobilePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:MobilePhones,omitempty" json:"MobilePhones,omitempty"`

	MobilePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"t:MobilePhones2,omitempty" json:"MobilePhones2,omitempty"`

	AssistantPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"t:AssistantPhoneNumbers,omitempty" json:"AssistantPhoneNumbers,omitempty"`

	CallbackPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:CallbackPhones,omitempty" json:"CallbackPhones,omitempty"`

	CarPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:CarPhones,omitempty" json:"CarPhones,omitempty"`

	HomeFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"t:HomeFaxes,omitempty" json:"HomeFaxes,omitempty"`

	OrganizationMainPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:OrganizationMainPhones,omitempty" json:"OrganizationMainPhones,omitempty"`

	OtherFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"t:OtherFaxes,omitempty" json:"OtherFaxes,omitempty"`

	OtherTelephones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:OtherTelephones,omitempty" json:"OtherTelephones,omitempty"`

	OtherPhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"t:OtherPhones2,omitempty" json:"OtherPhones2,omitempty"`

	Pagers *ArrayOfPhoneNumberAttributedValuesType `xml:"t:Pagers,omitempty" json:"Pagers,omitempty"`

	RadioPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"t:RadioPhones,omitempty" json:"RadioPhones,omitempty"`

	TelexNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"t:TelexNumbers,omitempty" json:"TelexNumbers,omitempty"`

	TTYTDDPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"t:TTYTDDPhoneNumbers,omitempty" json:"TTYTDDPhoneNumbers,omitempty"`

	WorkFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"t:WorkFaxes,omitempty" json:"WorkFaxes,omitempty"`

	Emails1 *ArrayOfEmailAddressAttributedValuesType `xml:"t:Emails1,omitempty" json:"Emails1,omitempty"`

	Emails2 *ArrayOfEmailAddressAttributedValuesType `xml:"t:Emails2,omitempty" json:"Emails2,omitempty"`

	Emails3 *ArrayOfEmailAddressAttributedValuesType `xml:"t:Emails3,omitempty" json:"Emails3,omitempty"`

	BusinessHomePages *ArrayOfStringAttributedValuesType `xml:"t:BusinessHomePages,omitempty" json:"BusinessHomePages,omitempty"`

	PersonalHomePages *ArrayOfStringAttributedValuesType `xml:"t:PersonalHomePages,omitempty" json:"PersonalHomePages,omitempty"`

	OfficeLocations *ArrayOfStringAttributedValuesType `xml:"t:OfficeLocations,omitempty" json:"OfficeLocations,omitempty"`

	ImAddresses *ArrayOfStringAttributedValuesType `xml:"t:ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	ImAddresses2 *ArrayOfStringAttributedValuesType `xml:"t:ImAddresses2,omitempty" json:"ImAddresses2,omitempty"`

	ImAddresses3 *ArrayOfStringAttributedValuesType `xml:"t:ImAddresses3,omitempty" json:"ImAddresses3,omitempty"`

	BusinessAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"t:BusinessAddresses,omitempty" json:"BusinessAddresses,omitempty"`

	HomeAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"t:HomeAddresses,omitempty" json:"HomeAddresses,omitempty"`

	OtherAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"t:OtherAddresses,omitempty" json:"OtherAddresses,omitempty"`

	Titles *ArrayOfStringAttributedValuesType `xml:"t:Titles,omitempty" json:"Titles,omitempty"`

	Departments *ArrayOfStringAttributedValuesType `xml:"t:Departments,omitempty" json:"Departments,omitempty"`

	CompanyNames *ArrayOfStringAttributedValuesType `xml:"t:CompanyNames,omitempty" json:"CompanyNames,omitempty"`

	Managers *ArrayOfStringAttributedValuesType `xml:"t:Managers,omitempty" json:"Managers,omitempty"`

	AssistantNames *ArrayOfStringAttributedValuesType `xml:"t:AssistantNames,omitempty" json:"AssistantNames,omitempty"`

	Professions *ArrayOfStringAttributedValuesType `xml:"t:Professions,omitempty" json:"Professions,omitempty"`

	SpouseNames *ArrayOfStringAttributedValuesType `xml:"t:SpouseNames,omitempty" json:"SpouseNames,omitempty"`

	Children *ArrayOfStringArrayAttributedValuesType `xml:"t:Children,omitempty" json:"Children,omitempty"`

	Schools *ArrayOfStringAttributedValuesType `xml:"t:Schools,omitempty" json:"Schools,omitempty"`

	Hobbies *ArrayOfStringAttributedValuesType `xml:"t:Hobbies,omitempty" json:"Hobbies,omitempty"`

	WeddingAnniversaries *ArrayOfStringAttributedValuesType `xml:"t:WeddingAnniversaries,omitempty" json:"WeddingAnniversaries,omitempty"`

	Birthdays *ArrayOfStringAttributedValuesType `xml:"t:Birthdays,omitempty" json:"Birthdays,omitempty"`

	Locations *ArrayOfStringAttributedValuesType `xml:"t:Locations,omitempty" json:"Locations,omitempty"`

	InlineLinks *ArrayOfStringAttributedValuesType `xml:"t:InlineLinks,omitempty" json:"InlineLinks,omitempty"`

	ItemLinkIds *ArrayOfStringArrayAttributedValuesType `xml:"t:ItemLinkIds,omitempty" json:"ItemLinkIds,omitempty"`

	HasActiveDeals string `xml:"t:HasActiveDeals,omitempty" json:"HasActiveDeals,omitempty"`

	IsBusinessContact string `xml:"t:IsBusinessContact,omitempty" json:"IsBusinessContact,omitempty"`

	AttributedHasActiveDeals *ArrayOfStringAttributedValuesType `xml:"t:AttributedHasActiveDeals,omitempty" json:"AttributedHasActiveDeals,omitempty"`

	AttributedIsBusinessContact *ArrayOfStringAttributedValuesType `xml:"t:AttributedIsBusinessContact,omitempty" json:"AttributedIsBusinessContact,omitempty"`

	SourceMailboxGuids *ArrayOfStringAttributedValuesType `xml:"t:SourceMailboxGuids,omitempty" json:"SourceMailboxGuids,omitempty"`

	LastContactedDate xsd.DateTime `xml:"t:LastContactedDate,omitempty" json:"LastContactedDate,omitempty"`

	ExtendedProperties *ArrayOfExtendedPropertyAttributedValueType `xml:"t:ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	ExternalDirectoryObjectId string `xml:"t:ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	MapiEntryId string `xml:"t:MapiEntryId,omitempty" json:"MapiEntryId,omitempty"`

	MapiEmailAddress string `xml:"t:MapiEmailAddress,omitempty" json:"MapiEmailAddress,omitempty"`

	MapiAddressType string `xml:"t:MapiAddressType,omitempty" json:"MapiAddressType,omitempty"`

	MapiSearchKey string `xml:"t:MapiSearchKey,omitempty" json:"MapiSearchKey,omitempty"`

	MapiTransmittableDisplayName string `xml:"t:MapiTransmittableDisplayName,omitempty" json:"MapiTransmittableDisplayName,omitempty"`

	MapiSendRichInfo bool `xml:"t:MapiSendRichInfo,omitempty" json:"MapiSendRichInfo,omitempty"`
}

type ArrayOfPeopleType struct {
	Persona *PersonaType `xml:"t:Persona,omitempty" json:"Persona,omitempty"`
}

type MailboxLocatorType struct {
	ExternalDirectoryObjectId string `xml:"t:ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	LegacyDn string `xml:"t:LegacyDn,omitempty" json:"LegacyDn,omitempty"`
}

type GroupLocatorType struct {
	*MailboxLocatorType
}

type UserLocatorType struct {
	*MailboxLocatorType
}

type ArrayOfItemsType struct {
	XMLName xml.Name `xml:"t:Items"`

	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCalendarItemsType struct {
	XMLName xml.Name `xml:"t:CalendarItems"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`
}

type InstantSearchPayloadType struct {
	XMLName xml.Name `xml:"t:Payload"`

	SearchSessionId string `xml:"t:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchRequestId int64 `xml:"t:SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	ResultType *InstantSearchResultType `xml:"t:ResultType,omitempty" json:"ResultType,omitempty"`

	Items *ArrayOfItemsType `xml:"t:Items,omitempty" json:"Items,omitempty"`

	Conversations *ArrayOfConversationsType `xml:"t:Conversations,omitempty" json:"Conversations,omitempty"`

	CalendarItems *ArrayOfCalendarItemsType `xml:"t:CalendarItems,omitempty" json:"CalendarItems,omitempty"`
}

type ArrayOfStringsType struct {
	String []string `xml:"t:String,omitempty" json:"String,omitempty"`
}

type ArrayOfRealItemsType struct {
	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"t:DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type NonEmptyArrayOfAllItemsType struct {
	Item *ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"t:Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"t:SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"t:CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"t:DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"t:MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"t:MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"t:MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"t:MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"t:Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"t:PostItem,omitempty" json:"PostItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"t:ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"t:ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"t:ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	AcceptItem *AcceptItemType `xml:"t:AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"t:TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"t:DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"t:CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"t:RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"t:SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"t:PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"t:AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	RoleMember *RoleMemberItemType `xml:"t:RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"t:Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"t:Person,omitempty" json:"Person,omitempty"`
}

type MeetingRegistrationResponseObjectType struct {
	*WellKnownResponseObjectType

	ProposedStart xsd.DateTime `xml:"t:ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"t:ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type AcceptItemType struct {
	*MeetingRegistrationResponseObjectType
}

type TentativelyAcceptItemType struct {
	*MeetingRegistrationResponseObjectType
}

type DeclineItemType struct {
	*MeetingRegistrationResponseObjectType
}

type ProposeNewTimeType struct {
	XMLName xml.Name `xml:"t:ProposeNewTime"`

	*ResponseObjectType
}

type RemoveItemType struct {
	*ResponseObjectType
}

type AddItemToMyCalendarType struct {
	XMLName xml.Name `xml:"t:AddItemToMyCalendar"`

	*ResponseObjectType
}

type PostReplyItemBaseType struct {
}

type PostReplyItemType struct {
	*PostReplyItemBaseType

	NewBodyContent *BodyType `xml:"t:NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type MimeContentType struct {
	XMLName xml.Name `xml:"t:MimeContent"`

	Value string `xml:",chardata" json:"-,"`

	CharacterSet string `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MimeContentUTF8Type struct {
	Value string `xml:",chardata" json:"-,"`

	CharacterSet string `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MessageType struct {
	*ItemType

	Sender *SingleRecipientType `xml:"t:Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfRecipientsType `xml:"t:ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfRecipientsType `xml:"t:CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfRecipientsType `xml:"t:BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	IsReadReceiptRequested bool `xml:"t:IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty"`

	IsDeliveryReceiptRequested bool `xml:"t:IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty"`

	ConversationIndex []byte `xml:"t:ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic string `xml:"t:ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"t:From,omitempty" json:"From,omitempty"`

	InternetMessageId string `xml:"t:InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead bool `xml:"t:IsRead,omitempty" json:"IsRead,omitempty"`

	IsResponseRequested bool `xml:"t:IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	References string `xml:"t:References,omitempty" json:"References,omitempty"`

	ReplyTo *ArrayOfRecipientsType `xml:"t:ReplyTo,omitempty" json:"ReplyTo,omitempty"`

	ReceivedBy *SingleRecipientType `xml:"t:ReceivedBy,omitempty" json:"ReceivedBy,omitempty"`

	ReceivedRepresenting *SingleRecipientType `xml:"t:ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty"`

	ApprovalRequestData *ApprovalRequestDataType `xml:"t:ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty"`

	VotingInformation *VotingInformationType `xml:"t:VotingInformation,omitempty" json:"VotingInformation,omitempty"`

	ReminderMessageData *ReminderMessageDataType `xml:"t:ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty"`

	MessageSafety *MessageSafetyType `xml:"t:MessageSafety,omitempty" json:"MessageSafety,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"t:SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"t:MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	PublishedCalendarItemIcs string `xml:"t:PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty"`

	PublishedCalendarItemName string `xml:"t:PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty"`
}

type TaskType struct {
	*ItemType

	ActualWork int32 `xml:"t:ActualWork,omitempty" json:"ActualWork,omitempty"`

	AssignedTime xsd.DateTime `xml:"t:AssignedTime,omitempty" json:"AssignedTime,omitempty"`

	BillingInformation string `xml:"t:BillingInformation,omitempty" json:"BillingInformation,omitempty"`

	ChangeCount int32 `xml:"t:ChangeCount,omitempty" json:"ChangeCount,omitempty"`

	Companies *ArrayOfStringsType `xml:"t:Companies,omitempty" json:"Companies,omitempty"`

	CompleteDate xsd.DateTime `xml:"t:CompleteDate,omitempty" json:"CompleteDate,omitempty"`

	Contacts *ArrayOfStringsType `xml:"t:Contacts,omitempty" json:"Contacts,omitempty"`

	DelegationState *TaskDelegateStateType `xml:"t:DelegationState,omitempty" json:"DelegationState,omitempty"`

	Delegator string `xml:"t:Delegator,omitempty" json:"Delegator,omitempty"`

	DueDate xsd.DateTime `xml:"t:DueDate,omitempty" json:"DueDate,omitempty"`

	IsAssignmentEditable int32 `xml:"t:IsAssignmentEditable,omitempty" json:"IsAssignmentEditable,omitempty"`

	IsComplete bool `xml:"t:IsComplete,omitempty" json:"IsComplete,omitempty"`

	IsRecurring bool `xml:"t:IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsTeamTask bool `xml:"t:IsTeamTask,omitempty" json:"IsTeamTask,omitempty"`

	Mileage string `xml:"t:Mileage,omitempty" json:"Mileage,omitempty"`

	Owner string `xml:"t:Owner,omitempty" json:"Owner,omitempty"`

	PercentComplete float64 `xml:"t:PercentComplete,omitempty" json:"PercentComplete,omitempty"`

	Recurrence *TaskRecurrenceType `xml:"t:Recurrence,omitempty" json:"Recurrence,omitempty"`

	StartDate xsd.DateTime `xml:"t:StartDate,omitempty" json:"StartDate,omitempty"`

	Status *TaskStatusType `xml:"t:Status,omitempty" json:"Status,omitempty"`

	StatusDescription string `xml:"t:StatusDescription,omitempty" json:"StatusDescription,omitempty"`

	TotalWork int32 `xml:"t:TotalWork,omitempty" json:"TotalWork,omitempty"`
}

type PostItemType struct {
	*ItemType

	ConversationIndex []byte `xml:"t:ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic string `xml:"t:ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"t:From,omitempty" json:"From,omitempty"`

	InternetMessageId string `xml:"t:InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead bool `xml:"t:IsRead,omitempty" json:"IsRead,omitempty"`

	PostedTime xsd.DateTime `xml:"t:PostedTime,omitempty" json:"PostedTime,omitempty"`

	References string `xml:"t:References,omitempty" json:"References,omitempty"`

	Sender *SingleRecipientType `xml:"t:Sender,omitempty" json:"Sender,omitempty"`
}

type SharingMessageType struct {
	*MessageType

	SharingMessageAction *SharingMessageActionType `xml:"t:SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`

	SharingMessageActions *ArrayOfSharingMessageActionType `xml:"t:SharingMessageActions,omitempty" json:"SharingMessageActions,omitempty"`
}

type ArrayOfSharingMessageActionType struct {
	XMLName xml.Name `xml:"t:SharingMessageActions"`

	SharingMessageAction *SharingMessageActionType `xml:"t:SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`
}

type SharingMessageActionType struct {
	Importance *SharingActionImportance `xml:"t:Importance,omitempty" json:"Importance,omitempty"`

	ActionType *SharingActionType `xml:"t:ActionType,omitempty" json:"ActionType,omitempty"`

	Action *SharingAction `xml:"t:Action,omitempty" json:"Action,omitempty"`
}

type BasePagingType struct {
	MaxEntriesReturned int32 `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,omitempty"`
}

type IndexedPageViewType struct {
	*BasePagingType

	Offset int32 `xml:"Offset,attr,omitempty" json:"Offset,omitempty"`

	BasePoint *IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type FractionalPageViewType struct {
	*BasePagingType

	Numerator int32 `xml:"Numerator,attr,omitempty" json:"Numerator,omitempty"`

	Denominator int32 `xml:"Denominator,attr,omitempty" json:"Denominator,omitempty"`
}

type SeekToConditionPageViewType struct {
	*BasePagingType

	Condition *RestrictionType `xml:"t:Condition,omitempty" json:"Condition,omitempty"`

	BasePoint *IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type CalendarViewType struct {
	XMLName xml.Name `xml:"t:CalendarView"`

	*BasePagingType

	StartDate xsd.DateTime `xml:"StartDate,attr,omitempty" json:"StartDate,omitempty"`

	EndDate xsd.DateTime `xml:"EndDate,attr,omitempty" json:"EndDate,omitempty"`
}

type ContactsViewType struct {
	XMLName xml.Name `xml:"t:ContactsView"`

	*BasePagingType

	InitialName string `xml:"InitialName,attr,omitempty" json:"InitialName,omitempty"`

	FinalName string `xml:"FinalName,attr,omitempty" json:"FinalName,omitempty"`
}

type ResolutionType struct {
	XMLName xml.Name `xml:"t:Resolution"`

	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	Contact *ContactItemType `xml:"t:Contact,omitempty" json:"Contact,omitempty"`
}

type ArrayOfResolutionType struct {
	XMLName xml.Name `xml:"t:ResolutionSet"`

	Resolution *ResolutionType `xml:"t:Resolution,omitempty" json:"Resolution,omitempty"`
}

type ArrayOfDLExpansionType struct {
	XMLName xml.Name `xml:"t:DLExpansion"`

	Mailbox []*EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type NonEmptyArrayOfTimeZoneIdType struct {
	XMLName xml.Name `xml:"t:Ids"`

	Id []string `xml:"t:Id,omitempty" json:"Id,omitempty"`
}

type ArrayOfTimeZoneDefinitionType struct {
	XMLName xml.Name `xml:"t:TimeZoneDefinitions"`

	TimeZoneDefinition *TimeZoneDefinitionType `xml:"t:TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type OnlineMeetingSettingsType struct {
	XMLName xml.Name `xml:"t:OnlineMeetingSettings"`

	LobbyBypass *LobbyBypassType `xml:"t:LobbyBypass,omitempty" json:"LobbyBypass,omitempty"`

	AccessLevel *OnlineMeetingAccessLevelType `xml:"t:AccessLevel,omitempty" json:"AccessLevel,omitempty"`

	Presenters *PresentersType `xml:"t:Presenters,omitempty" json:"Presenters,omitempty"`
}

type AttendeeType struct {
	XMLName xml.Name `xml:"t:Attendee"`

	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	ResponseType *ResponseTypeType `xml:"t:ResponseType,omitempty" json:"ResponseType,omitempty"`

	LastResponseTime xsd.DateTime `xml:"t:LastResponseTime,omitempty" json:"LastResponseTime,omitempty"`

	ProposedStart xsd.DateTime `xml:"t:ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"t:ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type NonEmptyArrayOfAttendeesType struct {
	Attendee []*AttendeeType `xml:"t:Attendee,omitempty" json:"Attendee,omitempty"`
}

type OccurrenceItemIdType struct {
	*BaseItemIdType

	RecurringMasterId *DerivedItemIdType `xml:"RecurringMasterId,attr,omitempty" json:"RecurringMasterId,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`

	InstanceIndex int32 `xml:"InstanceIndex,attr,omitempty" json:"InstanceIndex,omitempty"`
}

type RecurringMasterItemIdType struct {
	*BaseItemIdType

	OccurrenceId *DerivedItemIdType `xml:"OccurrenceId,attr,omitempty" json:"OccurrenceId,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type RecurringMasterItemIdRangesType struct {
	XMLName xml.Name `xml:"t:RecurringMasterItemIdRanges"`

	*ItemIdType

	Ranges *ArrayOfOccurrenceRangesType `xml:"t:Ranges,omitempty" json:"Ranges,omitempty"`
}

type ArrayOfOccurrenceRangesType struct {
	XMLName xml.Name `xml:"t:Ranges"`

	Range []*OccurrencesRangeType `xml:"t:Range,omitempty" json:"Range,omitempty"`
}

type OccurrencesRangeType struct {
	XMLName xml.Name `xml:"t:Range"`

	Start xsd.DateTime `xml:"Start,attr,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"End,attr,omitempty" json:"End,omitempty"`

	Count int32 `xml:"Count,attr,omitempty" json:"Count,omitempty"`

	CompareOriginalStartTime bool `xml:"CompareOriginalStartTime,attr,omitempty" json:"CompareOriginalStartTime,omitempty"`
}

type RecurrencePatternBaseType struct {
}

type IntervalRecurrencePatternBaseType struct {
	*RecurrencePatternBaseType

	Interval int32 `xml:"t:Interval,omitempty" json:"Interval,omitempty"`
}

type RegeneratingPatternBaseType struct {
	*IntervalRecurrencePatternBaseType
}

type DailyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type WeeklyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type MonthlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type YearlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type RelativeYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"t:DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"t:DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`

	Month *MonthNamesType `xml:"t:Month,omitempty" json:"Month,omitempty"`
}

type AbsoluteYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DayOfMonth int32 `xml:"t:DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`

	Month *MonthNamesType `xml:"t:Month,omitempty" json:"Month,omitempty"`
}

type RelativeMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"t:DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"t:DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`
}

type AbsoluteMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DayOfMonth int32 `xml:"t:DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`
}

type WeeklyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DaysOfWeekType `xml:"t:DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	FirstDayOfWeek *DayOfWeekType `xml:"t:FirstDayOfWeek,omitempty" json:"FirstDayOfWeek,omitempty"`
}

type DailyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType
}

type EnhancedLocationType struct {
	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	Annotation string `xml:"t:Annotation,omitempty" json:"Annotation,omitempty"`

	PostalAddress *PersonaPostalAddressType `xml:"t:PostalAddress,omitempty" json:"PostalAddress,omitempty"`
}

type TimeChangeType struct {
	Offset *Duration `xml:"t:Offset,omitempty" json:"Offset,omitempty"`

	Time xsd.Time `xml:"t:Time,omitempty" json:"Time,omitempty"`

	TimeZoneName string `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneType struct {
	BaseOffset *Duration `xml:"t:BaseOffset,omitempty" json:"BaseOffset,omitempty"`

	TimeZoneName string `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneContextType struct {
	XMLName xml.Name `xml:"t:TimeZoneContext"`

	TimeZoneDefinition *TimeZoneDefinitionType `xml:"t:TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type TransitionTargetType struct {
	XMLName xml.Name `xml:"t:To"`

	Value string `xml:",chardata" json:"-,"`

	Kind *TransitionTargetKindType `xml:"Kind,attr,omitempty" json:"Kind,omitempty"`
}

type TransitionType struct {
	XMLName xml.Name `xml:"t:Transition"`

	To *TransitionTargetType `xml:"t:To,omitempty" json:"To,omitempty"`
}

type AbsoluteDateTransitionType struct {
	XMLName xml.Name `xml:"t:AbsoluteDateTransition"`

	*TransitionType

	DateTime xsd.DateTime `xml:"t:DateTime,omitempty" json:"DateTime,omitempty"`
}

type RecurringTimeTransitionType struct {
	*TransitionType

	TimeOffset *Duration `xml:"t:TimeOffset,omitempty" json:"TimeOffset,omitempty"`

	Month int32 `xml:"t:Month,omitempty" json:"Month,omitempty"`
}

type RecurringDateTransitionType struct {
	XMLName xml.Name `xml:"t:RecurringDateTransition"`

	*RecurringTimeTransitionType

	Day int32 `xml:"t:Day,omitempty" json:"Day,omitempty"`
}

type RecurringDayTransitionType struct {
	XMLName xml.Name `xml:"t:RecurringDayTransition"`

	*RecurringTimeTransitionType

	DayOfWeek *DayOfWeekType `xml:"t:DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Occurrence int32 `xml:"t:Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type TimeZoneDefinitionType struct {
	Periods *NonEmptyArrayOfPeriodsType `xml:"t:Periods,omitempty" json:"Periods,omitempty"`

	TransitionsGroups *ArrayOfTransitionsGroupsType `xml:"t:TransitionsGroups,omitempty" json:"TransitionsGroups,omitempty"`

	Transitions *ArrayOfTransitionsType `xml:"t:Transitions,omitempty" json:"Transitions,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type NonEmptyArrayOfPeriodsType struct {
	XMLName xml.Name `xml:"t:Periods"`

	Period []*PeriodType `xml:"t:Period,omitempty" json:"Period,omitempty"`
}

type PeriodType struct {
	XMLName xml.Name `xml:"t:Period"`

	Bias *Duration `xml:"Bias,attr,omitempty" json:"Bias,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfTransitionsGroupsType struct {
	XMLName xml.Name `xml:"t:TransitionsGroups"`

	TransitionsGroup []*ArrayOfTransitionsType `xml:"t:TransitionsGroup,omitempty" json:"TransitionsGroup,omitempty"`
}

type ArrayOfTransitionsType struct {
	Transition []*Transition `xml:"Transition,omitempty" json:"Transition,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type RecurrenceRangeBaseType struct {
	StartDate xsd.Date `xml:"t:StartDate,omitempty" json:"StartDate,omitempty"`
}

type NoEndRecurrenceRangeType struct {
	*RecurrenceRangeBaseType
}

type EndDateRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	EndDate xsd.Date `xml:"t:EndDate,omitempty" json:"EndDate,omitempty"`
}

type NumberedRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	NumberOfOccurrences int32 `xml:"t:NumberOfOccurrences,omitempty" json:"NumberOfOccurrences,omitempty"`
}

type RecurrenceType struct {
}

type TaskRecurrenceType struct {
	XMLName xml.Name `xml:"t:Recurrence"`
}

type OccurrenceInfoType struct {
	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"t:OriginalStart,omitempty" json:"OriginalStart,omitempty"`
}

type NonEmptyArrayOfOccurrenceInfoType struct {
	Occurrence []*OccurrenceInfoType `xml:"t:Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type DeletedOccurrenceInfoType struct {
	XMLName xml.Name `xml:"t:DeletedOccurrence"`

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`
}

type NonEmptyArrayOfDeletedOccurrencesType struct {
	DeletedOccurrence []*DeletedOccurrenceInfoType `xml:"t:DeletedOccurrence,omitempty" json:"DeletedOccurrence,omitempty"`
}

type CalendarItemType struct {
	*ItemType

	UID string `xml:"t:UID,omitempty" json:"UID,omitempty"`

	RecurrenceId xsd.DateTime `xml:"t:RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp xsd.DateTime `xml:"t:DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"t:OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent bool `xml:"t:IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"t:LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	When string `xml:"t:When,omitempty" json:"When,omitempty"`

	IsMeeting bool `xml:"t:IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled bool `xml:"t:IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring bool `xml:"t:IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent bool `xml:"t:MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	IsResponseRequested bool `xml:"t:IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"t:CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"t:MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"t:Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"t:RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"t:OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"t:Resources,omitempty" json:"Resources,omitempty"`

	InboxReminders *ArrayOfInboxReminderType `xml:"t:InboxReminders,omitempty" json:"InboxReminders,omitempty"`

	ConflictingMeetingCount int32 `xml:"t:ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount int32 `xml:"t:AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"t:ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"t:AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration string `xml:"t:Duration,omitempty" json:"Duration,omitempty"`

	TimeZone string `xml:"t:TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime xsd.DateTime `xml:"t:AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber int32 `xml:"t:AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState int32 `xml:"t:AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"t:Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"t:FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"t:LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"t:ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"t:DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"t:MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"t:StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"t:EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType int32 `xml:"t:ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal bool `xml:"t:AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting bool `xml:"t:IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl string `xml:"t:MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl string `xml:"t:NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"t:EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	StartWallClock xsd.DateTime `xml:"t:StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock xsd.DateTime `xml:"t:EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId string `xml:"t:StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId string `xml:"t:EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"t:IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	JoinOnlineMeetingUrl string `xml:"t:JoinOnlineMeetingUrl,omitempty" json:"JoinOnlineMeetingUrl,omitempty"`

	OnlineMeetingSettings *OnlineMeetingSettingsType `xml:"t:OnlineMeetingSettings,omitempty" json:"OnlineMeetingSettings,omitempty"`

	IsOrganizer bool `xml:"t:IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"t:CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	DoNotForwardMeeting bool `xml:"t:DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingMessageType struct {
	*MessageType

	AssociatedCalendarItemId *ItemIdType `xml:"t:AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`

	IsDelegated bool `xml:"t:IsDelegated,omitempty" json:"IsDelegated,omitempty"`

	IsOutOfDate bool `xml:"t:IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty"`

	HasBeenProcessed bool `xml:"t:HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty"`

	ResponseType *ResponseTypeType `xml:"t:ResponseType,omitempty" json:"ResponseType,omitempty"`

	UID string `xml:"t:UID,omitempty" json:"UID,omitempty"`

	RecurrenceId xsd.DateTime `xml:"t:RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp xsd.DateTime `xml:"t:DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	IsOrganizer bool `xml:"t:IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`
}

type ChangeHighlightsType struct {
	XMLName xml.Name `xml:"t:ChangeHighlights"`

	HasLocationChanged bool `xml:"t:HasLocationChanged,omitempty" json:"HasLocationChanged,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	HasStartTimeChanged bool `xml:"t:HasStartTimeChanged,omitempty" json:"HasStartTimeChanged,omitempty"`

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	HasEndTimeChanged bool `xml:"t:HasEndTimeChanged,omitempty" json:"HasEndTimeChanged,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`
}

type MeetingRequestMessageType struct {
	*MeetingMessageType

	MeetingRequestType *MeetingRequestTypeType `xml:"t:MeetingRequestType,omitempty" json:"MeetingRequestType,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"t:IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"t:OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent bool `xml:"t:IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"t:LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	When string `xml:"t:When,omitempty" json:"When,omitempty"`

	IsMeeting bool `xml:"t:IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled bool `xml:"t:IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring bool `xml:"t:IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent bool `xml:"t:MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"t:CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"t:MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"t:Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"t:RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"t:OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"t:Resources,omitempty" json:"Resources,omitempty"`

	ConflictingMeetingCount int32 `xml:"t:ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount int32 `xml:"t:AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"t:ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"t:AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration string `xml:"t:Duration,omitempty" json:"Duration,omitempty"`

	TimeZone string `xml:"t:TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime xsd.DateTime `xml:"t:AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber int32 `xml:"t:AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState int32 `xml:"t:AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"t:Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"t:FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"t:LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"t:ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"t:DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"t:MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"t:StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"t:EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType int32 `xml:"t:ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal bool `xml:"t:AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting bool `xml:"t:IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl string `xml:"t:MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl string `xml:"t:NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"t:EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	ChangeHighlights *ChangeHighlightsType `xml:"t:ChangeHighlights,omitempty" json:"ChangeHighlights,omitempty"`

	StartWallClock xsd.DateTime `xml:"t:StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock xsd.DateTime `xml:"t:EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId string `xml:"t:StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId string `xml:"t:EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	DoNotForwardMeeting bool `xml:"t:DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingResponseMessageType struct {
	*MeetingMessageType

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"t:Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType string `xml:"t:CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	ProposedStart xsd.DateTime `xml:"t:ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"t:ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"t:EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`
}

type MeetingCancellationMessageType struct {
	*MeetingMessageType

	Start xsd.DateTime `xml:"t:Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"t:End,omitempty" json:"End,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"t:Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType string `xml:"t:CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"t:EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	DoNotForwardMeeting bool `xml:"t:DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type CompleteNameType struct {
	XMLName xml.Name `xml:"t:CompleteName"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	FirstName string `xml:"t:FirstName,omitempty" json:"FirstName,omitempty"`

	MiddleName string `xml:"t:MiddleName,omitempty" json:"MiddleName,omitempty"`

	LastName string `xml:"t:LastName,omitempty" json:"LastName,omitempty"`

	Suffix string `xml:"t:Suffix,omitempty" json:"Suffix,omitempty"`

	Initials string `xml:"t:Initials,omitempty" json:"Initials,omitempty"`

	FullName string `xml:"t:FullName,omitempty" json:"FullName,omitempty"`

	Nickname string `xml:"t:Nickname,omitempty" json:"Nickname,omitempty"`

	YomiFirstName string `xml:"t:YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName string `xml:"t:YomiLastName,omitempty" json:"YomiLastName,omitempty"`
}

type ImAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Entry"`

	Value string `xml:",chardata" json:"-,"`

	Key *ImAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Url"`

	Type *ContactUrlKeyType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Address string `xml:"t:Address,omitempty" json:"Address,omitempty"`
}

type AbchEmailAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Email"`

	Type *AbchEmailAddressTypeType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	Address string `xml:"t:Address,omitempty" json:"Address,omitempty"`

	IsMessengerEnabled bool `xml:"t:IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Capabilities int64 `xml:"t:Capabilities,omitempty" json:"Capabilities,omitempty"`
}

type EmailAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Entry"`

	Value string `xml:",chardata" json:"-,"`

	Key *EmailAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	RoutingType string `xml:"RoutingType,attr,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"MailboxType,attr,omitempty" json:"MailboxType,omitempty"`
}

type PhoneNumberDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Entry"`

	Value string `xml:",chardata" json:"-,"`

	Key *PhoneNumberKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type PhysicalAddressDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:Entry"`

	Street string `xml:"t:Street,omitempty" json:"Street,omitempty"`

	City string `xml:"t:City,omitempty" json:"City,omitempty"`

	State string `xml:"t:State,omitempty" json:"State,omitempty"`

	CountryOrRegion string `xml:"t:CountryOrRegion,omitempty" json:"CountryOrRegion,omitempty"`

	PostalCode string `xml:"t:PostalCode,omitempty" json:"PostalCode,omitempty"`

	Key *PhysicalAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryType struct {
	XMLName xml.Name `xml:"t:Urls"`

	Url []*ContactUrlDictionaryEntryType `xml:"t:Url,omitempty" json:"Url,omitempty"`
}

type AbchEmailAddressDictionaryType struct {
	XMLName xml.Name `xml:"t:AbchEmailAddresses"`

	Email []*AbchEmailAddressDictionaryEntryType `xml:"t:Email,omitempty" json:"Email,omitempty"`
}

type ImAddressDictionaryType struct {
	XMLName xml.Name `xml:"t:ImAddresses"`

	Entry []*ImAddressDictionaryEntryType `xml:"t:Entry,omitempty" json:"Entry,omitempty"`
}

type EmailAddressDictionaryType struct {
	XMLName xml.Name `xml:"t:EmailAddresses"`

	Entry []*EmailAddressDictionaryEntryType `xml:"t:Entry,omitempty" json:"Entry,omitempty"`
}

type PhoneNumberDictionaryType struct {
	XMLName xml.Name `xml:"t:PhoneNumbers"`

	Entry []*PhoneNumberDictionaryEntryType `xml:"t:Entry,omitempty" json:"Entry,omitempty"`
}

type PhysicalAddressDictionaryType struct {
	XMLName xml.Name `xml:"t:PhysicalAddresses"`

	Entry []*PhysicalAddressDictionaryEntryType `xml:"t:Entry,omitempty" json:"Entry,omitempty"`
}

type MembersListType struct {
	XMLName xml.Name `xml:"t:Members"`

	Member []*MemberType `xml:"t:Member,omitempty" json:"Member,omitempty"`
}

type MemberType struct {
	XMLName xml.Name `xml:"t:Member"`

	Mailbox *EmailAddressType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *MemberStatusType `xml:"t:Status,omitempty" json:"Status,omitempty"`

	Key string `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type RoleMemberItemType struct {
	*ItemType

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	Type *RoleMemberTypeType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	MemberId string `xml:"t:MemberId,omitempty" json:"MemberId,omitempty"`
}

type NetworkItemType struct {
	*ItemType

	DomainId int32 `xml:"t:DomainId,omitempty" json:"DomainId,omitempty"`

	DomainTag string `xml:"t:DomainTag,omitempty" json:"DomainTag,omitempty"`

	UserTileUrl string `xml:"t:UserTileUrl,omitempty" json:"UserTileUrl,omitempty"`

	ProfileUrl string `xml:"t:ProfileUrl,omitempty" json:"ProfileUrl,omitempty"`

	Settings int32 `xml:"t:Settings,omitempty" json:"Settings,omitempty"`

	IsDefault bool `xml:"t:IsDefault,omitempty" json:"IsDefault,omitempty"`

	AutoLinkError string `xml:"t:AutoLinkError,omitempty" json:"AutoLinkError,omitempty"`

	AutoLinkSuccess string `xml:"t:AutoLinkSuccess,omitempty" json:"AutoLinkSuccess,omitempty"`

	UserEmail string `xml:"t:UserEmail,omitempty" json:"UserEmail,omitempty"`

	ClientPublishSecret string `xml:"t:ClientPublishSecret,omitempty" json:"ClientPublishSecret,omitempty"`

	ClientToken string `xml:"t:ClientToken,omitempty" json:"ClientToken,omitempty"`

	ClientToken2 string `xml:"t:ClientToken2,omitempty" json:"ClientToken2,omitempty"`

	ContactSyncError string `xml:"t:ContactSyncError,omitempty" json:"ContactSyncError,omitempty"`

	ContactSyncSuccess string `xml:"t:ContactSyncSuccess,omitempty" json:"ContactSyncSuccess,omitempty"`

	ErrorOffers int32 `xml:"t:ErrorOffers,omitempty" json:"ErrorOffers,omitempty"`

	FirstAuthErrorDates string `xml:"t:FirstAuthErrorDates,omitempty" json:"FirstAuthErrorDates,omitempty"`

	LastVersionSaved int32 `xml:"t:LastVersionSaved,omitempty" json:"LastVersionSaved,omitempty"`

	LastWelcomeContact string `xml:"t:LastWelcomeContact,omitempty" json:"LastWelcomeContact,omitempty"`

	Offers int32 `xml:"t:Offers,omitempty" json:"Offers,omitempty"`

	PsaLastChanged xsd.DateTime `xml:"t:PsaLastChanged,omitempty" json:"PsaLastChanged,omitempty"`

	RefreshToken2 string `xml:"t:RefreshToken2,omitempty" json:"RefreshToken2,omitempty"`

	RefreshTokenExpiry2 string `xml:"t:RefreshTokenExpiry2,omitempty" json:"RefreshTokenExpiry2,omitempty"`

	SessionHandle string `xml:"t:SessionHandle,omitempty" json:"SessionHandle,omitempty"`

	RejectedOffers int32 `xml:"t:RejectedOffers,omitempty" json:"RejectedOffers,omitempty"`

	SyncEnabled bool `xml:"t:SyncEnabled,omitempty" json:"SyncEnabled,omitempty"`

	TokenRefreshLastAttempted xsd.DateTime `xml:"t:TokenRefreshLastAttempted,omitempty" json:"TokenRefreshLastAttempted,omitempty"`

	TokenRefreshLastCompleted xsd.DateTime `xml:"t:TokenRefreshLastCompleted,omitempty" json:"TokenRefreshLastCompleted,omitempty"`

	PsaState string `xml:"t:PsaState,omitempty" json:"PsaState,omitempty"`

	SourceEntryID []byte `xml:"t:SourceEntryID,omitempty" json:"SourceEntryID,omitempty"`

	AccountName string `xml:"t:AccountName,omitempty" json:"AccountName,omitempty"`

	LastSync xsd.DateTime `xml:"t:LastSync,omitempty" json:"LastSync,omitempty"`
}

type AbchPersonItemType struct {
	*ItemType

	AntiLinkInfo string `xml:"t:AntiLinkInfo,omitempty" json:"AntiLinkInfo,omitempty"`

	PersonId *GuidType `xml:"t:PersonId,omitempty" json:"PersonId,omitempty"`

	ContactHandles *ArrayOfAbchPersonContactHandlesType `xml:"t:ContactHandles,omitempty" json:"ContactHandles,omitempty"`

	ContactCategories *ArrayOfStringsType `xml:"t:ContactCategories,omitempty" json:"ContactCategories,omitempty"`

	RelevanceOrder1 string `xml:"t:RelevanceOrder1,omitempty" json:"RelevanceOrder1,omitempty"`

	RelevanceOrder2 string `xml:"t:RelevanceOrder2,omitempty" json:"RelevanceOrder2,omitempty"`

	TrustLevel int32 `xml:"t:TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	FavoriteOrder int32 `xml:"t:FavoriteOrder,omitempty" json:"FavoriteOrder,omitempty"`

	ExchangePersonIdGuid *GuidType `xml:"t:ExchangePersonIdGuid,omitempty" json:"ExchangePersonIdGuid,omitempty"`
}

type ArrayOfAbchPersonContactHandlesType struct {
	XMLName xml.Name `xml:"t:ContactHandles"`

	ContactHandle []*AbchPersonContactHandle `xml:"t:ContactHandle,omitempty" json:"ContactHandle,omitempty"`
}

type AbchPersonContactHandle struct {
	XMLName xml.Name `xml:"t:ContactHandle"`

	SourceId string `xml:"t:SourceId,omitempty" json:"SourceId,omitempty"`

	ObjectId string `xml:"t:ObjectId,omitempty" json:"ObjectId,omitempty"`

	AccountName string `xml:"t:AccountName,omitempty" json:"AccountName,omitempty"`
}

type ArrayOfGuidType struct {
	Guid []*GuidType `xml:"t:Guid,omitempty" json:"Guid,omitempty"`
}

type ContactItemType struct {
	*ItemType

	FileAs string `xml:"t:FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsMapping *FileAsMappingType `xml:"t:FileAsMapping,omitempty" json:"FileAsMapping,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	GivenName string `xml:"t:GivenName,omitempty" json:"GivenName,omitempty"`

	Initials string `xml:"t:Initials,omitempty" json:"Initials,omitempty"`

	MiddleName string `xml:"t:MiddleName,omitempty" json:"MiddleName,omitempty"`

	Nickname string `xml:"t:Nickname,omitempty" json:"Nickname,omitempty"`

	CompleteName *CompleteNameType `xml:"t:CompleteName,omitempty" json:"CompleteName,omitempty"`

	CompanyName string `xml:"t:CompanyName,omitempty" json:"CompanyName,omitempty"`

	EmailAddresses *EmailAddressDictionaryType `xml:"t:EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	AbchEmailAddresses *AbchEmailAddressDictionaryType `xml:"t:AbchEmailAddresses,omitempty" json:"AbchEmailAddresses,omitempty"`

	PhysicalAddresses *PhysicalAddressDictionaryType `xml:"t:PhysicalAddresses,omitempty" json:"PhysicalAddresses,omitempty"`

	PhoneNumbers *PhoneNumberDictionaryType `xml:"t:PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	AssistantName string `xml:"t:AssistantName,omitempty" json:"AssistantName,omitempty"`

	Birthday xsd.DateTime `xml:"t:Birthday,omitempty" json:"Birthday,omitempty"`

	BusinessHomePage AnyURI `xml:"t:BusinessHomePage,omitempty" json:"BusinessHomePage,omitempty"`

	Children *ArrayOfStringsType `xml:"t:Children,omitempty" json:"Children,omitempty"`

	Companies *ArrayOfStringsType `xml:"t:Companies,omitempty" json:"Companies,omitempty"`

	ContactSource *ContactSourceType `xml:"t:ContactSource,omitempty" json:"ContactSource,omitempty"`

	Department string `xml:"t:Department,omitempty" json:"Department,omitempty"`

	Generation string `xml:"t:Generation,omitempty" json:"Generation,omitempty"`

	ImAddresses *ImAddressDictionaryType `xml:"t:ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	JobTitle string `xml:"t:JobTitle,omitempty" json:"JobTitle,omitempty"`

	Manager string `xml:"t:Manager,omitempty" json:"Manager,omitempty"`

	Mileage string `xml:"t:Mileage,omitempty" json:"Mileage,omitempty"`

	OfficeLocation string `xml:"t:OfficeLocation,omitempty" json:"OfficeLocation,omitempty"`

	PostalAddressIndex *PhysicalAddressIndexType `xml:"t:PostalAddressIndex,omitempty" json:"PostalAddressIndex,omitempty"`

	Profession string `xml:"t:Profession,omitempty" json:"Profession,omitempty"`

	SpouseName string `xml:"t:SpouseName,omitempty" json:"SpouseName,omitempty"`

	Surname string `xml:"t:Surname,omitempty" json:"Surname,omitempty"`

	WeddingAnniversary xsd.DateTime `xml:"t:WeddingAnniversary,omitempty" json:"WeddingAnniversary,omitempty"`

	HasPicture bool `xml:"t:HasPicture,omitempty" json:"HasPicture,omitempty"`

	PhoneticFullName string `xml:"t:PhoneticFullName,omitempty" json:"PhoneticFullName,omitempty"`

	PhoneticFirstName string `xml:"t:PhoneticFirstName,omitempty" json:"PhoneticFirstName,omitempty"`

	PhoneticLastName string `xml:"t:PhoneticLastName,omitempty" json:"PhoneticLastName,omitempty"`

	Alias string `xml:"t:Alias,omitempty" json:"Alias,omitempty"`

	Notes string `xml:"t:Notes,omitempty" json:"Notes,omitempty"`

	Photo []byte `xml:"t:Photo,omitempty" json:"Photo,omitempty"`

	UserSMIMECertificate *ArrayOfBinaryType `xml:"t:UserSMIMECertificate,omitempty" json:"UserSMIMECertificate,omitempty"`

	MSExchangeCertificate *ArrayOfBinaryType `xml:"t:MSExchangeCertificate,omitempty" json:"MSExchangeCertificate,omitempty"`

	DirectoryId string `xml:"t:DirectoryId,omitempty" json:"DirectoryId,omitempty"`

	ManagerMailbox *SingleRecipientType `xml:"t:ManagerMailbox,omitempty" json:"ManagerMailbox,omitempty"`

	DirectReports *ArrayOfRecipientsType `xml:"t:DirectReports,omitempty" json:"DirectReports,omitempty"`

	AccountName string `xml:"t:AccountName,omitempty" json:"AccountName,omitempty"`

	IsAutoUpdateDisabled bool `xml:"t:IsAutoUpdateDisabled,omitempty" json:"IsAutoUpdateDisabled,omitempty"`

	IsMessengerEnabled bool `xml:"t:IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Comment string `xml:"t:Comment,omitempty" json:"Comment,omitempty"`

	ContactShortId int32 `xml:"t:ContactShortId,omitempty" json:"ContactShortId,omitempty"`

	ContactType string `xml:"t:ContactType,omitempty" json:"ContactType,omitempty"`

	Gender string `xml:"t:Gender,omitempty" json:"Gender,omitempty"`

	IsHidden bool `xml:"t:IsHidden,omitempty" json:"IsHidden,omitempty"`

	ObjectId string `xml:"t:ObjectId,omitempty" json:"ObjectId,omitempty"`

	PassportId int64 `xml:"t:PassportId,omitempty" json:"PassportId,omitempty"`

	IsPrivate bool `xml:"t:IsPrivate,omitempty" json:"IsPrivate,omitempty"`

	SourceId string `xml:"t:SourceId,omitempty" json:"SourceId,omitempty"`

	TrustLevel int32 `xml:"t:TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	CreatedBy string `xml:"t:CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	Urls *ContactUrlDictionaryType `xml:"t:Urls,omitempty" json:"Urls,omitempty"`

	Cid int64 `xml:"t:Cid,omitempty" json:"Cid,omitempty"`

	SkypeAuthCertificate string `xml:"t:SkypeAuthCertificate,omitempty" json:"SkypeAuthCertificate,omitempty"`

	SkypeContext string `xml:"t:SkypeContext,omitempty" json:"SkypeContext,omitempty"`

	SkypeId string `xml:"t:SkypeId,omitempty" json:"SkypeId,omitempty"`

	SkypeRelationship string `xml:"t:SkypeRelationship,omitempty" json:"SkypeRelationship,omitempty"`

	YomiNickname string `xml:"t:YomiNickname,omitempty" json:"YomiNickname,omitempty"`

	XboxLiveTag string `xml:"t:XboxLiveTag,omitempty" json:"XboxLiveTag,omitempty"`

	InviteFree bool `xml:"t:InviteFree,omitempty" json:"InviteFree,omitempty"`

	HidePresenceAndProfile bool `xml:"t:HidePresenceAndProfile,omitempty" json:"HidePresenceAndProfile,omitempty"`

	IsPendingOutbound bool `xml:"t:IsPendingOutbound,omitempty" json:"IsPendingOutbound,omitempty"`

	SupportGroupFeeds bool `xml:"t:SupportGroupFeeds,omitempty" json:"SupportGroupFeeds,omitempty"`

	UserTileHash string `xml:"t:UserTileHash,omitempty" json:"UserTileHash,omitempty"`

	UnifiedInbox bool `xml:"t:UnifiedInbox,omitempty" json:"UnifiedInbox,omitempty"`

	Mris *ArrayOfStringsType `xml:"t:Mris,omitempty" json:"Mris,omitempty"`

	Wlid string `xml:"t:Wlid,omitempty" json:"Wlid,omitempty"`

	AbchContactId *GuidType `xml:"t:AbchContactId,omitempty" json:"AbchContactId,omitempty"`

	NotInBirthdayCalendar bool `xml:"t:NotInBirthdayCalendar,omitempty" json:"NotInBirthdayCalendar,omitempty"`

	ShellContactType string `xml:"t:ShellContactType,omitempty" json:"ShellContactType,omitempty"`

	ImMri string `xml:"t:ImMri,omitempty" json:"ImMri,omitempty"`

	PresenceTrustLevel int32 `xml:"t:PresenceTrustLevel,omitempty" json:"PresenceTrustLevel,omitempty"`

	OtherMri string `xml:"t:OtherMri,omitempty" json:"OtherMri,omitempty"`

	ProfileLastChanged string `xml:"t:ProfileLastChanged,omitempty" json:"ProfileLastChanged,omitempty"`

	MobileIMEnabled bool `xml:"t:MobileIMEnabled,omitempty" json:"MobileIMEnabled,omitempty"`

	PartnerNetworkProfilePhotoUrl string `xml:"t:PartnerNetworkProfilePhotoUrl,omitempty" json:"PartnerNetworkProfilePhotoUrl,omitempty"`

	PartnerNetworkThumbnailPhotoUrl string `xml:"t:PartnerNetworkThumbnailPhotoUrl,omitempty" json:"PartnerNetworkThumbnailPhotoUrl,omitempty"`

	PersonId string `xml:"t:PersonId,omitempty" json:"PersonId,omitempty"`

	ConversationGuid *GuidType `xml:"t:ConversationGuid,omitempty" json:"ConversationGuid,omitempty"`
}

type ArrayOfBinaryType struct {
	Base64Binary [][]byte `xml:"t:Base64Binary,omitempty" json:"Base64Binary,omitempty"`
}

type DistributionListType struct {
	*ItemType

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	FileAs string `xml:"t:FileAs,omitempty" json:"FileAs,omitempty"`

	ContactSource *ContactSourceType `xml:"t:ContactSource,omitempty" json:"ContactSource,omitempty"`

	Members *MembersListType `xml:"t:Members,omitempty" json:"Members,omitempty"`
}

type SearchParametersType struct {
	XMLName xml.Name `xml:"t:SearchParameters"`

	Restriction *RestrictionType `xml:"t:Restriction,omitempty" json:"Restriction,omitempty"`

	BaseFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"t:BaseFolderIds,omitempty" json:"BaseFolderIds,omitempty"`

	Traversal *SearchFolderTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type ConstantValueType struct {
	Value string `xml:"Value,attr,omitempty" json:"t:Value,omitempty"`
}

type SearchExpressionType struct {
}

type AggregateOnType struct {
	XMLName xml.Name `xml:"t:AggregateOn"`

	FieldURI *PathToUnindexedFieldType `xml:"t:FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"t:IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"t:ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Aggregate *AggregateType `xml:"Aggregate,attr,omitempty" json:"Aggregate,omitempty"`
}

type BaseGroupByType struct {
	Order *SortDirectionType `xml:"Order,attr,omitempty" json:"Order,omitempty"`
}

type GroupByType struct {
	XMLName xml.Name `xml:"t:GroupBy"`

	*BaseGroupByType

	AggregateOn *AggregateOnType `xml:"t:AggregateOn,omitempty" json:"AggregateOn,omitempty"`

	UseCollapsibleGroups bool `xml:"t:UseCollapsibleGroups,omitempty" json:"UseCollapsibleGroups,omitempty"`

	ItemsPerGroup *NonNegativeInteger `xml:"t:ItemsPerGroup,omitempty" json:"ItemsPerGroup,omitempty"`

	MaxItemsPerGroup *NonNegativeInteger `xml:"t:MaxItemsPerGroup,omitempty" json:"MaxItemsPerGroup,omitempty"`

	GroupsToExpand *ArrayOfGroupIdType `xml:"t:GroupsToExpand,omitempty" json:"GroupsToExpand,omitempty"`

	FieldURI *PathToUnindexedFieldType `xml:"t:FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"t:IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"t:ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type DistinguishedGroupByType struct {
	XMLName xml.Name `xml:"t:DistinguishedGroupBy"`

	*BaseGroupByType

	StandardGroupBy *StandardGroupByType `xml:"t:StandardGroupBy,omitempty" json:"StandardGroupBy,omitempty"`
}

type ArrayOfGroupIdType struct {
	XMLName xml.Name `xml:"t:GroupsToExpand"`

	GroupId []byte `xml:"t:GroupId,omitempty" json:"GroupId,omitempty"`
}

type GroupedItemsType struct {
	XMLName xml.Name `xml:"t:GroupedItems"`

	GroupIndex string `xml:"t:GroupIndex,omitempty" json:"GroupIndex,omitempty"`

	Items *ArrayOfRealItemsType `xml:"t:Items,omitempty" json:"Items,omitempty"`

	GroupSummary *GroupSummaryType `xml:"t:GroupSummary,omitempty" json:"GroupSummary,omitempty"`
}

type ArrayOfGroupedItemsType struct {
	XMLName xml.Name `xml:"t:Groups"`

	GroupedItems []*GroupedItemsType `xml:"t:GroupedItems,omitempty" json:"GroupedItems,omitempty"`
}

type GroupSummaryType struct {
	XMLName xml.Name `xml:"t:GroupSummary"`

	GroupCount int32 `xml:"t:GroupCount,omitempty" json:"GroupCount,omitempty"`

	UnreadCount int32 `xml:"t:UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	InstanceKey []byte `xml:"t:InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	GroupByValue string `xml:"t:GroupByValue,omitempty" json:"GroupByValue,omitempty"`
}

type ExistsType struct {
	XMLName xml.Name `xml:"t:Exists"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type FieldURIOrConstantType struct {
	XMLName xml.Name `xml:"t:FieldURIOrConstant"`

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"t:Constant,omitempty" json:"Constant,omitempty"`
}

type TwoOperandExpressionType struct {
	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	FieldURIOrConstant *FieldURIOrConstantType `xml:"t:FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty"`
}

type ExcludesValueType struct {
	XMLName xml.Name `xml:"t:Bitmask"`

	Value *ExcludesAttributeType `xml:"Value,attr,omitempty" json:"t:Value,omitempty"`
}

type ExcludesType struct {
	XMLName xml.Name `xml:"t:Excludes"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Bitmask *ExcludesValueType `xml:"t:Bitmask,omitempty" json:"Bitmask,omitempty"`
}

type IsEqualToType struct {
	XMLName xml.Name `xml:"t:IsEqualTo"`

	*TwoOperandExpressionType
}

type IsNotEqualToType struct {
	XMLName xml.Name `xml:"t:IsNotEqualTo"`

	*TwoOperandExpressionType
}

type IsGreaterThanType struct {
	XMLName xml.Name `xml:"t:IsGreaterThan"`

	*TwoOperandExpressionType
}

type IsGreaterThanOrEqualToType struct {
	XMLName xml.Name `xml:"t:IsGreaterThanOrEqualTo"`

	*TwoOperandExpressionType
}

type IsLessThanType struct {
	XMLName xml.Name `xml:"t:IsLessThan"`

	*TwoOperandExpressionType
}

type IsLessThanOrEqualToType struct {
	XMLName xml.Name `xml:"t:IsLessThanOrEqualTo"`

	*TwoOperandExpressionType
}

type ContainsExpressionType struct {
	XMLName xml.Name `xml:"t:Contains"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"t:Constant,omitempty" json:"Constant,omitempty"`

	ContainmentMode *ContainmentModeType `xml:"ContainmentMode,attr,omitempty" json:"ContainmentMode,omitempty"`

	ContainmentComparison *ContainmentComparisonType `xml:"ContainmentComparison,attr,omitempty" json:"ContainmentComparison,omitempty"`
}

type NotType struct {
	XMLName xml.Name `xml:"t:Not"`

	*SearchExpressionType

	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type MultipleOperandBooleanExpressionType struct {
	*SearchExpressionType

	SearchExpression []*SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type AndType struct {
	XMLName xml.Name `xml:"t:And"`

	*MultipleOperandBooleanExpressionType
}

type OrType struct {
	XMLName xml.Name `xml:"t:Or"`

	*MultipleOperandBooleanExpressionType
}

type NearType struct {
	XMLName xml.Name `xml:"t:Near"`

	*MultipleOperandBooleanExpressionType

	Distance uint32 `xml:"t:Distance,omitempty" json:"Distance,omitempty"`

	Ordered bool `xml:"t:Ordered,omitempty" json:"Ordered,omitempty"`
}

type RestrictionType struct {
	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type FieldOrderType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Order *SortDirectionType `xml:"Order,attr,omitempty" json:"Order,omitempty"`
}

type NonEmptyArrayOfFieldOrdersType struct {
	FieldOrder []*FieldOrderType `xml:"t:FieldOrder,omitempty" json:"FieldOrder,omitempty"`
}

type NonEmptyArrayOfFolderNamesType struct {
	XMLName xml.Name `xml:"t:FolderNames"`

	FolderName []string `xml:"t:FolderName,omitempty" json:"FolderName,omitempty"`
}

type BaseNotificationEventType struct {
	XMLName xml.Name `xml:"t:StatusEvent"`

	Watermark *WatermarkType `xml:"t:Watermark,omitempty" json:"Watermark,omitempty"`
}

type BaseObjectChangedEventType struct {
	*BaseNotificationEventType

	TimeStamp xsd.DateTime `xml:"t:TimeStamp,omitempty" json:"TimeStamp,omitempty"`

	ParentFolderId *FolderIdType `xml:"t:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`
}

type ModifiedEventType struct {
	XMLName xml.Name `xml:"t:ModifiedEvent"`

	*BaseObjectChangedEventType

	UnreadCount int32 `xml:"t:UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type MovedCopiedEventType struct {
	*BaseObjectChangedEventType

	OldParentFolderId *FolderIdType `xml:"t:OldParentFolderId,omitempty" json:"OldParentFolderId,omitempty"`

	OldFolderId *FolderIdType `xml:"t:OldFolderId,omitempty" json:"OldFolderId,omitempty"`

	OldItemId *ItemIdType `xml:"t:OldItemId,omitempty" json:"OldItemId,omitempty"`
}

type NotificationType struct {
	SubscriptionId *SubscriptionIdType `xml:"t:SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	PreviousWatermark *WatermarkType `xml:"t:PreviousWatermark,omitempty" json:"PreviousWatermark,omitempty"`

	MoreEvents bool `xml:"t:MoreEvents,omitempty" json:"MoreEvents,omitempty"`

	CopiedEvent *MovedCopiedEventType `xml:"t:CopiedEvent,omitempty" json:"CopiedEvent,omitempty"`

	CreatedEvent *BaseObjectChangedEventType `xml:"t:CreatedEvent,omitempty" json:"CreatedEvent,omitempty"`

	DeletedEvent *BaseObjectChangedEventType `xml:"t:DeletedEvent,omitempty" json:"DeletedEvent,omitempty"`

	ModifiedEvent *ModifiedEventType `xml:"t:ModifiedEvent,omitempty" json:"ModifiedEvent,omitempty"`

	MovedEvent *MovedCopiedEventType `xml:"t:MovedEvent,omitempty" json:"MovedEvent,omitempty"`

	NewMailEvent *BaseObjectChangedEventType `xml:"t:NewMailEvent,omitempty" json:"NewMailEvent,omitempty"`

	StatusEvent *BaseNotificationEventType `xml:"t:StatusEvent,omitempty" json:"StatusEvent,omitempty"`

	FreeBusyChangedEvent *BaseObjectChangedEventType `xml:"t:FreeBusyChangedEvent,omitempty" json:"FreeBusyChangedEvent,omitempty"`
}

type NonEmptyArrayOfNotificationEventTypesType struct {
	EventType *NotificationEventTypeType `xml:"t:EventType,omitempty" json:"EventType,omitempty"`
}

type BaseSubscriptionRequestType struct {
	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"t:FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"t:EventTypes,omitempty" json:"EventTypes,omitempty"`

	Watermark *WatermarkType `xml:"t:Watermark,omitempty" json:"Watermark,omitempty"`

	SubscribeToAllFolders bool `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type PushSubscriptionRequestType struct {
	XMLName xml.Name `xml:"t:PushSubscriptionRequest"`

	*BaseSubscriptionRequestType

	StatusFrequency *SubscriptionStatusFrequencyType `xml:"t:StatusFrequency,omitempty" json:"StatusFrequency,omitempty"`

	URL string `xml:"t:URL,omitempty" json:"URL,omitempty"`

	CallerData string `xml:"t:CallerData,omitempty" json:"CallerData,omitempty"`
}

type PullSubscriptionRequestType struct {
	XMLName xml.Name `xml:"t:PullSubscriptionRequest"`

	*BaseSubscriptionRequestType

	Timeout *SubscriptionTimeoutType `xml:"t:Timeout,omitempty" json:"Timeout,omitempty"`
}

type StreamingSubscriptionRequestType struct {
	XMLName xml.Name `xml:"t:StreamingSubscriptionRequest"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"t:FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"t:EventTypes,omitempty" json:"EventTypes,omitempty"`

	SubscribeToAllFolders bool `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type NonEmptyArrayOfSubscriptionIdsType struct {
	SubscriptionId []*SubscriptionIdType `xml:"t:SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type NonEmptyArrayOfNotificationsType struct {
	XMLName xml.Name `xml:"t:Notifications"`

	Notification []*NotificationType `xml:"t:Notification,omitempty" json:"Notification,omitempty"`
}

type SyncFolderItemsDeleteType struct {
	XMLName xml.Name `xml:"t:Delete"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`
}

type SyncFolderItemsReadFlagType struct {
	XMLName xml.Name `xml:"t:ReadFlagChange"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	IsRead bool `xml:"t:IsRead,omitempty" json:"IsRead,omitempty"`
}

type SyncFolderItemsChangesType struct {
	XMLName xml.Name `xml:"t:Changes"`

	Create *SyncFolderItemsCreateOrUpdateType `xml:"t:Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderItemsCreateOrUpdateType `xml:"t:Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderItemsDeleteType `xml:"t:Delete,omitempty" json:"Delete,omitempty"`

	ReadFlagChange *SyncFolderItemsReadFlagType `xml:"t:ReadFlagChange,omitempty" json:"ReadFlagChange,omitempty"`
}

type SyncFolderHierarchyCreateOrUpdateType struct {
	Folder *FolderType `xml:"t:Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"t:CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"t:ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"t:SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"t:TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type SyncFolderHierarchyDeleteType struct {
	XMLName xml.Name `xml:"t:Delete"`

	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`
}

type SyncFolderHierarchyChangesType struct {
	XMLName xml.Name `xml:"t:Changes"`

	Create *SyncFolderHierarchyCreateOrUpdateType `xml:"t:Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderHierarchyCreateOrUpdateType `xml:"t:Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderHierarchyDeleteType `xml:"t:Delete,omitempty" json:"Delete,omitempty"`
}

type RequestTypeHeader struct {
	RequestType *AvailabilityProxyRequestType `xml:"t:RequestType,omitempty" json:"RequestType,omitempty"`
}

type CalendarEventDetails struct {
	ID string `xml:"t:ID,omitempty" json:"ID,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	IsMeeting bool `xml:"t:IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsRecurring bool `xml:"t:IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsException bool `xml:"t:IsException,omitempty" json:"IsException,omitempty"`

	IsReminderSet bool `xml:"t:IsReminderSet,omitempty" json:"IsReminderSet,omitempty"`

	IsPrivate bool `xml:"t:IsPrivate,omitempty" json:"IsPrivate,omitempty"`
}

type CalendarEvent struct {
	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`

	BusyType *LegacyFreeBusyType `xml:"t:BusyType,omitempty" json:"BusyType,omitempty"`

	CalendarEventDetails *CalendarEventDetails `xml:"t:CalendarEventDetails,omitempty" json:"CalendarEventDetails,omitempty"`
}

type ArrayOfCalendarEvent struct {
	XMLName xml.Name `xml:"t:CalendarEventArray"`

	CalendarEvent []*CalendarEvent `xml:"t:CalendarEvent,omitempty" json:"CalendarEvent,omitempty"`
}

type Duration struct {
	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`
}

type EmailAddress struct {
	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Address string `xml:"t:Address,omitempty" json:"Address,omitempty"`

	RoutingType string `xml:"t:RoutingType,omitempty" json:"RoutingType,omitempty"`
}

type FreeBusyViewOptionsType struct {
	XMLName xml.Name `xml:"t:FreeBusyViewOptions"`

	TimeWindow *Duration `xml:"t:TimeWindow,omitempty" json:"TimeWindow,omitempty"`

	MergedFreeBusyIntervalInMinutes int32 `xml:"t:MergedFreeBusyIntervalInMinutes,omitempty" json:"MergedFreeBusyIntervalInMinutes,omitempty"`

	RequestedView *FreeBusyViewType `xml:"t:RequestedView,omitempty" json:"RequestedView,omitempty"`
}

type WorkingPeriod struct {
	DayOfWeek *DaysOfWeekType `xml:"t:DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	StartTimeInMinutes int32 `xml:"t:StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes int32 `xml:"t:EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type ArrayOfWorkingPeriod struct {
	XMLName xml.Name `xml:"t:WorkingPeriodArray"`

	WorkingPeriod []*WorkingPeriod `xml:"t:WorkingPeriod,omitempty" json:"WorkingPeriod,omitempty"`
}

type SerializableTimeZoneTime struct {
	Bias int32 `xml:"t:Bias,omitempty" json:"Bias,omitempty"`

	Time string `xml:"t:Time,omitempty" json:"Time,omitempty"`

	DayOrder int16 `xml:"t:DayOrder,omitempty" json:"DayOrder,omitempty"`

	Month int16 `xml:"t:Month,omitempty" json:"Month,omitempty"`

	DayOfWeek *DayOfWeekType `xml:"t:DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Year string `xml:"t:Year,omitempty" json:"Year,omitempty"`
}

type SerializableTimeZone struct {
	Bias int32 `xml:"t:Bias,omitempty" json:"Bias,omitempty"`

	StandardTime *SerializableTimeZoneTime `xml:"t:StandardTime,omitempty" json:"StandardTime,omitempty"`

	DaylightTime *SerializableTimeZoneTime `xml:"t:DaylightTime,omitempty" json:"DaylightTime,omitempty"`
}

type WorkingHours struct {
	TimeZone *SerializableTimeZone `xml:"t:TimeZone,omitempty" json:"TimeZone,omitempty"`

	WorkingPeriodArray *ArrayOfWorkingPeriod `xml:"t:WorkingPeriodArray,omitempty" json:"WorkingPeriodArray,omitempty"`
}

type FreeBusyView struct {
	FreeBusyViewType *FreeBusyViewType `xml:"t:FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`

	MergedFreeBusy string `xml:"t:MergedFreeBusy,omitempty" json:"MergedFreeBusy,omitempty"`

	CalendarEventArray *ArrayOfCalendarEvent `xml:"t:CalendarEventArray,omitempty" json:"CalendarEventArray,omitempty"`

	WorkingHours *WorkingHours `xml:"t:WorkingHours,omitempty" json:"WorkingHours,omitempty"`
}

type MailboxData struct {
	Email *EmailAddress `xml:"t:Email,omitempty" json:"Email,omitempty"`

	AttendeeType *MeetingAttendeeType `xml:"t:AttendeeType,omitempty" json:"AttendeeType,omitempty"`

	ExcludeConflicts bool `xml:"t:ExcludeConflicts,omitempty" json:"ExcludeConflicts,omitempty"`
}

type ArrayOfMailboxData struct {
	XMLName xml.Name `xml:"t:MailboxDataArray"`

	MailboxData []*MailboxData `xml:"t:MailboxData,omitempty" json:"MailboxData,omitempty"`
}

type SuggestionsViewOptionsType struct {
	XMLName xml.Name `xml:"t:SuggestionsViewOptions"`

	GoodThreshold int32 `xml:"t:GoodThreshold,omitempty" json:"GoodThreshold,omitempty"`

	MaximumResultsByDay int32 `xml:"t:MaximumResultsByDay,omitempty" json:"MaximumResultsByDay,omitempty"`

	MaximumNonWorkHourResultsByDay int32 `xml:"t:MaximumNonWorkHourResultsByDay,omitempty" json:"MaximumNonWorkHourResultsByDay,omitempty"`

	MeetingDurationInMinutes int32 `xml:"t:MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	MinimumSuggestionQuality *SuggestionQuality `xml:"t:MinimumSuggestionQuality,omitempty" json:"MinimumSuggestionQuality,omitempty"`

	DetailedSuggestionsWindow *Duration `xml:"t:DetailedSuggestionsWindow,omitempty" json:"DetailedSuggestionsWindow,omitempty"`

	CurrentMeetingTime xsd.DateTime `xml:"t:CurrentMeetingTime,omitempty" json:"CurrentMeetingTime,omitempty"`

	GlobalObjectId string `xml:"t:GlobalObjectId,omitempty" json:"GlobalObjectId,omitempty"`
}

type ArrayOfAttendeeConflictData struct {
	XMLName xml.Name `xml:"t:AttendeeConflictDataArray"`

	UnknownAttendeeConflictData *UnknownAttendeeConflictData `xml:"t:UnknownAttendeeConflictData,omitempty" json:"UnknownAttendeeConflictData,omitempty"`

	IndividualAttendeeConflictData *IndividualAttendeeConflictData `xml:"t:IndividualAttendeeConflictData,omitempty" json:"IndividualAttendeeConflictData,omitempty"`

	TooBigGroupAttendeeConflictData *TooBigGroupAttendeeConflictData `xml:"t:TooBigGroupAttendeeConflictData,omitempty" json:"TooBigGroupAttendeeConflictData,omitempty"`

	GroupAttendeeConflictData *GroupAttendeeConflictData `xml:"t:GroupAttendeeConflictData,omitempty" json:"GroupAttendeeConflictData,omitempty"`
}

type AttendeeConflictData struct {
}

type UnknownAttendeeConflictData struct {
	*AttendeeConflictData
}

type TooBigGroupAttendeeConflictData struct {
	*AttendeeConflictData
}

type IndividualAttendeeConflictData struct {
	*AttendeeConflictData

	BusyType *LegacyFreeBusyType `xml:"t:BusyType,omitempty" json:"BusyType,omitempty"`
}

type GroupAttendeeConflictData struct {
	*AttendeeConflictData

	NumberOfMembers int32 `xml:"t:NumberOfMembers,omitempty" json:"NumberOfMembers,omitempty"`

	NumberOfMembersAvailable int32 `xml:"t:NumberOfMembersAvailable,omitempty" json:"NumberOfMembersAvailable,omitempty"`

	NumberOfMembersWithConflict int32 `xml:"t:NumberOfMembersWithConflict,omitempty" json:"NumberOfMembersWithConflict,omitempty"`

	NumberOfMembersWithNoData int32 `xml:"t:NumberOfMembersWithNoData,omitempty" json:"NumberOfMembersWithNoData,omitempty"`
}

type Suggestion struct {
	MeetingTime xsd.DateTime `xml:"t:MeetingTime,omitempty" json:"MeetingTime,omitempty"`

	IsWorkTime bool `xml:"t:IsWorkTime,omitempty" json:"IsWorkTime,omitempty"`

	SuggestionQuality *SuggestionQuality `xml:"t:SuggestionQuality,omitempty" json:"SuggestionQuality,omitempty"`

	AttendeeConflictDataArray *ArrayOfAttendeeConflictData `xml:"t:AttendeeConflictDataArray,omitempty" json:"AttendeeConflictDataArray,omitempty"`
}

type ArrayOfSuggestion struct {
	XMLName xml.Name `xml:"t:SuggestionArray"`

	Suggestion []*Suggestion `xml:"t:Suggestion,omitempty" json:"Suggestion,omitempty"`
}

type SuggestionDayResult struct {
	Date xsd.DateTime `xml:"t:Date,omitempty" json:"Date,omitempty"`

	DayQuality *SuggestionQuality `xml:"t:DayQuality,omitempty" json:"DayQuality,omitempty"`

	SuggestionArray *ArrayOfSuggestion `xml:"t:SuggestionArray,omitempty" json:"SuggestionArray,omitempty"`
}

type ArrayOfSuggestionDayResult struct {
	XMLName xml.Name `xml:"t:SuggestionDayResultArray"`

	SuggestionDayResult []*SuggestionDayResult `xml:"t:SuggestionDayResult,omitempty" json:"SuggestionDayResult,omitempty"`
}

type ReplyBody struct {
	Message string `xml:"t:Message,omitempty" json:"Message,omitempty"`

	EmptyString string `xml:",attr,omitempty" json:",omitempty"`
}

type ArrayOfEventIDType struct {
	XMLName xml.Name `xml:"t:EventsToDeleteIDs"`

	EventToDeleteID string `xml:"t:EventToDeleteID,omitempty" json:"EventToDeleteID,omitempty"`
}

type UserOofSettings struct {
	OofState *OofState `xml:"t:OofState,omitempty" json:"OofState,omitempty"`

	ExternalAudience *ExternalAudience `xml:"t:ExternalAudience,omitempty" json:"ExternalAudience,omitempty"`

	Duration *Duration `xml:"t:Duration,omitempty" json:"Duration,omitempty"`

	InternalReply *ReplyBody `xml:"t:InternalReply,omitempty" json:"InternalReply,omitempty"`

	ExternalReply *ReplyBody `xml:"t:ExternalReply,omitempty" json:"ExternalReply,omitempty"`

	DeclineMeetingReply *ReplyBody `xml:"t:DeclineMeetingReply,omitempty" json:"DeclineMeetingReply,omitempty"`

	DeclineEventsForScheduledOOF bool `xml:"t:DeclineEventsForScheduledOOF,omitempty" json:"DeclineEventsForScheduledOOF,omitempty"`

	DeclineAllEventsForScheduledOOF bool `xml:"t:DeclineAllEventsForScheduledOOF,omitempty" json:"DeclineAllEventsForScheduledOOF,omitempty"`

	CreateOOFEvent bool `xml:"t:CreateOOFEvent,omitempty" json:"CreateOOFEvent,omitempty"`

	OOFEventSubject string `xml:"t:OOFEventSubject,omitempty" json:"OOFEventSubject,omitempty"`

	AutoDeclineFutureRequestsWhenOOF bool `xml:"t:AutoDeclineFutureRequestsWhenOOF,omitempty" json:"AutoDeclineFutureRequestsWhenOOF,omitempty"`

	OOFEventID string `xml:"t:OOFEventID,omitempty" json:"OOFEventID,omitempty"`

	EventsToDeleteIDs *ArrayOfEventIDType `xml:"t:EventsToDeleteIDs,omitempty" json:"EventsToDeleteIDs,omitempty"`
}

type Value struct {
	Value string `xml:",chardata" json:"-,"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type ApprovalRequestDataType struct {
	XMLName xml.Name `xml:"t:ApprovalRequestData"`

	IsUndecidedApprovalRequest bool `xml:"t:IsUndecidedApprovalRequest,omitempty" json:"IsUndecidedApprovalRequest,omitempty"`

	ApprovalDecision int32 `xml:"t:ApprovalDecision,omitempty" json:"ApprovalDecision,omitempty"`

	ApprovalDecisionMaker string `xml:"t:ApprovalDecisionMaker,omitempty" json:"ApprovalDecisionMaker,omitempty"`

	ApprovalDecisionTime xsd.DateTime `xml:"t:ApprovalDecisionTime,omitempty" json:"ApprovalDecisionTime,omitempty"`
}

type ReminderMessageDataType struct {
	XMLName xml.Name `xml:"t:ReminderMessageData"`

	ReminderText string `xml:"t:ReminderText,omitempty" json:"ReminderText,omitempty"`

	Location string `xml:"t:Location,omitempty" json:"Location,omitempty"`

	StartTime xsd.DateTime `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`

	AssociatedCalendarItemId *ItemIdType `xml:"t:AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`
}

type MessageSafetyType struct {
	XMLName xml.Name `xml:"t:MessageSafety"`

	MessageSafetyLevel int32 `xml:"t:MessageSafetyLevel,omitempty" json:"MessageSafetyLevel,omitempty"`

	MessageSafetyReason int32 `xml:"t:MessageSafetyReason,omitempty" json:"MessageSafetyReason,omitempty"`

	Info string `xml:"t:Info,omitempty" json:"Info,omitempty"`
}

type VotingOptionDataType struct {
	XMLName xml.Name `xml:"t:VotingOptionData"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	SendPrompt *SendPromptType `xml:"t:SendPrompt,omitempty" json:"SendPrompt,omitempty"`
}

type ArrayOfVotingOptionDataType struct {
	XMLName xml.Name `xml:"t:UserOptions"`

	VotingOptionData []*VotingOptionDataType `xml:"t:VotingOptionData,omitempty" json:"VotingOptionData,omitempty"`
}

type VotingInformationType struct {
	XMLName xml.Name `xml:"t:VotingInformation"`

	UserOptions *ArrayOfVotingOptionDataType `xml:"t:UserOptions,omitempty" json:"UserOptions,omitempty"`

	VotingResponse string `xml:"t:VotingResponse,omitempty" json:"VotingResponse,omitempty"`
}

type AlternateIdBaseType struct {
	Format *IdFormatType `xml:"Format,attr,omitempty" json:"Format,omitempty"`
}

type AlternateIdType struct {
	XMLName xml.Name `xml:"t:AlternateId"`

	*AlternateIdBaseType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	Mailbox *NonEmptyStringType `xml:"Mailbox,attr,omitempty" json:"Mailbox,omitempty"`

	IsArchive bool `xml:"IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type AlternatePublicFolderIdType struct {
	XMLName xml.Name `xml:"t:AlternatePublicFolderId"`

	*AlternateIdBaseType

	FolderId string `xml:"FolderId,attr,omitempty" json:"FolderId,omitempty"`
}

type AlternatePublicFolderItemIdType struct {
	XMLName xml.Name `xml:"t:AlternatePublicFolderItemId"`

	*AlternatePublicFolderIdType

	ItemId string `xml:"ItemId,attr,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfAlternateIdsType struct {
	XMLName xml.Name `xml:"t:SourceIds"`

	AlternateId *AlternateIdType `xml:"t:AlternateId,omitempty" json:"AlternateId,omitempty"`

	AlternatePublicFolderId *AlternatePublicFolderIdType `xml:"t:AlternatePublicFolderId,omitempty" json:"AlternatePublicFolderId,omitempty"`

	AlternatePublicFolderItemId *AlternatePublicFolderItemIdType `xml:"t:AlternatePublicFolderItemId,omitempty" json:"AlternatePublicFolderItemId,omitempty"`
}

type UserIdType struct {
	SID string `xml:"t:SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress string `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	DistinguishedUser *DistinguishedUserType `xml:"t:DistinguishedUser,omitempty" json:"DistinguishedUser,omitempty"`

	ExternalUserIdentity string `xml:"t:ExternalUserIdentity,omitempty" json:"ExternalUserIdentity,omitempty"`
}

type ArrayOfPermissionsType struct {
	XMLName xml.Name `xml:"t:Permissions"`

	Permission *PermissionType `xml:"t:Permission,omitempty" json:"Permission,omitempty"`
}

type ArrayOfCalendarPermissionsType struct {
	XMLName xml.Name `xml:"t:CalendarPermissions"`

	CalendarPermission *CalendarPermissionType `xml:"t:CalendarPermission,omitempty" json:"CalendarPermission,omitempty"`
}

type ArrayOfUnknownEntriesType struct {
	UnknownEntry string `xml:"t:UnknownEntry,omitempty" json:"UnknownEntry,omitempty"`
}

type BasePermissionType struct {
	UserId *UserIdType `xml:"t:UserId,omitempty" json:"UserId,omitempty"`

	CanCreateItems bool `xml:"t:CanCreateItems,omitempty" json:"CanCreateItems,omitempty"`

	CanCreateSubFolders bool `xml:"t:CanCreateSubFolders,omitempty" json:"CanCreateSubFolders,omitempty"`

	IsFolderOwner bool `xml:"t:IsFolderOwner,omitempty" json:"IsFolderOwner,omitempty"`

	IsFolderVisible bool `xml:"t:IsFolderVisible,omitempty" json:"IsFolderVisible,omitempty"`

	IsFolderContact bool `xml:"t:IsFolderContact,omitempty" json:"IsFolderContact,omitempty"`

	EditItems *PermissionActionType `xml:"t:EditItems,omitempty" json:"EditItems,omitempty"`

	DeleteItems *PermissionActionType `xml:"t:DeleteItems,omitempty" json:"DeleteItems,omitempty"`
}

type PermissionType struct {
	XMLName xml.Name `xml:"t:Permission"`

	*BasePermissionType

	ReadItems *PermissionReadAccessType `xml:"t:ReadItems,omitempty" json:"ReadItems,omitempty"`

	PermissionLevel *PermissionLevelType `xml:"t:PermissionLevel,omitempty" json:"PermissionLevel,omitempty"`
}

type CalendarPermissionType struct {
	XMLName xml.Name `xml:"t:CalendarPermission"`

	*BasePermissionType

	ReadItems *CalendarPermissionReadAccessType `xml:"t:ReadItems,omitempty" json:"ReadItems,omitempty"`

	CalendarPermissionLevel *CalendarPermissionLevelType `xml:"t:CalendarPermissionLevel,omitempty" json:"CalendarPermissionLevel,omitempty"`
}

type PermissionSetType struct {
	Permissions *ArrayOfPermissionsType `xml:"t:Permissions,omitempty" json:"Permissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"t:UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type CalendarPermissionSetType struct {
	XMLName xml.Name `xml:"t:PermissionSet"`

	CalendarPermissions *ArrayOfCalendarPermissionsType `xml:"t:CalendarPermissions,omitempty" json:"CalendarPermissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"t:UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type EffectiveRightsType struct {
	CreateAssociated bool `xml:"t:CreateAssociated,omitempty" json:"CreateAssociated,omitempty"`

	CreateContents bool `xml:"t:CreateContents,omitempty" json:"CreateContents,omitempty"`

	CreateHierarchy bool `xml:"t:CreateHierarchy,omitempty" json:"CreateHierarchy,omitempty"`

	Delete bool `xml:"t:Delete,omitempty" json:"Delete,omitempty"`

	Modify bool `xml:"t:Modify,omitempty" json:"Modify,omitempty"`

	Read bool `xml:"t:Read,omitempty" json:"Read,omitempty"`

	ViewPrivateItems bool `xml:"t:ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type ArrayOfDelegateUserType struct {
	DelegateUser []*DelegateUserType `xml:"t:DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type ArrayOfUserIdType struct {
	UserId []*UserIdType `xml:"t:UserId,omitempty" json:"UserId,omitempty"`
}

type DelegateUserType struct {
	UserId *UserIdType `xml:"t:UserId,omitempty" json:"UserId,omitempty"`

	DelegatePermissions *DelegatePermissionsType `xml:"t:DelegatePermissions,omitempty" json:"DelegatePermissions,omitempty"`

	ReceiveCopiesOfMeetingMessages bool `xml:"t:ReceiveCopiesOfMeetingMessages,omitempty" json:"ReceiveCopiesOfMeetingMessages,omitempty"`

	ViewPrivateItems bool `xml:"t:ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type DelegatePermissionsType struct {
	XMLName xml.Name `xml:"t:DelegatePermissions"`

	CalendarFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:CalendarFolderPermissionLevel,omitempty" json:"CalendarFolderPermissionLevel,omitempty"`

	TasksFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:TasksFolderPermissionLevel,omitempty" json:"TasksFolderPermissionLevel,omitempty"`

	InboxFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:InboxFolderPermissionLevel,omitempty" json:"InboxFolderPermissionLevel,omitempty"`

	ContactsFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:ContactsFolderPermissionLevel,omitempty" json:"ContactsFolderPermissionLevel,omitempty"`

	NotesFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:NotesFolderPermissionLevel,omitempty" json:"NotesFolderPermissionLevel,omitempty"`

	JournalFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"t:JournalFolderPermissionLevel,omitempty" json:"JournalFolderPermissionLevel,omitempty"`
}

type ConflictResultsType struct {
	Count int32 `xml:"t:Count,omitempty" json:"Count,omitempty"`
}

type OutOfOfficeMailTip struct {
	XMLName xml.Name `xml:"t:OutOfOffice"`

	ReplyBody *ReplyBody `xml:"t:ReplyBody,omitempty" json:"ReplyBody,omitempty"`

	Duration *Duration `xml:"t:Duration,omitempty" json:"Duration,omitempty"`
}

type SmtpDomainList struct {
	Domain []*SmtpDomain `xml:"t:Domain,omitempty" json:"Domain,omitempty"`
}

type SmtpDomain struct {
	XMLName xml.Name `xml:"t:Domain"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	IncludeSubdomains bool `xml:"IncludeSubdomains,attr,omitempty" json:"IncludeSubdomains,omitempty"`
}

type MailTips struct {
	RecipientAddress *EmailAddressType `xml:"t:RecipientAddress,omitempty" json:"RecipientAddress,omitempty"`

	PendingMailTips *MailTipTypes `xml:"t:PendingMailTips,omitempty" json:"PendingMailTips,omitempty"`

	OutOfOffice *OutOfOfficeMailTip `xml:"t:OutOfOffice,omitempty" json:"OutOfOffice,omitempty"`

	MailboxFull bool `xml:"t:MailboxFull,omitempty" json:"MailboxFull,omitempty"`

	CustomMailTip string `xml:"t:CustomMailTip,omitempty" json:"CustomMailTip,omitempty"`

	TotalMemberCount int32 `xml:"t:TotalMemberCount,omitempty" json:"TotalMemberCount,omitempty"`

	ExternalMemberCount int32 `xml:"t:ExternalMemberCount,omitempty" json:"ExternalMemberCount,omitempty"`

	MaxMessageSize int32 `xml:"t:MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	DeliveryRestricted bool `xml:"t:DeliveryRestricted,omitempty" json:"DeliveryRestricted,omitempty"`

	IsModerated bool `xml:"t:IsModerated,omitempty" json:"IsModerated,omitempty"`

	InvalidRecipient bool `xml:"t:InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`

	Scope int32 `xml:"t:Scope,omitempty" json:"Scope,omitempty"`

	RecipientSuggestions *ArrayOfRecipientSuggestionsType `xml:"t:RecipientSuggestions,omitempty" json:"RecipientSuggestions,omitempty"`

	PreferAccessibleContent bool `xml:"t:PreferAccessibleContent,omitempty" json:"PreferAccessibleContent,omitempty"`
}

type ArrayOfRecipientSuggestionsType struct {
	XMLName xml.Name `xml:"t:RecipientSuggestions"`

	RecipientSuggestion *RecipientSuggestionType `xml:"t:RecipientSuggestion,omitempty" json:"RecipientSuggestion,omitempty"`
}

type RecipientSuggestionType struct {
	XMLName xml.Name `xml:"t:RecipientSuggestion"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ServiceConfiguration struct {
}

type MailTipsServiceConfiguration struct {
	XMLName xml.Name `xml:"t:MailTipsConfiguration"`

	*ServiceConfiguration

	MailTipsEnabled bool `xml:"t:MailTipsEnabled,omitempty" json:"MailTipsEnabled,omitempty"`

	MaxRecipientsPerGetMailTipsRequest int32 `xml:"t:MaxRecipientsPerGetMailTipsRequest,omitempty" json:"MaxRecipientsPerGetMailTipsRequest,omitempty"`

	MaxMessageSize int32 `xml:"t:MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	LargeAudienceThreshold int32 `xml:"t:LargeAudienceThreshold,omitempty" json:"LargeAudienceThreshold,omitempty"`

	ShowExternalRecipientCount bool `xml:"t:ShowExternalRecipientCount,omitempty" json:"ShowExternalRecipientCount,omitempty"`

	InternalDomains *SmtpDomainList `xml:"t:InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	PolicyTipsEnabled bool `xml:"t:PolicyTipsEnabled,omitempty" json:"PolicyTipsEnabled,omitempty"`

	LargeAudienceCap int32 `xml:"t:LargeAudienceCap,omitempty" json:"LargeAudienceCap,omitempty"`
}

type UnifiedMessageServiceConfiguration struct {
	XMLName xml.Name `xml:"t:UnifiedMessagingConfiguration"`

	*ServiceConfiguration

	UmEnabled bool `xml:"t:UmEnabled,omitempty" json:"UmEnabled,omitempty"`

	PlayOnPhoneDialString string `xml:"t:PlayOnPhoneDialString,omitempty" json:"PlayOnPhoneDialString,omitempty"`

	PlayOnPhoneEnabled bool `xml:"t:PlayOnPhoneEnabled,omitempty" json:"PlayOnPhoneEnabled,omitempty"`
}

type SharePointURLsServiceConfiguration struct {
	XMLName xml.Name `xml:"t:SharePointURLsConfiguration"`

	*ServiceConfiguration

	InternalSPMySiteHostURL string `xml:"t:InternalSPMySiteHostURL,omitempty" json:"InternalSPMySiteHostURL,omitempty"`

	ExternalSPMySiteHostURL string `xml:"t:ExternalSPMySiteHostURL,omitempty" json:"ExternalSPMySiteHostURL,omitempty"`
}

type OfficeIntegrationConfiguration struct {
	*ServiceConfiguration

	OfficeSidebarURL string `xml:"t:OfficeSidebarURL,omitempty" json:"OfficeSidebarURL,omitempty"`
}

type ConfigurationRequestDetailsType struct {
	XMLName xml.Name `xml:"t:ConfigurationRequestDetails"`
}

type ArrayOfSmtpAddressType struct {
	SmtpAddress *NonEmptyStringType `xml:"t:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfEncryptedSharedFolderDataType struct {
	XMLName xml.Name `xml:"t:EncryptedSharedFolderDataCollection"`

	EncryptedSharedFolderData *EncryptedSharedFolderDataType `xml:"t:EncryptedSharedFolderData,omitempty" json:"EncryptedSharedFolderData,omitempty"`
}

type EncryptedSharedFolderDataType struct {
	XMLName xml.Name `xml:"t:EncryptedSharedFolderData"`

	Token *EncryptedDataContainerType `xml:"t:Token,omitempty" json:"Token,omitempty"`

	Data *EncryptedDataContainerType `xml:"t:Data,omitempty" json:"Data,omitempty"`
}

type EncryptedDataContainerType struct {
	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfInvalidRecipientsType struct {
	XMLName xml.Name `xml:"t:InvalidRecipients"`

	InvalidRecipient *InvalidRecipientType `xml:"t:InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`
}

type InvalidRecipientType struct {
	XMLName xml.Name `xml:"t:InvalidRecipient"`

	SmtpAddress *NonEmptyStringType `xml:"t:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	ResponseCode *InvalidRecipientResponseCodeType `xml:"t:ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	MessageText string `xml:"t:MessageText,omitempty" json:"MessageText,omitempty"`
}

type AcceptSharingInvitationType struct {
	*ReferenceItemResponseType
}

type PhoneCallIdType struct {
	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type PhoneCallInformationType struct {
	XMLName xml.Name `xml:"t:PhoneCallInformation"`

	PhoneCallState *PhoneCallStateType `xml:"t:PhoneCallState,omitempty" json:"PhoneCallState,omitempty"`

	ConnectionFailureCause *ConnectionFailureCauseType `xml:"t:ConnectionFailureCause,omitempty" json:"ConnectionFailureCause,omitempty"`

	SIPResponseText string `xml:"t:SIPResponseText,omitempty" json:"SIPResponseText,omitempty"`

	SIPResponseCode int32 `xml:"t:SIPResponseCode,omitempty" json:"SIPResponseCode,omitempty"`
}

type UserConfigurationNameType struct {
	*TargetFolderIdType

	Name *NonEmptyStringType `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type UserConfigurationDictionaryObjectType struct {
	Type *UserConfigurationDictionaryObjectTypesType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	Value []string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type UserConfigurationDictionaryEntryType struct {
	XMLName xml.Name `xml:"t:DictionaryEntry"`

	DictionaryKey *UserConfigurationDictionaryObjectType `xml:"t:DictionaryKey,omitempty" json:"DictionaryKey,omitempty"`

	DictionaryValue *UserConfigurationDictionaryObjectType `xml:"t:DictionaryValue,omitempty" json:"DictionaryValue,omitempty"`
}

type UserConfigurationDictionaryType struct {
	XMLName xml.Name `xml:"t:Dictionary"`

	DictionaryEntry []*UserConfigurationDictionaryEntryType `xml:"t:DictionaryEntry,omitempty" json:"DictionaryEntry,omitempty"`
}

type UserConfigurationType struct {
	UserConfigurationName *UserConfigurationNameType `xml:"t:UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	Dictionary *UserConfigurationDictionaryType `xml:"t:Dictionary,omitempty" json:"Dictionary,omitempty"`

	XmlData []byte `xml:"t:XmlData,omitempty" json:"XmlData,omitempty"`

	BinaryData []byte `xml:"t:BinaryData,omitempty" json:"BinaryData,omitempty"`
}

type ProtectionRulesServiceConfiguration struct {
	XMLName xml.Name `xml:"t:ProtectionRulesConfiguration"`

	*ServiceConfiguration

	Rules *ArrayOfProtectionRulesType `xml:"t:Rules,omitempty" json:"Rules,omitempty"`

	InternalDomains *SmtpDomainList `xml:"t:InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	RefreshInterval int32 `xml:"RefreshInterval,attr,omitempty" json:"RefreshInterval,omitempty"`
}

type ArrayOfProtectionRulesType struct {
	XMLName xml.Name `xml:"t:Rules"`

	Rule []*ProtectionRuleType `xml:"t:Rule,omitempty" json:"Rule,omitempty"`
}

type ProtectionRuleType struct {
	XMLName xml.Name `xml:"t:Rule"`

	Condition *ProtectionRuleConditionType `xml:"t:Condition,omitempty" json:"Condition,omitempty"`

	Action *ProtectionRuleActionType `xml:"t:Action,omitempty" json:"Action,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	UserOverridable bool `xml:"UserOverridable,attr,omitempty" json:"UserOverridable,omitempty"`

	Priority int32 `xml:"Priority,attr,omitempty" json:"Priority,omitempty"`
}

type ProtectionRuleConditionType struct {
	XMLName xml.Name `xml:"t:Condition"`

	AllInternal *ProtectionRuleAllInternalType `xml:"t:AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"t:And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"t:RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"t:SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"t:True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleAndType struct {
	AllInternal *ProtectionRuleAllInternalType `xml:"t:AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"t:And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"t:RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"t:SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"t:True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleRecipientIsType struct {
	Value []*ProtectionRuleValueType `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleSenderDepartmentsType struct {
	Value []*ProtectionRuleValueType `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleActionType struct {
	XMLName xml.Name `xml:"t:Action"`

	Argument []*ProtectionRuleArgumentType `xml:"t:Argument,omitempty" json:"Argument,omitempty"`

	Name *ProtectionRuleActionKindType `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type ProtectionRuleArgumentType struct {
	XMLName xml.Name `xml:"t:Argument"`

	Value string `xml:"Value,attr,omitempty" json:"t:Value,omitempty"`
}

type PolicyNudgeRulesServiceConfiguration struct {
	XMLName xml.Name `xml:"t:PolicyNudgeRulesConfiguration"`

	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfFolderIdType struct {
	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`
}

type FindMessageTrackingSearchResultType struct {
	XMLName xml.Name `xml:"t:MessageTrackingSearchResult"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	Sender *EmailAddressType `xml:"t:Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"t:PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"t:Recipients,omitempty" json:"Recipients,omitempty"`

	SubmittedTime xsd.DateTime `xml:"t:SubmittedTime,omitempty" json:"SubmittedTime,omitempty"`

	MessageTrackingReportId *NonEmptyStringType `xml:"t:MessageTrackingReportId,omitempty" json:"MessageTrackingReportId,omitempty"`

	PreviousHopServer *NonEmptyStringType `xml:"t:PreviousHopServer,omitempty" json:"PreviousHopServer,omitempty"`

	FirstHopServer *NonEmptyStringType `xml:"t:FirstHopServer,omitempty" json:"FirstHopServer,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"t:Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfFindMessageTrackingSearchResultType struct {
	XMLName xml.Name `xml:"t:MessageTrackingSearchResults"`

	MessageTrackingSearchResult *FindMessageTrackingSearchResultType `xml:"t:MessageTrackingSearchResult,omitempty" json:"MessageTrackingSearchResult,omitempty"`
}

type RecipientTrackingEventType struct {
	XMLName xml.Name `xml:"t:RecipientTrackingEvent"`

	Date xsd.DateTime `xml:"t:Date,omitempty" json:"Date,omitempty"`

	Recipient *EmailAddressType `xml:"t:Recipient,omitempty" json:"Recipient,omitempty"`

	DeliveryStatus string `xml:"t:DeliveryStatus,omitempty" json:"DeliveryStatus,omitempty"`

	EventDescription string `xml:"t:EventDescription,omitempty" json:"EventDescription,omitempty"`

	EventData *ArrayOfStringsType `xml:"t:EventData,omitempty" json:"EventData,omitempty"`

	Server *NonEmptyStringType `xml:"t:Server,omitempty" json:"Server,omitempty"`

	InternalId *NonNegativeInteger `xml:"t:InternalId,omitempty" json:"InternalId,omitempty"`

	BccRecipient bool `xml:"t:BccRecipient,omitempty" json:"BccRecipient,omitempty"`

	HiddenRecipient bool `xml:"t:HiddenRecipient,omitempty" json:"HiddenRecipient,omitempty"`

	UniquePathId *NonEmptyStringType `xml:"t:UniquePathId,omitempty" json:"UniquePathId,omitempty"`

	RootAddress *NonEmptyStringType `xml:"t:RootAddress,omitempty" json:"RootAddress,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"t:Properties,omitempty" json:"Properties,omitempty"`
}

type MessageTrackingReportType struct {
	XMLName xml.Name `xml:"t:MessageTrackingReport"`

	Sender *EmailAddressType `xml:"t:Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"t:PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	SubmitTime xsd.DateTime `xml:"t:SubmitTime,omitempty" json:"SubmitTime,omitempty"`

	OriginalRecipients *ArrayOfEmailAddressesType `xml:"t:OriginalRecipients,omitempty" json:"OriginalRecipients,omitempty"`

	RecipientTrackingEvents *ArrayOfRecipientTrackingEventType `xml:"t:RecipientTrackingEvents,omitempty" json:"RecipientTrackingEvents,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"t:Properties,omitempty" json:"Properties,omitempty"`
}

type TrackingPropertyType struct {
	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfTrackingPropertiesType struct {
	TrackingPropertyType *TrackingPropertyType `xml:"t:TrackingPropertyType,omitempty" json:"TrackingPropertyType,omitempty"`
}

type ArrayOfArraysOfTrackingPropertiesType struct {
	ArrayOfTrackingPropertiesType *ArrayOfTrackingPropertiesType `xml:"t:ArrayOfTrackingPropertiesType,omitempty" json:"ArrayOfTrackingPropertiesType,omitempty"`
}

type ArrayOfRecipientTrackingEventType struct {
	XMLName xml.Name `xml:"t:RecipientTrackingEvents"`

	RecipientTrackingEvent *RecipientTrackingEventType `xml:"t:RecipientTrackingEvent,omitempty" json:"RecipientTrackingEvent,omitempty"`
}

type RulePredicateSizeRangeType struct {
	XMLName xml.Name `xml:"t:WithinSizeRange"`

	MinimumSize int32 `xml:"t:MinimumSize,omitempty" json:"MinimumSize,omitempty"`

	MaximumSize int32 `xml:"t:MaximumSize,omitempty" json:"MaximumSize,omitempty"`
}

type RulePredicateDateRangeType struct {
	XMLName xml.Name `xml:"t:WithinDateRange"`

	StartDateTime xsd.DateTime `xml:"t:StartDateTime,omitempty" json:"StartDateTime,omitempty"`

	EndDateTime xsd.DateTime `xml:"t:EndDateTime,omitempty" json:"EndDateTime,omitempty"`
}

type RulePredicatesType struct {
	Categories *ArrayOfStringsType `xml:"t:Categories,omitempty" json:"Categories,omitempty"`

	ContainsBodyStrings *ArrayOfStringsType `xml:"t:ContainsBodyStrings,omitempty" json:"ContainsBodyStrings,omitempty"`

	ContainsHeaderStrings *ArrayOfStringsType `xml:"t:ContainsHeaderStrings,omitempty" json:"ContainsHeaderStrings,omitempty"`

	ContainsRecipientStrings *ArrayOfStringsType `xml:"t:ContainsRecipientStrings,omitempty" json:"ContainsRecipientStrings,omitempty"`

	ContainsSenderStrings *ArrayOfStringsType `xml:"t:ContainsSenderStrings,omitempty" json:"ContainsSenderStrings,omitempty"`

	ContainsSubjectOrBodyStrings *ArrayOfStringsType `xml:"t:ContainsSubjectOrBodyStrings,omitempty" json:"ContainsSubjectOrBodyStrings,omitempty"`

	ContainsSubjectStrings *ArrayOfStringsType `xml:"t:ContainsSubjectStrings,omitempty" json:"ContainsSubjectStrings,omitempty"`

	FlaggedForAction *FlaggedForActionType `xml:"t:FlaggedForAction,omitempty" json:"FlaggedForAction,omitempty"`

	FromAddresses *ArrayOfEmailAddressesType `xml:"t:FromAddresses,omitempty" json:"FromAddresses,omitempty"`

	FromConnectedAccounts *ArrayOfStringsType `xml:"t:FromConnectedAccounts,omitempty" json:"FromConnectedAccounts,omitempty"`

	HasAttachments bool `xml:"t:HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	Importance *ImportanceChoicesType `xml:"t:Importance,omitempty" json:"Importance,omitempty"`

	IsApprovalRequest bool `xml:"t:IsApprovalRequest,omitempty" json:"IsApprovalRequest,omitempty"`

	IsAutomaticForward bool `xml:"t:IsAutomaticForward,omitempty" json:"IsAutomaticForward,omitempty"`

	IsAutomaticReply bool `xml:"t:IsAutomaticReply,omitempty" json:"IsAutomaticReply,omitempty"`

	IsEncrypted bool `xml:"t:IsEncrypted,omitempty" json:"IsEncrypted,omitempty"`

	IsMeetingRequest bool `xml:"t:IsMeetingRequest,omitempty" json:"IsMeetingRequest,omitempty"`

	IsMeetingResponse bool `xml:"t:IsMeetingResponse,omitempty" json:"IsMeetingResponse,omitempty"`

	IsNDR bool `xml:"t:IsNDR,omitempty" json:"IsNDR,omitempty"`

	IsPermissionControlled bool `xml:"t:IsPermissionControlled,omitempty" json:"IsPermissionControlled,omitempty"`

	IsReadReceipt bool `xml:"t:IsReadReceipt,omitempty" json:"IsReadReceipt,omitempty"`

	IsSigned bool `xml:"t:IsSigned,omitempty" json:"IsSigned,omitempty"`

	IsVoicemail bool `xml:"t:IsVoicemail,omitempty" json:"IsVoicemail,omitempty"`

	ItemClasses *ArrayOfStringsType `xml:"t:ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	MessageClassifications *ArrayOfStringsType `xml:"t:MessageClassifications,omitempty" json:"MessageClassifications,omitempty"`

	NotSentToMe bool `xml:"t:NotSentToMe,omitempty" json:"NotSentToMe,omitempty"`

	SentCcMe bool `xml:"t:SentCcMe,omitempty" json:"SentCcMe,omitempty"`

	SentOnlyToMe bool `xml:"t:SentOnlyToMe,omitempty" json:"SentOnlyToMe,omitempty"`

	SentToAddresses *ArrayOfEmailAddressesType `xml:"t:SentToAddresses,omitempty" json:"SentToAddresses,omitempty"`

	SentToMe bool `xml:"t:SentToMe,omitempty" json:"SentToMe,omitempty"`

	SentToOrCcMe bool `xml:"t:SentToOrCcMe,omitempty" json:"SentToOrCcMe,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"t:Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	WithinDateRange *RulePredicateDateRangeType `xml:"t:WithinDateRange,omitempty" json:"WithinDateRange,omitempty"`

	WithinSizeRange *RulePredicateSizeRangeType `xml:"t:WithinSizeRange,omitempty" json:"WithinSizeRange,omitempty"`
}

type RuleActionsType struct {
	XMLName xml.Name `xml:"t:Actions"`

	AssignCategories *ArrayOfStringsType `xml:"t:AssignCategories,omitempty" json:"AssignCategories,omitempty"`

	CopyToFolder *TargetFolderIdType `xml:"t:CopyToFolder,omitempty" json:"CopyToFolder,omitempty"`

	Delete bool `xml:"t:Delete,omitempty" json:"Delete,omitempty"`

	ForwardAsAttachmentToRecipients *ArrayOfEmailAddressesType `xml:"t:ForwardAsAttachmentToRecipients,omitempty" json:"ForwardAsAttachmentToRecipients,omitempty"`

	ForwardToRecipients *ArrayOfEmailAddressesType `xml:"t:ForwardToRecipients,omitempty" json:"ForwardToRecipients,omitempty"`

	MarkImportance *ImportanceChoicesType `xml:"t:MarkImportance,omitempty" json:"MarkImportance,omitempty"`

	MarkAsRead bool `xml:"t:MarkAsRead,omitempty" json:"MarkAsRead,omitempty"`

	MoveToFolder *TargetFolderIdType `xml:"t:MoveToFolder,omitempty" json:"MoveToFolder,omitempty"`

	PermanentDelete bool `xml:"t:PermanentDelete,omitempty" json:"PermanentDelete,omitempty"`

	RedirectToRecipients *ArrayOfEmailAddressesType `xml:"t:RedirectToRecipients,omitempty" json:"RedirectToRecipients,omitempty"`

	SendSMSAlertToRecipients *ArrayOfEmailAddressesType `xml:"t:SendSMSAlertToRecipients,omitempty" json:"SendSMSAlertToRecipients,omitempty"`

	ServerReplyWithMessage *ItemIdType `xml:"t:ServerReplyWithMessage,omitempty" json:"ServerReplyWithMessage,omitempty"`

	StopProcessingRules bool `xml:"t:StopProcessingRules,omitempty" json:"StopProcessingRules,omitempty"`
}

type RuleType struct {
	RuleId string `xml:"t:RuleId,omitempty" json:"RuleId,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	Priority int32 `xml:"t:Priority,omitempty" json:"Priority,omitempty"`

	IsEnabled bool `xml:"t:IsEnabled,omitempty" json:"IsEnabled,omitempty"`

	IsNotSupported bool `xml:"t:IsNotSupported,omitempty" json:"IsNotSupported,omitempty"`

	IsInError bool `xml:"t:IsInError,omitempty" json:"IsInError,omitempty"`

	Conditions *RulePredicatesType `xml:"t:Conditions,omitempty" json:"Conditions,omitempty"`

	Exceptions *RulePredicatesType `xml:"t:Exceptions,omitempty" json:"Exceptions,omitempty"`

	Actions *RuleActionsType `xml:"t:Actions,omitempty" json:"Actions,omitempty"`
}

type ArrayOfRulesType struct {
	XMLName xml.Name `xml:"t:InboxRules"`

	Rule []*RuleType `xml:"t:Rule,omitempty" json:"Rule,omitempty"`
}

type RuleValidationErrorType struct {
	XMLName xml.Name `xml:"t:Error"`

	FieldURI *RuleFieldURIType `xml:"t:FieldURI,omitempty" json:"FieldURI,omitempty"`

	ErrorCode *RuleValidationErrorCodeType `xml:"t:ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage string `xml:"t:ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	FieldValue string `xml:"t:FieldValue,omitempty" json:"FieldValue,omitempty"`
}

type ArrayOfRuleValidationErrorsType struct {
	XMLName xml.Name `xml:"t:ValidationErrors"`

	Error []*RuleValidationErrorType `xml:"t:Error,omitempty" json:"Error,omitempty"`
}

type RuleOperationType struct {
}

type ArrayOfRuleOperationsType struct {
	XMLName xml.Name `xml:"t:Operations"`

	CreateRuleOperation *CreateRuleOperationType `xml:"t:CreateRuleOperation,omitempty" json:"CreateRuleOperation,omitempty"`

	SetRuleOperation *SetRuleOperationType `xml:"t:SetRuleOperation,omitempty" json:"SetRuleOperation,omitempty"`

	DeleteRuleOperation *DeleteRuleOperationType `xml:"t:DeleteRuleOperation,omitempty" json:"DeleteRuleOperation,omitempty"`
}

type CreateRuleOperationType struct {
	XMLName xml.Name `xml:"t:CreateRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"t:Rule,omitempty" json:"Rule,omitempty"`
}

type SetRuleOperationType struct {
	XMLName xml.Name `xml:"t:SetRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"t:Rule,omitempty" json:"Rule,omitempty"`
}

type DeleteRuleOperationType struct {
	XMLName xml.Name `xml:"t:DeleteRuleOperation"`

	*RuleOperationType

	RuleId string `xml:"t:RuleId,omitempty" json:"RuleId,omitempty"`
}

type RuleOperationErrorType struct {
	XMLName xml.Name `xml:"t:RuleOperationError"`

	OperationIndex int32 `xml:"t:OperationIndex,omitempty" json:"OperationIndex,omitempty"`

	ValidationErrors *ArrayOfRuleValidationErrorsType `xml:"t:ValidationErrors,omitempty" json:"ValidationErrors,omitempty"`
}

type ArrayOfRuleOperationErrorsType struct {
	XMLName xml.Name `xml:"t:RuleOperationErrors"`

	RuleOperationError []*RuleOperationErrorType `xml:"t:RuleOperationError,omitempty" json:"RuleOperationError,omitempty"`
}

type ArrayOfSearchItemKindsType struct {
	XMLName xml.Name `xml:"t:MessageTypes"`

	SearchItemKind []*SearchItemKindType `xml:"t:SearchItemKind,omitempty" json:"SearchItemKind,omitempty"`
}

type UserMailboxType struct {
	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	IsArchive bool `xml:"IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfUserMailboxesType struct {
	XMLName xml.Name `xml:"t:Mailboxes"`

	UserMailbox []*UserMailboxType `xml:"t:UserMailbox,omitempty" json:"UserMailbox,omitempty"`
}

type SearchableMailboxType struct {
	XMLName xml.Name `xml:"t:SearchableMailbox"`

	Guid *GuidType `xml:"t:Guid,omitempty" json:"Guid,omitempty"`

	PrimarySmtpAddress string `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	IsExternalMailbox bool `xml:"t:IsExternalMailbox,omitempty" json:"IsExternalMailbox,omitempty"`

	ExternalEmailAddress string `xml:"t:ExternalEmailAddress,omitempty" json:"ExternalEmailAddress,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsMembershipGroup bool `xml:"t:IsMembershipGroup,omitempty" json:"IsMembershipGroup,omitempty"`

	ReferenceId string `xml:"t:ReferenceId,omitempty" json:"ReferenceId,omitempty"`
}

type ArrayOfSearchableMailboxesType struct {
	SearchableMailbox []*SearchableMailboxType `xml:"t:SearchableMailbox,omitempty" json:"SearchableMailbox,omitempty"`
}

type KeywordStatisticsSearchResultType struct {
	Keyword string `xml:"t:Keyword,omitempty" json:"Keyword,omitempty"`

	ItemHits int32 `xml:"t:ItemHits,omitempty" json:"ItemHits,omitempty"`

	Size int64 `xml:"t:Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfKeywordStatisticsSearchResultsType struct {
	XMLName xml.Name `xml:"t:KeywordStats"`

	KeywordStat []*KeywordStatisticsSearchResultType `xml:"t:KeywordStat,omitempty" json:"KeywordStat,omitempty"`
}

type MailboxStatisticsSearchResultType struct {
	XMLName xml.Name `xml:"t:MailboxStatisticsSearchResult"`

	UserMailbox *UserMailboxType `xml:"t:UserMailbox,omitempty" json:"UserMailbox,omitempty"`

	KeywordStatisticsSearchResult *KeywordStatisticsSearchResultType `xml:"t:KeywordStatisticsSearchResult,omitempty" json:"KeywordStatisticsSearchResult,omitempty"`
}

type ExtendedAttributeType struct {
	XMLName xml.Name `xml:"t:ExtendedAttribute"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfExtendedAttributesType struct {
	XMLName xml.Name `xml:"t:ExtendedAttributes"`

	ExtendedAttribute []*ExtendedAttributeType `xml:"t:ExtendedAttribute,omitempty" json:"ExtendedAttribute,omitempty"`
}

type MailboxSearchScopeType struct {
	XMLName xml.Name `xml:"t:MailboxSearchScope"`

	Mailbox string `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	SearchScope *MailboxSearchLocationType `xml:"t:SearchScope,omitempty" json:"SearchScope,omitempty"`

	ExtendedAttributes *ArrayOfExtendedAttributesType `xml:"t:ExtendedAttributes,omitempty" json:"ExtendedAttributes,omitempty"`
}

type NonEmptyArrayOfMailboxSearchScopesType struct {
	XMLName xml.Name `xml:"t:MailboxSearchScopes"`

	MailboxSearchScope []*MailboxSearchScopeType `xml:"t:MailboxSearchScope,omitempty" json:"MailboxSearchScope,omitempty"`
}

type MailboxQueryType struct {
	XMLName xml.Name `xml:"t:MailboxQuery"`

	Query string `xml:"t:Query,omitempty" json:"Query,omitempty"`

	MailboxSearchScopes *NonEmptyArrayOfMailboxSearchScopesType `xml:"t:MailboxSearchScopes,omitempty" json:"MailboxSearchScopes,omitempty"`
}

type PreviewItemMailboxType struct {
	XMLName xml.Name `xml:"t:Mailbox"`

	MailboxId string `xml:"t:MailboxId,omitempty" json:"MailboxId,omitempty"`

	PrimarySmtpAddress string `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type NonEmptyArrayOfMailboxQueriesType struct {
	MailboxQuery []*MailboxQueryType `xml:"t:MailboxQuery,omitempty" json:"MailboxQuery,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIsType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"t:ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type PreviewItemResponseShapeType struct {
	XMLName xml.Name `xml:"t:PreviewItemResponseShape"`

	BaseShape *PreviewItemBaseShapeType `xml:"t:BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfExtendedFieldURIsType `xml:"t:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type SearchPreviewItemType struct {
	XMLName xml.Name `xml:"t:SearchPreviewItem"`

	Id *ItemIdType `xml:"t:Id,omitempty" json:"Id,omitempty"`

	Mailbox *PreviewItemMailboxType `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	ParentId *ItemIdType `xml:"t:ParentId,omitempty" json:"ParentId,omitempty"`

	ItemClass *ItemClassType `xml:"t:ItemClass,omitempty" json:"ItemClass,omitempty"`

	UniqueHash string `xml:"t:UniqueHash,omitempty" json:"UniqueHash,omitempty"`

	SortValue string `xml:"t:SortValue,omitempty" json:"SortValue,omitempty"`

	OwaLink string `xml:"t:OwaLink,omitempty" json:"OwaLink,omitempty"`

	Sender string `xml:"t:Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfSmtpAddressType `xml:"t:ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfSmtpAddressType `xml:"t:CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfSmtpAddressType `xml:"t:BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	CreatedTime xsd.DateTime `xml:"t:CreatedTime,omitempty" json:"CreatedTime,omitempty"`

	ReceivedTime xsd.DateTime `xml:"t:ReceivedTime,omitempty" json:"ReceivedTime,omitempty"`

	SentTime xsd.DateTime `xml:"t:SentTime,omitempty" json:"SentTime,omitempty"`

	Subject string `xml:"t:Subject,omitempty" json:"Subject,omitempty"`

	Size int64 `xml:"t:Size,omitempty" json:"Size,omitempty"`

	Preview string `xml:"t:Preview,omitempty" json:"Preview,omitempty"`

	Importance *ImportanceChoicesType `xml:"t:Importance,omitempty" json:"Importance,omitempty"`

	Read bool `xml:"t:Read,omitempty" json:"Read,omitempty"`

	HasAttachment bool `xml:"t:HasAttachment,omitempty" json:"HasAttachment,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"t:ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type ArrayOfSearchPreviewItemsType struct {
	XMLName xml.Name `xml:"t:Items"`

	SearchPreviewItem []*SearchPreviewItemType `xml:"t:SearchPreviewItem,omitempty" json:"SearchPreviewItem,omitempty"`
}

type FailedSearchMailboxType struct {
	XMLName xml.Name `xml:"t:FailedMailbox"`

	Mailbox string `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	ErrorCode int32 `xml:"t:ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage string `xml:"t:ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	IsArchive bool `xml:"t:IsArchive,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfFailedSearchMailboxesType struct {
	FailedMailbox []*FailedSearchMailboxType `xml:"t:FailedMailbox,omitempty" json:"FailedMailbox,omitempty"`
}

type SearchMailboxesResultType struct {
	XMLName xml.Name `xml:"t:SearchMailboxesResult"`

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"t:SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"t:ResultType,omitempty" json:"ResultType,omitempty"`

	ItemCount int64 `xml:"t:ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size int64 `xml:"t:Size,omitempty" json:"Size,omitempty"`

	PageItemCount int32 `xml:"t:PageItemCount,omitempty" json:"PageItemCount,omitempty"`

	PageItemSize int64 `xml:"t:PageItemSize,omitempty" json:"PageItemSize,omitempty"`

	KeywordStats *ArrayOfKeywordStatisticsSearchResultsType `xml:"t:KeywordStats,omitempty" json:"KeywordStats,omitempty"`

	Items *ArrayOfSearchPreviewItemsType `xml:"t:Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"t:FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`

	Refiners *ArrayOfSearchRefinerItemsType `xml:"t:Refiners,omitempty" json:"Refiners,omitempty"`

	MailboxStats *ArrayOfMailboxStatisticsItemsType `xml:"t:MailboxStats,omitempty" json:"MailboxStats,omitempty"`
}

type SearchRefinerItemType struct {
	XMLName xml.Name `xml:"t:Refiner"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`

	Count int64 `xml:"t:Count,omitempty" json:"Count,omitempty"`

	Token string `xml:"t:Token,omitempty" json:"Token,omitempty"`
}

type ArrayOfSearchRefinerItemsType struct {
	XMLName xml.Name `xml:"t:Refiners"`

	Refiner []*SearchRefinerItemType `xml:"t:Refiner,omitempty" json:"Refiner,omitempty"`
}

type OneDriveItemType struct {
	*ItemType

	ResourceId string `xml:"t:ResourceId,omitempty" json:"ResourceId,omitempty"`
}

type FileItemType struct {
	*ItemType

	FileName string `xml:"t:FileName,omitempty" json:"FileName,omitempty"`

	FileExtension string `xml:"t:FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileSize int64 `xml:"t:FileSize,omitempty" json:"FileSize,omitempty"`

	FileCreatedTime string `xml:"t:FileCreatedTime,omitempty" json:"FileCreatedTime,omitempty"`

	FileModifiedTime string `xml:"t:FileModifiedTime,omitempty" json:"FileModifiedTime,omitempty"`

	StorageProviderContext string `xml:"t:StorageProviderContext,omitempty" json:"StorageProviderContext,omitempty"`

	FileID string `xml:"t:FileID,omitempty" json:"FileID,omitempty"`

	ItemReferenceId string `xml:"t:ItemReferenceId,omitempty" json:"ItemReferenceId,omitempty"`

	ReferenceId string `xml:"t:ReferenceId,omitempty" json:"ReferenceId,omitempty"`

	Sender string `xml:"t:Sender,omitempty" json:"Sender,omitempty"`

	ItemReceivedTime string `xml:"t:ItemReceivedTime,omitempty" json:"ItemReceivedTime,omitempty"`

	ItemPath string `xml:"t:ItemPath,omitempty" json:"ItemPath,omitempty"`

	ItemSentTime string `xml:"t:ItemSentTime,omitempty" json:"ItemSentTime,omitempty"`

	FileContexts *ArrayOfStringsType `xml:"t:FileContexts,omitempty" json:"FileContexts,omitempty"`

	VisualizationContainerUrl string `xml:"t:VisualizationContainerUrl,omitempty" json:"VisualizationContainerUrl,omitempty"`

	VisualizationContainerTitle string `xml:"t:VisualizationContainerTitle,omitempty" json:"VisualizationContainerTitle,omitempty"`

	VisualizationAccessUrl string `xml:"t:VisualizationAccessUrl,omitempty" json:"VisualizationAccessUrl,omitempty"`

	ReferenceAttachmentProviderEndpoint string `xml:"t:ReferenceAttachmentProviderEndpoint,omitempty" json:"ReferenceAttachmentProviderEndpoint,omitempty"`

	ReferenceAttachmentProviderType string `xml:"t:ReferenceAttachmentProviderType,omitempty" json:"ReferenceAttachmentProviderType,omitempty"`

	ItemConversationId string `xml:"t:ItemConversationId,omitempty" json:"ItemConversationId,omitempty"`

	SharepointItemListId *GuidType `xml:"t:SharepointItemListId,omitempty" json:"SharepointItemListId,omitempty"`

	SharepointItemListItemId string `xml:"t:SharepointItemListItemId,omitempty" json:"SharepointItemListItemId,omitempty"`

	SharepointItemSiteId *GuidType `xml:"t:SharepointItemSiteId,omitempty" json:"SharepointItemSiteId,omitempty"`

	SharepointItemSitePath string `xml:"t:SharepointItemSitePath,omitempty" json:"SharepointItemSitePath,omitempty"`

	SharepointItemWebId *GuidType `xml:"t:SharepointItemWebId,omitempty" json:"SharepointItemWebId,omitempty"`

	AttachmentId string `xml:"t:AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type DocumentFileItemType struct {
	*FileItemType

	Author *ArrayOfStringsType `xml:"t:Author,omitempty" json:"Author,omitempty"`

	Title string `xml:"t:Title,omitempty" json:"Title,omitempty"`

	LastModifiedBy string `xml:"t:LastModifiedBy,omitempty" json:"LastModifiedBy,omitempty"`
}

type DelveItemType struct {
	*ItemType

	GraphNodeLogicalId string `xml:"t:GraphNodeLogicalId,omitempty" json:"GraphNodeLogicalId,omitempty"`
}

type MailboxStatisticsItemType struct {
	XMLName xml.Name `xml:"t:MailboxStat"`

	MailboxId string `xml:"t:MailboxId,omitempty" json:"MailboxId,omitempty"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	ItemCount int64 `xml:"t:ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size int64 `xml:"t:Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfMailboxStatisticsItemsType struct {
	XMLName xml.Name `xml:"t:MailboxStats"`

	MailboxStat []*MailboxStatisticsItemType `xml:"t:MailboxStat,omitempty" json:"MailboxStat,omitempty"`
}

type MailboxHoldStatusType struct {
	XMLName xml.Name `xml:"t:MailboxHoldStatus"`

	Mailbox string `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *HoldStatusType `xml:"t:Status,omitempty" json:"Status,omitempty"`

	AdditionalInfo string `xml:"t:AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfMailboxHoldStatusType struct {
	XMLName xml.Name `xml:"t:MailboxHoldStatuses"`

	MailboxHoldStatus []*MailboxHoldStatusType `xml:"t:MailboxHoldStatus,omitempty" json:"MailboxHoldStatus,omitempty"`
}

type MailboxHoldResultType struct {
	HoldId string `xml:"t:HoldId,omitempty" json:"HoldId,omitempty"`

	Query string `xml:"t:Query,omitempty" json:"Query,omitempty"`

	MailboxHoldStatuses *ArrayOfMailboxHoldStatusType `xml:"t:MailboxHoldStatuses,omitempty" json:"MailboxHoldStatuses,omitempty"`
}

type NonEmptyArrayOfLegacyDNsType struct {
	LegacyDN []string `xml:"t:LegacyDN,omitempty" json:"LegacyDN,omitempty"`
}

type NonIndexableItemStatisticType struct {
	XMLName xml.Name `xml:"t:NonIndexableItemStatistic"`

	Mailbox string `xml:"t:Mailbox,omitempty" json:"Mailbox,omitempty"`

	ItemCount int64 `xml:"t:ItemCount,omitempty" json:"ItemCount,omitempty"`

	ErrorMessage string `xml:"t:ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`
}

type ArrayOfNonIndexableItemStatisticsType struct {
	XMLName xml.Name `xml:"t:NonIndexableItemStatistics"`

	NonIndexableItemStatistic []*NonIndexableItemStatisticType `xml:"t:NonIndexableItemStatistic,omitempty" json:"NonIndexableItemStatistic,omitempty"`
}

type NonIndexableItemDetailType struct {
	XMLName xml.Name `xml:"t:NonIndexableItemDetail"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	ErrorCode *ItemIndexErrorType `xml:"t:ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorDescription string `xml:"t:ErrorDescription,omitempty" json:"ErrorDescription,omitempty"`

	IsPartiallyIndexed bool `xml:"t:IsPartiallyIndexed,omitempty" json:"IsPartiallyIndexed,omitempty"`

	IsPermanentFailure bool `xml:"t:IsPermanentFailure,omitempty" json:"IsPermanentFailure,omitempty"`

	SortValue string `xml:"t:SortValue,omitempty" json:"SortValue,omitempty"`

	AttemptCount int32 `xml:"t:AttemptCount,omitempty" json:"AttemptCount,omitempty"`

	LastAttemptTime xsd.DateTime `xml:"t:LastAttemptTime,omitempty" json:"LastAttemptTime,omitempty"`

	AdditionalInfo string `xml:"t:AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfNonIndexableItemDetailsType struct {
	XMLName xml.Name `xml:"t:Items"`

	NonIndexableItemDetail []*NonIndexableItemDetailType `xml:"t:NonIndexableItemDetail,omitempty" json:"NonIndexableItemDetail,omitempty"`
}

type NonIndexableItemDetailResultType struct {
	XMLName xml.Name `xml:"t:NonIndexableItemDetailsResult"`

	Items *ArrayOfNonIndexableItemDetailsType `xml:"t:Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"t:FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type DiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"t:DiscoverySearchConfiguration"`

	SearchId string `xml:"t:SearchId,omitempty" json:"SearchId,omitempty"`

	SearchQuery string `xml:"t:SearchQuery,omitempty" json:"SearchQuery,omitempty"`

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"t:SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	InPlaceHoldIdentity string `xml:"t:InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ManagedByOrganization string `xml:"t:ManagedByOrganization,omitempty" json:"ManagedByOrganization,omitempty"`

	Language string `xml:"t:Language,omitempty" json:"Language,omitempty"`
}

type ArrayOfDiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"t:DiscoverySearchConfigurations"`

	DiscoverySearchConfiguration []*DiscoverySearchConfigurationType `xml:"t:DiscoverySearchConfiguration,omitempty" json:"DiscoverySearchConfiguration,omitempty"`
}

type RetentionTagType struct {
	Value *GuidType `xml:",chardata" json:"-,"`

	IsExplicit bool `xml:"IsExplicit,attr,omitempty" json:"IsExplicit,omitempty"`
}

type RetentionPolicyTagType struct {
	XMLName xml.Name `xml:"t:RetentionPolicyTag"`

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	RetentionId *GuidType `xml:"t:RetentionId,omitempty" json:"RetentionId,omitempty"`

	RetentionPeriod int32 `xml:"t:RetentionPeriod,omitempty" json:"RetentionPeriod,omitempty"`

	Type *ElcFolderType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	RetentionAction *RetentionActionType `xml:"t:RetentionAction,omitempty" json:"RetentionAction,omitempty"`

	Description string `xml:"t:Description,omitempty" json:"Description,omitempty"`

	IsVisible bool `xml:"t:IsVisible,omitempty" json:"IsVisible,omitempty"`

	OptedInto bool `xml:"t:OptedInto,omitempty" json:"OptedInto,omitempty"`

	IsArchive bool `xml:"t:IsArchive,omitempty" json:"IsArchive,omitempty"`

	ParentLabelIdentity string `xml:"t:ParentLabelIdentity,omitempty" json:"ParentLabelIdentity,omitempty"`

	Priority int32 `xml:"t:Priority,omitempty" json:"Priority,omitempty"`
}

type ArrayOfRetentionPolicyTagsType struct {
	XMLName xml.Name `xml:"t:RetentionPolicyTags"`

	RetentionPolicyTag []*RetentionPolicyTagType `xml:"t:RetentionPolicyTag,omitempty" json:"RetentionPolicyTag,omitempty"`
}

type ClientExtensionType struct {
	SpecificUsers *ArrayOfStringsType `xml:"t:SpecificUsers,omitempty" json:"SpecificUsers,omitempty"`

	Manifest []byte `xml:"t:Manifest,omitempty" json:"Manifest,omitempty"`

	IsAvailable bool `xml:"IsAvailable,attr,omitempty" json:"IsAvailable,omitempty"`

	IsMandatory bool `xml:"IsMandatory,attr,omitempty" json:"IsMandatory,omitempty"`

	IsEnabledByDefault bool `xml:"IsEnabledByDefault,attr,omitempty" json:"IsEnabledByDefault,omitempty"`

	ProvidedTo *ClientExtensionProvidedToType `xml:"ProvidedTo,attr,omitempty" json:"ProvidedTo,omitempty"`

	Type *ClientExtensionTypeType `xml:"Type,attr,omitempty" json:"Type,omitempty"`

	Scope *ClientExtensionScopeType `xml:"Scope,attr,omitempty" json:"Scope,omitempty"`

	MarketplaceAssetId string `xml:"MarketplaceAssetId,attr,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket string `xml:"MarketplaceContentMarket,attr,omitempty" json:"MarketplaceContentMarket,omitempty"`

	AppStatus string `xml:"AppStatus,attr,omitempty" json:"AppStatus,omitempty"`

	Etoken string `xml:"Etoken,attr,omitempty" json:"Etoken,omitempty"`

	InstalledDateTime string `xml:"InstalledDateTime,attr,omitempty" json:"InstalledDateTime,omitempty"`
}

type ImGroupType struct {
	DisplayName *NonEmptyStringType `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupType *NonEmptyStringType `xml:"t:GroupType,omitempty" json:"GroupType,omitempty"`

	ExchangeStoreId *ItemIdType `xml:"t:ExchangeStoreId,omitempty" json:"ExchangeStoreId,omitempty"`

	MemberCorrelationKey *NonEmptyArrayOfItemIdsType `xml:"t:MemberCorrelationKey,omitempty" json:"MemberCorrelationKey,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"t:ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	SmtpAddress string `xml:"t:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfImGroupType struct {
	XMLName xml.Name `xml:"t:Groups"`

	ImGroup *ImGroupType `xml:"t:ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type ImItemListType struct {
	Groups *ArrayOfImGroupType `xml:"t:Groups,omitempty" json:"Groups,omitempty"`

	Personas *ArrayOfPeopleType `xml:"t:Personas,omitempty" json:"Personas,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIs struct {
	ExtendedProperty *PathToExtendedFieldType `xml:"t:ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type NonEmptyStateDefinitionType struct {
	DeletedOccurrenceStateDefinition *DeletedOccurrenceStateDefinitionType `xml:"t:DeletedOccurrenceStateDefinition,omitempty" json:"DeletedOccurrenceStateDefinition,omitempty"`

	DeleteFromFolderStateDefinition *DeleteFromFolderStateDefinitionType `xml:"t:DeleteFromFolderStateDefinition,omitempty" json:"DeleteFromFolderStateDefinition,omitempty"`

	LocationBasedStateDefinition *LocationBasedStateDefinitionType `xml:"t:LocationBasedStateDefinition,omitempty" json:"LocationBasedStateDefinition,omitempty"`
}

type BaseCalendarItemStateDefinitionType struct {
}

type DeletedOccurrenceStateDefinitionType struct {
	XMLName xml.Name `xml:"t:DeletedOccurrenceStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OccurrenceDate xsd.DateTime `xml:"t:OccurrenceDate,omitempty" json:"OccurrenceDate,omitempty"`

	IsOccurrencePresent bool `xml:"t:IsOccurrencePresent,omitempty" json:"IsOccurrencePresent,omitempty"`
}

type DeleteFromFolderStateDefinitionType struct {
	XMLName xml.Name `xml:"t:DeleteFromFolderStateDefinition"`

	*BaseCalendarItemStateDefinitionType
}

type LocationBasedStateDefinitionType struct {
	XMLName xml.Name `xml:"t:LocationBasedStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OrganizerLocation string `xml:"t:OrganizerLocation,omitempty" json:"OrganizerLocation,omitempty"`

	AttendeeLocation string `xml:"t:AttendeeLocation,omitempty" json:"AttendeeLocation,omitempty"`
}

type MeetingSpaceType struct {
	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"t:ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Type *MeetingSpaceTypeEnum `xml:"t:Type,omitempty" json:"Type,omitempty"`

	Version string `xml:"t:Version,omitempty" json:"Version,omitempty"`

	JoinUrl string `xml:"t:JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated string `xml:"t:DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified string `xml:"t:DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	ExpiryTime string `xml:"t:ExpiryTime,omitempty" json:"ExpiryTime,omitempty"`

	Meadata string `xml:"t:Meadata,omitempty" json:"Meadata,omitempty"`

	Tag string `xml:"t:Tag,omitempty" json:"Tag,omitempty"`
}

type ParticipantActivity struct {
	Id *GuidType `xml:"t:Id,omitempty" json:"Id,omitempty"`

	CreatedBy string `xml:"t:CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	StartTime string `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime string `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`

	ClientVersion string `xml:"t:ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	Role *ParticipantActivityRole `xml:"t:Role,omitempty" json:"Role,omitempty"`

	MediaType *ParticipantActivityMediaType `xml:"t:MediaType,omitempty" json:"MediaType,omitempty"`

	MediaDetails string `xml:"t:MediaDetails,omitempty" json:"MediaDetails,omitempty"`
}

type NonEmptyArrayOfParticipantActivities struct {
	ParticipantActivity []*ParticipantActivity `xml:"t:ParticipantActivity,omitempty" json:"ParticipantActivity,omitempty"`
}

type ContentActivity struct {
	Id *GuidType `xml:"t:Id,omitempty" json:"Id,omitempty"`

	SharedBy string `xml:"t:SharedBy,omitempty" json:"SharedBy,omitempty"`

	ContentLocation string `xml:"t:ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	StartTime string `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime string `xml:"t:EndTime,omitempty" json:"EndTime,omitempty"`

	Type *ContentActivityType `xml:"t:Type,omitempty" json:"Type,omitempty"`

	MediaType *ContentActivityMediaType `xml:"t:MediaType,omitempty" json:"MediaType,omitempty"`

	Acl *ContentActivityAcl `xml:"t:Acl,omitempty" json:"Acl,omitempty"`
}

type NonEmptyArrayOfContentActivities struct {
	ContentActivity []*ContentActivity `xml:"t:ContentActivity,omitempty" json:"ContentActivity,omitempty"`
}

type MeetingInstanceType struct {
	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"t:ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Version string `xml:"t:Version,omitempty" json:"Version,omitempty"`

	JoinUrl string `xml:"t:JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated string `xml:"t:DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified string `xml:"t:DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	Meadata string `xml:"t:Meadata,omitempty" json:"Meadata,omitempty"`

	Tag string `xml:"t:Tag,omitempty" json:"Tag,omitempty"`

	ParentGoid string `xml:"t:ParentGoid,omitempty" json:"ParentGoid,omitempty"`

	ParticipantActivities *NonEmptyArrayOfParticipantActivities `xml:"t:ParticipantActivities,omitempty" json:"ParticipantActivities,omitempty"`

	ContentActivities *NonEmptyArrayOfContentActivities `xml:"t:ContentActivities,omitempty" json:"ContentActivities,omitempty"`
}

type SearchFolderScopeType struct {
	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`

	WellKnownFolder *DistinguishedFolderIdType `xml:"t:WellKnownFolder,omitempty" json:"WellKnownFolder,omitempty"`
}

type PrimaryMailboxSearchScopeType struct {
	XMLName xml.Name `xml:"t:PrimaryMailboxSearchScope"`

	FolderScope *SearchFolderScopeType `xml:"t:FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"t:IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type LargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"t:LargeArchiveSearchScope"`

	ArchiveTypes *SearchScopeArchivesType `xml:"t:ArchiveTypes,omitempty" json:"ArchiveTypes,omitempty"`
}

type GroupSearchScopeType struct {
	XMLName xml.Name `xml:"t:GroupSearchScope"`

	GroupTypes *SearchScopeGroupsType `xml:"t:GroupTypes,omitempty" json:"GroupTypes,omitempty"`
}

type SingleLargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"t:SingleLargeArchiveSearchScope"`

	MailboxGuid *GuidType `xml:"t:MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"t:FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"t:IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type OneDriveSearchScopeType struct {
	XMLName xml.Name `xml:"t:OneDriveSearchScope"`

	OneDriveView *OneDriveViewType `xml:"t:OneDriveView,omitempty" json:"OneDriveView,omitempty"`
}

type DelveSearchScopeType struct {
	XMLName xml.Name `xml:"t:DelveSearchScope"`

	DelveView *DelveViewType `xml:"t:DelveView,omitempty" json:"DelveView,omitempty"`
}

type CustomSearchScopeType struct {
	XMLName xml.Name `xml:"t:CustomSearchScope"`

	MailboxGuid *GuidType `xml:"t:MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"t:FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"t:IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type ArrayOfSearchScopeType struct {
	PrimaryMailboxSearchScope *PrimaryMailboxSearchScopeType `xml:"t:PrimaryMailboxSearchScope,omitempty" json:"PrimaryMailboxSearchScope,omitempty"`

	LargeArchiveSearchScope *LargeArchiveSearchScopeType `xml:"t:LargeArchiveSearchScope,omitempty" json:"LargeArchiveSearchScope,omitempty"`

	GroupSearchScope *GroupSearchScopeType `xml:"t:GroupSearchScope,omitempty" json:"GroupSearchScope,omitempty"`

	CustomSearchScope *CustomSearchScopeType `xml:"t:CustomSearchScope,omitempty" json:"CustomSearchScope,omitempty"`

	OneDriveSearchScope *OneDriveSearchScopeType `xml:"t:OneDriveSearchScope,omitempty" json:"OneDriveSearchScope,omitempty"`

	SingleLargeArchiveSearchScope *SingleLargeArchiveSearchScopeType `xml:"t:SingleLargeArchiveSearchScope,omitempty" json:"SingleLargeArchiveSearchScope,omitempty"`

	DelveSearchScope *DelveSearchScopeType `xml:"t:DelveSearchScope,omitempty" json:"DelveSearchScope,omitempty"`
}

type DynamicRefinerQueryType struct {
	RefinerQuery string `xml:"t:RefinerQuery,omitempty" json:"RefinerQuery,omitempty"`

	TDRefinerId int32 `xml:"t:TDRefinerId,omitempty" json:"TDRefinerId,omitempty"`
}

type ExtendedKeywordDefinitionType struct {
	XMLName xml.Name `xml:"t:ExtendedKeywordDefinition"`

	Keyword string `xml:"t:Keyword,omitempty" json:"Keyword,omitempty"`

	Properties *NonEmptyArrayOfExtendedFieldURIsType `xml:"t:Properties,omitempty" json:"Properties,omitempty"`
}

type SuggestionType struct {
	XMLName xml.Name `xml:"t:Suggestion"`

	SuggestedQuery string `xml:"t:SuggestedQuery,omitempty" json:"SuggestedQuery,omitempty"`

	DisplayText string `xml:"t:DisplayText,omitempty" json:"DisplayText,omitempty"`

	SuggestionType *SuggestionKindType `xml:"t:SuggestionType,omitempty" json:"SuggestionType,omitempty"`

	Trigger string `xml:"t:Trigger,omitempty" json:"Trigger,omitempty"`

	TDSuggestionId int32 `xml:"t:TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty"`

	IsDeletable bool `xml:"t:IsDeletable,omitempty" json:"IsDeletable,omitempty"`
}

type PeopleSuggestionType struct {
	*SuggestionType

	PrimarySmtpAddress string `xml:"t:PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	PersonType string `xml:"t:PersonType,omitempty" json:"PersonType,omitempty"`
}

type FileSuggestionType struct {
	*SuggestionType

	FileName string `xml:"t:FileName,omitempty" json:"FileName,omitempty"`

	FileExtension string `xml:"t:FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileReferenceId string `xml:"t:FileReferenceId,omitempty" json:"FileReferenceId,omitempty"`

	FileTitle string `xml:"t:FileTitle,omitempty" json:"FileTitle,omitempty"`

	ContainerTitle string `xml:"t:ContainerTitle,omitempty" json:"ContainerTitle,omitempty"`

	ContainerUrl string `xml:"t:ContainerUrl,omitempty" json:"ContainerUrl,omitempty"`
}

type SearchSuggestionsType struct {
	XMLName xml.Name `xml:"t:SearchSuggestions"`

	TDSuggestionsBatchId int64 `xml:"t:TDSuggestionsBatchId,omitempty" json:"TDSuggestionsBatchId,omitempty"`

	TDSuggestionsInstanceId *GuidType `xml:"t:TDSuggestionsInstanceId,omitempty" json:"TDSuggestionsInstanceId,omitempty"`

	Suggestions struct {
		Suggestion []*SuggestionType `xml:"t:Suggestion,omitempty" json:"Suggestion,omitempty"`
	} `Suggestions,omitempty" json:"Suggestions,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"t:DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type DeleteSearchSuggestionResponseType struct {
	XMLName xml.Name `xml:"t:Response"`

	Success bool `xml:"t:Success,omitempty" json:"Success,omitempty"`

	StatusMessage string `xml:"t:StatusMessage,omitempty" json:"StatusMessage,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"t:DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type SearchDiagnosticsStepType struct {
	StartTime string `xml:"t:StartTime,omitempty" json:"StartTime,omitempty"`

	StepTime int64 `xml:"t:StepTime,omitempty" json:"StepTime,omitempty"`

	StepType string `xml:"t:StepType,omitempty" json:"StepType,omitempty"`

	AdditionalEntries struct {
		Entry []string `xml:"t:Entry,omitempty" json:"Entry,omitempty"`
	} `AdditionalEntries,omitempty" json:"AdditionalEntries,omitempty"`
}

type SearchRefinerType struct {
	XMLName xml.Name `xml:"t:SearchRefiner"`

	RefinerType *RefinerTypeType `xml:"t:RefinerType,omitempty" json:"RefinerType,omitempty"`

	Refiner *DynamicRefinerQueryType `xml:"t:Refiner,omitempty" json:"Refiner,omitempty"`

	ResultCount int64 `xml:"t:ResultCount,omitempty" json:"ResultCount,omitempty"`
}

type FolderRefinerType struct {
	*SearchRefinerType

	FolderId *FolderIdType `xml:"t:FolderId,omitempty" json:"FolderId,omitempty"`
}

type PeopleRefinerType struct {
	*SearchRefinerType

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"t:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type MailboxRefinerType struct {
	*SearchRefinerType

	MailboxDisplayName string `xml:"t:MailboxDisplayName,omitempty" json:"MailboxDisplayName,omitempty"`
}

type AttachmentRefinerType struct {
	*SearchRefinerType

	HasAttachment bool `xml:"t:HasAttachment,omitempty" json:"HasAttachment,omitempty"`
}

type HashtagRefinerType struct {
	*SearchRefinerType

	DisplayName string `xml:"t:DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type SearchDiagnosticsType struct {
}

type MailboxInformationType struct {
	XMLName xml.Name `xml:"t:MailboxInformation"`
}

type ExecuteSearchQueryIdType struct {
	XMLName xml.Name `xml:"t:QueryId"`

	Id *GuidType `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type SearchResultsType struct {
	XMLName xml.Name `xml:"t:SearchResults"`

	Items struct {
		Item []*ItemType `xml:"t:Item,omitempty" json:"Item,omitempty"`
	} `Items,omitempty" json:"Items,omitempty"`

	Conversations struct {
		Conversation []*ConversationType `xml:"t:Conversation,omitempty" json:"Conversation,omitempty"`
	} `Conversations,omitempty" json:"Conversations,omitempty"`

	People struct {
		Persona []*PersonaType `xml:"t:Persona,omitempty" json:"Persona,omitempty"`
	} `People,omitempty" json:"People,omitempty"`

	MoreResultsAvailable bool `xml:"t:MoreResultsAvailable,omitempty" json:"MoreResultsAvailable,omitempty"`

	RefinerTelemetryBatchId int32 `xml:"t:RefinerTelemetryBatchId,omitempty" json:"RefinerTelemetryBatchId,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*SearchRefinerType `xml:"t:SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"t:DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`

	SearchResultsCount int32 `xml:"t:SearchResultsCount,omitempty" json:"SearchResultsCount,omitempty"`

	TotalResultsCount int32 `xml:"t:TotalResultsCount,omitempty" json:"TotalResultsCount,omitempty"`

	SearchTerms *ArrayOfStringsType `xml:"t:SearchTerms,omitempty" json:"SearchTerms,omitempty"`

	QueryId *ExecuteSearchQueryIdType `xml:"t:QueryId,omitempty" json:"QueryId,omitempty"`

	MailboxesInformation struct {
		MailboxInformation []*MailboxInformationType `xml:"t:MailboxInformation,omitempty" json:"MailboxInformation,omitempty"`
	} `MailboxesInformation,omitempty" json:"MailboxesInformation,omitempty"`
}

type SearchResultItemIdType struct {
	*ItemIdType

	EntryId []byte `xml:"t:EntryId,omitempty" json:"EntryId,omitempty"`

	OutlookItemId []byte `xml:"t:OutlookItemId,omitempty" json:"OutlookItemId,omitempty"`
}

type SearchResultConversationIdType struct {
	*ItemIdType

	OutlookConversationId []byte `xml:"t:OutlookConversationId,omitempty" json:"OutlookConversationId,omitempty"`
}

type ArrayOfWorkHours struct {
	WorkHours *WorkHoursType `xml:"t:WorkHours,omitempty" json:"WorkHours,omitempty"`
}

type WorkHoursType struct {
	XMLName xml.Name `xml:"t:WorkHours"`

	WorkDay *SystemDayOfWeek `xml:"t:WorkDay,omitempty" json:"WorkDay,omitempty"`

	TimeSlots *ArrayOfWorkTimeSlot `xml:"t:TimeSlots,omitempty" json:"TimeSlots,omitempty"`
}

type ArrayOfWorkTimeSlot struct {
	XMLName xml.Name `xml:"t:TimeSlots"`

	TimeSlot []*WorkTimeSlot `xml:"t:TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type WorkTimeSlot struct {
	XMLName xml.Name `xml:"t:TimeSlot"`

	StartTimeInMinutes int32 `xml:"t:StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes int32 `xml:"t:EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type AnalyzedQuery struct {
	QueryLanguage string `xml:"t:QueryLanguage,omitempty" json:"QueryLanguage,omitempty"`

	SearchRestrictions *RestrictionType `xml:"t:SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`
}

type ContextPropertyType struct {
	XMLName xml.Name `xml:"t:ContextProperty"`

	Key string `xml:"t:Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"t:Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfContextProperty struct {
	ContextProperty []*ContextPropertyType `xml:"t:ContextProperty,omitempty" json:"ContextProperty,omitempty"`
}

type ArrayOfEntityFeedbackEntry struct {
	EntityFeedbackEntry []*EntityFeedbackEntryType `xml:"t:EntityFeedbackEntry,omitempty" json:"EntityFeedbackEntry,omitempty"`
}

type EntityFeedbackEntryType struct {
	XMLName xml.Name `xml:"t:EntityFeedbackEntry"`

	ClientEventTimeUtc xsd.DateTime `xml:"t:ClientEventTimeUtc,omitempty" json:"ClientEventTimeUtc,omitempty"`

	ClientEventTimeLocal xsd.DateTime `xml:"t:ClientEventTimeLocal,omitempty" json:"ClientEventTimeLocal,omitempty"`

	ClientSessionId *GuidType `xml:"t:ClientSessionId,omitempty" json:"ClientSessionId,omitempty"`

	ClientVersion string `xml:"t:ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	ClientId *ClientIdType `xml:"t:ClientId,omitempty" json:"ClientId,omitempty"`

	EntrySequenceNumber int32 `xml:"t:EntrySequenceNumber,omitempty" json:"EntrySequenceNumber,omitempty"`

	TransactionId string `xml:"t:TransactionId,omitempty" json:"TransactionId,omitempty"`

	EventType string `xml:"t:EventType,omitempty" json:"EventType,omitempty"`

	TargetEntityList string `xml:"t:TargetEntityList,omitempty" json:"TargetEntityList,omitempty"`

	EntityAddSource *EntityFeedbackEntityAddSourceType `xml:"t:EntityAddSource,omitempty" json:"EntityAddSource,omitempty"`

	JsonPropertyBag string `xml:"t:JsonPropertyBag,omitempty" json:"JsonPropertyBag,omitempty"`
}

type ArrayOfInboxReminderType struct {
	XMLName xml.Name `xml:"t:InboxReminders"`

	InboxReminder []*InboxReminderType `xml:"t:InboxReminder,omitempty" json:"InboxReminder,omitempty"`
}

type InboxReminderType struct {
	XMLName xml.Name `xml:"t:InboxReminder"`

	Id *GuidType `xml:"t:Id,omitempty" json:"Id,omitempty"`

	ReminderOffset int32 `xml:"t:ReminderOffset,omitempty" json:"ReminderOffset,omitempty"`

	Message string `xml:"t:Message,omitempty" json:"Message,omitempty"`

	IsOrganizerReminder bool `xml:"t:IsOrganizerReminder,omitempty" json:"IsOrganizerReminder,omitempty"`

	OccurrenceChange *EmailReminderChangeType `xml:"t:OccurrenceChange,omitempty" json:"OccurrenceChange,omitempty"`

	SendOption *EmailReminderSendOption `xml:"t:SendOption,omitempty" json:"SendOption,omitempty"`
}

type InsightContextItem struct {
	XMLName xml.Name `xml:"t:Context"`

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	Val string `xml:"t:Val,omitempty" json:"Val,omitempty"`
}

type ArrayOfInsightContextItem struct {
	XMLName xml.Name `xml:"t:Context"`

	Context []*InsightContextItem `xml:"t:Context,omitempty" json:"Context,omitempty"`
}

type InsightItemType struct {
	XMLName xml.Name `xml:"t:Insight"`

	ItemId *ItemIdType `xml:"t:ItemId,omitempty" json:"ItemId,omitempty"`

	InsightId *GuidType `xml:"t:InsightId,omitempty" json:"InsightId,omitempty"`

	Type string `xml:"t:Type,omitempty" json:"Type,omitempty"`

	StartTimeUtc xsd.DateTime `xml:"t:StartTimeUtc,omitempty" json:"StartTimeUtc,omitempty"`

	EndTimeUtc xsd.DateTime `xml:"t:EndTimeUtc,omitempty" json:"EndTimeUtc,omitempty"`

	Status *InsightStatusType `xml:"t:Status,omitempty" json:"Status,omitempty"`

	Version string `xml:"t:Version,omitempty" json:"Version,omitempty"`

	Context *ArrayOfInsightContextItem `xml:"t:Context,omitempty" json:"Context,omitempty"`

	Text string `xml:"t:Text,omitempty" json:"Text,omitempty"`

	ApplicationsIds *ArrayOfStringsType `xml:"t:ApplicationsIds,omitempty" json:"ApplicationsIds,omitempty"`

	SuggestedActions string `xml:"t:SuggestedActions,omitempty" json:"SuggestedActions,omitempty"`

	AppContexts *ArrayOfStringsType `xml:"t:AppContexts,omitempty" json:"AppContexts,omitempty"`
}

type ArrayOfInsightItemType struct {
	Insight []*InsightItemType `xml:"t:Insight,omitempty" json:"Insight,omitempty"`
}

type ResponseMessageInfoType struct {
	MessageText string `xml:"t:MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode string `xml:"t:ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	ResponseClass *ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type BaseAvailabilityCalendarViewType struct {
	FreeBusyViewType *FreeBusyViewType `xml:"t:FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`
}

type ArrayOfPeopleQuerySource struct {
	XMLName xml.Name `xml:"t:QuerySources"`

	Source []string `xml:"t:Source,omitempty" json:"Source,omitempty"`
}

type CalendarActivityDataType struct {
	ActivityAction string `xml:"t:ActivityAction,omitempty" json:"ActivityAction,omitempty"`

	ClientId string `xml:"t:ClientId,omitempty" json:"ClientId,omitempty"`

	CasRequestId *GuidType `xml:"t:CasRequestId,omitempty" json:"CasRequestId,omitempty"`

	IndexSelected int32 `xml:"t:IndexSelected,omitempty" json:"IndexSelected,omitempty"`
}

type MentionActionType struct {
	XMLName xml.Name `xml:"t:MentionAction"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"t:CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"t:CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"t:ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"t:DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"t:Application,omitempty" json:"Application,omitempty"`

	Mentioned *EmailAddressExtendedType `xml:"t:Mentioned,omitempty" json:"Mentioned,omitempty"`

	MentionText string `xml:"t:MentionText,omitempty" json:"MentionText,omitempty"`

	ClientReference string `xml:"t:ClientReference,omitempty" json:"ClientReference,omitempty"`
}

type NonEmptyArrayOfMentionActionsType struct {
	XMLName xml.Name `xml:"t:MentionsEx"`

	MentionAction []*MentionActionType `xml:"t:MentionAction,omitempty" json:"MentionAction,omitempty"`
}

type AppliedHashtagType struct {
	XMLName xml.Name `xml:"t:AppliedHashtag"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"t:CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"t:CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"t:ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"t:DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"t:Application,omitempty" json:"Application,omitempty"`

	Tag string `xml:"t:Tag,omitempty" json:"Tag,omitempty"`

	IsAutoTagged bool `xml:"t:IsAutoTagged,omitempty" json:"IsAutoTagged,omitempty"`

	IsInlined bool `xml:"t:IsInlined,omitempty" json:"IsInlined,omitempty"`
}

type AppliedHashtagsPreviewType struct {
	XMLName xml.Name `xml:"t:AppliedHashtagsPreview"`

	Hashtags *ArrayOfStringsType `xml:"t:Hashtags,omitempty" json:"Hashtags,omitempty"`
}

type NonEmptyArrayOfAppliedHashtagType struct {
	XMLName xml.Name `xml:"t:AppliedHashtags"`

	AppliedHashtag []*AppliedHashtagType `xml:"t:AppliedHashtag,omitempty" json:"AppliedHashtag,omitempty"`
}

type LikeType struct {
	XMLName xml.Name `xml:"t:Like"`

	Id string `xml:"t:Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"t:CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"t:CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"t:ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"t:DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"t:Application,omitempty" json:"Application,omitempty"`
}

type LikesPreviewType struct {
	XMLName xml.Name `xml:"t:LikesPreview"`

	LikeCount int32 `xml:"t:LikeCount,omitempty" json:"LikeCount,omitempty"`
}

type MentionsPreviewType struct {
	XMLName xml.Name `xml:"t:MentionsPreview"`

	IsMentioned bool `xml:"t:IsMentioned,omitempty" json:"IsMentioned,omitempty"`
}

type NonEmptyArrayOfLikeType struct {
	XMLName xml.Name `xml:"t:Likes"`

	Like []*LikeType `xml:"t:Like,omitempty" json:"Like,omitempty"`
}

type AttendeeAvailability struct {
	EmailAddress string `xml:"t:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Availability *AvailabilityStatusType `xml:"t:Availability,omitempty" json:"Availability,omitempty"`
}

type ArrayOfMeetingLocation struct {
	XMLName xml.Name `xml:"t:Locations"`

	MeetingLocation []*MeetingLocation `xml:"t:MeetingLocation,omitempty" json:"MeetingLocation,omitempty"`
}

type ArrayOfAttendeeAvailability struct {
	XMLName xml.Name `xml:"t:AttendeeAvailabilities"`

	AttendeeAvailability []*AttendeeAvailability `xml:"t:AttendeeAvailability,omitempty" json:"AttendeeAvailability,omitempty"`
}

type MeetingTimeCandidate struct {
	MeetingTimeslot *TimeSlot `xml:"t:MeetingTimeslot,omitempty" json:"MeetingTimeslot,omitempty"`

	Confidence float64 `xml:"t:Confidence,omitempty" json:"Confidence,omitempty"`

	Score int32 `xml:"t:Score,omitempty" json:"Score,omitempty"`

	OrganizerAvailability *AvailabilityStatusType `xml:"t:OrganizerAvailability,omitempty" json:"OrganizerAvailability,omitempty"`

	AttendeeAvailabilities *ArrayOfAttendeeAvailability `xml:"t:AttendeeAvailabilities,omitempty" json:"AttendeeAvailabilities,omitempty"`

	Locations *ArrayOfMeetingLocation `xml:"t:Locations,omitempty" json:"Locations,omitempty"`

	SuggestionHint string `xml:"t:SuggestionHint,omitempty" json:"SuggestionHint,omitempty"`
}

type ArrayOfMeetingTimeCandidate struct {
	MeetingTimeCandidate []*MeetingTimeCandidate `xml:"t:MeetingTimeCandidate,omitempty" json:"MeetingTimeCandidate,omitempty"`
}

type MeetingTimeCandidatesConstraintItem struct {
	Email string `xml:"t:Email,omitempty" json:"Email,omitempty"`
}

type AttendeeConstraintItem struct {
	XMLName xml.Name `xml:"t:AttendeeItem"`

	*MeetingTimeCandidatesConstraintItem

	IsRequired bool `xml:"t:IsRequired,omitempty" json:"IsRequired,omitempty"`
}

type LocationConstraintItem struct {
	XMLName xml.Name `xml:"t:LocationItem"`

	*MeetingTimeCandidatesConstraintItem

	Name string `xml:"t:Name,omitempty" json:"Name,omitempty"`

	ResolveAvailability bool `xml:"t:ResolveAvailability,omitempty" json:"ResolveAvailability,omitempty"`
}

type ArrayOfLocationConstraintItems struct {
	XMLName xml.Name `xml:"t:LocationEntries"`

	LocationItem []*LocationConstraintItem `xml:"t:LocationItem,omitempty" json:"LocationItem,omitempty"`
}

type ArrayOfAttendeeConstraintItems struct {
	XMLName xml.Name `xml:"t:AttendeeEntries"`

	AttendeeItem []*AttendeeConstraintItem `xml:"t:AttendeeItem,omitempty" json:"AttendeeItem,omitempty"`
}

type ArrayOfTimeSlot struct {
	XMLName xml.Name `xml:"t:SearchWindows"`

	TimeSlot []*TimeSlot `xml:"t:TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type FindMeetingTimesAttendeeConstraints struct {
	XMLName xml.Name `xml:"t:AttendeeConstraints"`

	AttendeeEntries *ArrayOfAttendeeConstraintItems `xml:"t:AttendeeEntries,omitempty" json:"AttendeeEntries,omitempty"`
}

type FindMeetingTimesLocationConstraints struct {
	XMLName xml.Name `xml:"t:LocationConstraints"`

	LocationEntries *ArrayOfLocationConstraintItems `xml:"t:LocationEntries,omitempty" json:"LocationEntries,omitempty"`

	IsRequired bool `xml:"t:IsRequired,omitempty" json:"IsRequired,omitempty"`

	SuggestLocation bool `xml:"t:SuggestLocation,omitempty" json:"SuggestLocation,omitempty"`
}

type FindMeetingTimesSearchConstraints struct {
	XMLName xml.Name `xml:"t:SearchConstraints"`

	SearchWindows *ArrayOfTimeSlot `xml:"t:SearchWindows,omitempty" json:"SearchWindows,omitempty"`

	MeetingDurationInMinutes int32 `xml:"t:MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"t:ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindMeetingTimesConstraints struct {
	XMLName xml.Name `xml:"t:Constraints"`

	MaxCandidates int32 `xml:"t:MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	IsOrganizerOptional bool `xml:"t:IsOrganizerOptional,omitempty" json:"IsOrganizerOptional,omitempty"`

	ReturnSuggestionHints bool `xml:"t:ReturnSuggestionHints,omitempty" json:"ReturnSuggestionHints,omitempty"`

	AppName string `xml:"t:AppName,omitempty" json:"AppName,omitempty"`

	AppScenario string `xml:"t:AppScenario,omitempty" json:"AppScenario,omitempty"`

	MinimumAttendeePercentage float64 `xml:"t:MinimumAttendeePercentage,omitempty" json:"MinimumAttendeePercentage,omitempty"`
}

type OfficeClientType struct {
	Code *OfficeClientCodeType `xml:"Code,attr,omitempty" json:"Code,omitempty"`

	Version *VersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type ArrayOfAppsType struct {
	XMLName xml.Name `xml:"t:Apps"`

	App []*AppType `xml:"t:App,omitempty" json:"App,omitempty"`

	Metadata *Metadata `xml:"t:Metadata,omitempty" json:"Metadata,omitempty"`
}

type AppType struct {
	XMLName xml.Name `xml:"t:App"`

	Metadata *AppMetadata `xml:"t:Metadata,omitempty" json:"Metadata,omitempty"`

	Manifest []byte `xml:"t:Manifest,omitempty" json:"Manifest,omitempty"`
}

type Metadata struct {
	CustomApps string `xml:"t:CustomApps,omitempty" json:"CustomApps,omitempty"`
}

type AppMetadata struct {
	XMLName xml.Name `xml:"t:Metadata"`

	EndNodeUrl string `xml:"t:EndNodeUrl,omitempty" json:"EndNodeUrl,omitempty"`

	AppStatus string `xml:"t:AppStatus,omitempty" json:"AppStatus,omitempty"`

	ActionUrl string `xml:"t:ActionUrl,omitempty" json:"ActionUrl,omitempty"`

	ProductId string `xml:"t:ProductId,omitempty" json:"ProductId,omitempty"`

	EnabledStatus bool `xml:"t:EnabledStatus,omitempty" json:"EnabledStatus,omitempty"`

	ConsentState string `xml:"t:ConsentState,omitempty" json:"ConsentState,omitempty"`

	ExtensionType string `xml:"t:ExtensionType,omitempty" json:"ExtensionType,omitempty"`

	MarketplaceAssetId string `xml:"t:MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	LicenseStatus string `xml:"t:LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate xsd.DateTime `xml:"t:TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	InstalledBy string `xml:"t:InstalledBy,omitempty" json:"InstalledBy,omitempty"`

	IsMandatory bool `xml:"t:IsMandatory,omitempty" json:"IsMandatory,omitempty"`
}

// Represents the message keys that can be returned by response error messages

type ResponseCodeType string

const (
	ResponseCodeTypeNoError ResponseCodeType = "NoError"

	ResponseCodeTypeErrorAccessDenied ResponseCodeType = "ErrorAccessDenied"

	ResponseCodeTypeErrorAccessModeSpecified ResponseCodeType = "ErrorAccessModeSpecified"

	ResponseCodeTypeErrorAccountDisabled ResponseCodeType = "ErrorAccountDisabled"

	ResponseCodeTypeErrorAddDelegatesFailed ResponseCodeType = "ErrorAddDelegatesFailed"

	ResponseCodeTypeErrorAddressSpaceNotFound ResponseCodeType = "ErrorAddressSpaceNotFound"

	ResponseCodeTypeErrorADOperation ResponseCodeType = "ErrorADOperation"

	ResponseCodeTypeErrorADSessionFilter ResponseCodeType = "ErrorADSessionFilter"

	ResponseCodeTypeErrorADUnavailable ResponseCodeType = "ErrorADUnavailable"

	ResponseCodeTypeErrorServiceUnavailable ResponseCodeType = "ErrorServiceUnavailable"

	ResponseCodeTypeErrorAutoDiscoverFailed ResponseCodeType = "ErrorAutoDiscoverFailed"

	ResponseCodeTypeErrorAffectedTaskOccurrencesRequired ResponseCodeType = "ErrorAffectedTaskOccurrencesRequired"

	ResponseCodeTypeErrorAttachmentNestLevelLimitExceeded ResponseCodeType = "ErrorAttachmentNestLevelLimitExceeded"

	ResponseCodeTypeErrorAttachmentSizeLimitExceeded ResponseCodeType = "ErrorAttachmentSizeLimitExceeded"

	ResponseCodeTypeErrorArchiveFolderPathCreation ResponseCodeType = "ErrorArchiveFolderPathCreation"

	ResponseCodeTypeErrorArchiveMailboxNotEnabled ResponseCodeType = "ErrorArchiveMailboxNotEnabled"

	ResponseCodeTypeErrorArchiveMailboxServiceDiscoveryFailed ResponseCodeType = "ErrorArchiveMailboxServiceDiscoveryFailed"

	ResponseCodeTypeErrorAvailabilityConfigNotFound ResponseCodeType = "ErrorAvailabilityConfigNotFound"

	ResponseCodeTypeErrorBatchProcessingStopped ResponseCodeType = "ErrorBatchProcessingStopped"

	ResponseCodeTypeErrorCalendarCannotMoveOrCopyOccurrence ResponseCodeType = "ErrorCalendarCannotMoveOrCopyOccurrence"

	ResponseCodeTypeErrorCalendarCannotUpdateDeletedItem ResponseCodeType = "ErrorCalendarCannotUpdateDeletedItem"

	ResponseCodeTypeErrorCalendarCannotUseIdForOccurrenceId ResponseCodeType = "ErrorCalendarCannotUseIdForOccurrenceId"

	ResponseCodeTypeErrorCalendarCannotUseIdForRecurringMasterId ResponseCodeType = "ErrorCalendarCannotUseIdForRecurringMasterId"

	ResponseCodeTypeErrorCalendarDurationIsTooLong ResponseCodeType = "ErrorCalendarDurationIsTooLong"

	ResponseCodeTypeErrorCalendarEndDateIsEarlierThanStartDate ResponseCodeType = "ErrorCalendarEndDateIsEarlierThanStartDate"

	ResponseCodeTypeErrorCalendarFolderIsInvalidForCalendarView ResponseCodeType = "ErrorCalendarFolderIsInvalidForCalendarView"

	ResponseCodeTypeErrorCalendarInvalidAttributeValue ResponseCodeType = "ErrorCalendarInvalidAttributeValue"

	ResponseCodeTypeErrorCalendarInvalidDayForTimeChangePattern ResponseCodeType = "ErrorCalendarInvalidDayForTimeChangePattern"

	ResponseCodeTypeErrorCalendarInvalidDayForWeeklyRecurrence ResponseCodeType = "ErrorCalendarInvalidDayForWeeklyRecurrence"

	ResponseCodeTypeErrorCalendarInvalidPropertyState ResponseCodeType = "ErrorCalendarInvalidPropertyState"

	ResponseCodeTypeErrorCalendarInvalidPropertyValue ResponseCodeType = "ErrorCalendarInvalidPropertyValue"

	ResponseCodeTypeErrorCalendarInvalidRecurrence ResponseCodeType = "ErrorCalendarInvalidRecurrence"

	ResponseCodeTypeErrorCalendarInvalidTimeZone ResponseCodeType = "ErrorCalendarInvalidTimeZone"

	ResponseCodeTypeErrorCalendarIsCancelledForAccept ResponseCodeType = "ErrorCalendarIsCancelledForAccept"

	ResponseCodeTypeErrorCalendarIsCancelledForDecline ResponseCodeType = "ErrorCalendarIsCancelledForDecline"

	ResponseCodeTypeErrorCalendarIsCancelledForRemove ResponseCodeType = "ErrorCalendarIsCancelledForRemove"

	ResponseCodeTypeErrorCalendarIsCancelledForTentative ResponseCodeType = "ErrorCalendarIsCancelledForTentative"

	ResponseCodeTypeErrorCalendarIsDelegatedForAccept ResponseCodeType = "ErrorCalendarIsDelegatedForAccept"

	ResponseCodeTypeErrorCalendarIsDelegatedForDecline ResponseCodeType = "ErrorCalendarIsDelegatedForDecline"

	ResponseCodeTypeErrorCalendarIsDelegatedForRemove ResponseCodeType = "ErrorCalendarIsDelegatedForRemove"

	ResponseCodeTypeErrorCalendarIsDelegatedForTentative ResponseCodeType = "ErrorCalendarIsDelegatedForTentative"

	ResponseCodeTypeErrorCalendarIsNotOrganizer ResponseCodeType = "ErrorCalendarIsNotOrganizer"

	ResponseCodeTypeErrorCalendarIsOrganizerForAccept ResponseCodeType = "ErrorCalendarIsOrganizerForAccept"

	ResponseCodeTypeErrorCalendarIsOrganizerForDecline ResponseCodeType = "ErrorCalendarIsOrganizerForDecline"

	ResponseCodeTypeErrorCalendarIsOrganizerForRemove ResponseCodeType = "ErrorCalendarIsOrganizerForRemove"

	ResponseCodeTypeErrorCalendarIsOrganizerForTentative ResponseCodeType = "ErrorCalendarIsOrganizerForTentative"

	ResponseCodeTypeErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange ResponseCodeType = "ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange"

	ResponseCodeTypeErrorCalendarOccurrenceIsDeletedFromRecurrence ResponseCodeType = "ErrorCalendarOccurrenceIsDeletedFromRecurrence"

	ResponseCodeTypeErrorCalendarOutOfRange ResponseCodeType = "ErrorCalendarOutOfRange"

	ResponseCodeTypeErrorCalendarMeetingRequestIsOutOfDate ResponseCodeType = "ErrorCalendarMeetingRequestIsOutOfDate"

	ResponseCodeTypeErrorCalendarViewRangeTooBig ResponseCodeType = "ErrorCalendarViewRangeTooBig"

	ResponseCodeTypeErrorCallerIsInvalidADAccount ResponseCodeType = "ErrorCallerIsInvalidADAccount"

	ResponseCodeTypeErrorCannotAccessDeletedPublicFolder ResponseCodeType = "ErrorCannotAccessDeletedPublicFolder"

	ResponseCodeTypeErrorCannotArchiveCalendarContactTaskFolderException ResponseCodeType = "ErrorCannotArchiveCalendarContactTaskFolderException"

	ResponseCodeTypeErrorCannotArchiveItemsInPublicFolders ResponseCodeType = "ErrorCannotArchiveItemsInPublicFolders"

	ResponseCodeTypeErrorCannotArchiveItemsInArchiveMailbox ResponseCodeType = "ErrorCannotArchiveItemsInArchiveMailbox"

	ResponseCodeTypeErrorCannotCreateCalendarItemInNonCalendarFolder ResponseCodeType = "ErrorCannotCreateCalendarItemInNonCalendarFolder"

	ResponseCodeTypeErrorCannotCreateContactInNonContactFolder ResponseCodeType = "ErrorCannotCreateContactInNonContactFolder"

	ResponseCodeTypeErrorCannotCreatePostItemInNonMailFolder ResponseCodeType = "ErrorCannotCreatePostItemInNonMailFolder"

	ResponseCodeTypeErrorCannotCreateTaskInNonTaskFolder ResponseCodeType = "ErrorCannotCreateTaskInNonTaskFolder"

	ResponseCodeTypeErrorCannotDeleteObject ResponseCodeType = "ErrorCannotDeleteObject"

	ResponseCodeTypeErrorCannotDisableMandatoryExtension ResponseCodeType = "ErrorCannotDisableMandatoryExtension"

	ResponseCodeTypeErrorCannotFindUser ResponseCodeType = "ErrorCannotFindUser"

	ResponseCodeTypeErrorCannotGetSourceFolderPath ResponseCodeType = "ErrorCannotGetSourceFolderPath"

	ResponseCodeTypeErrorCannotGetExternalEcpUrl ResponseCodeType = "ErrorCannotGetExternalEcpUrl"

	ResponseCodeTypeErrorCannotOpenFileAttachment ResponseCodeType = "ErrorCannotOpenFileAttachment"

	ResponseCodeTypeErrorCannotDeleteTaskOccurrence ResponseCodeType = "ErrorCannotDeleteTaskOccurrence"

	ResponseCodeTypeErrorCannotEmptyFolder ResponseCodeType = "ErrorCannotEmptyFolder"

	ResponseCodeTypeErrorCannotSetCalendarPermissionOnNonCalendarFolder ResponseCodeType = "ErrorCannotSetCalendarPermissionOnNonCalendarFolder"

	ResponseCodeTypeErrorCannotSetNonCalendarPermissionOnCalendarFolder ResponseCodeType = "ErrorCannotSetNonCalendarPermissionOnCalendarFolder"

	ResponseCodeTypeErrorCannotSetPermissionUnknownEntries ResponseCodeType = "ErrorCannotSetPermissionUnknownEntries"

	ResponseCodeTypeErrorCannotSpecifySearchFolderAsSourceFolder ResponseCodeType = "ErrorCannotSpecifySearchFolderAsSourceFolder"

	ResponseCodeTypeErrorCannotUseFolderIdForItemId ResponseCodeType = "ErrorCannotUseFolderIdForItemId"

	ResponseCodeTypeErrorCannotUseItemIdForFolderId ResponseCodeType = "ErrorCannotUseItemIdForFolderId"

	ResponseCodeTypeErrorChangeKeyRequired ResponseCodeType = "ErrorChangeKeyRequired"

	ResponseCodeTypeErrorChangeKeyRequiredForWriteOperations ResponseCodeType = "ErrorChangeKeyRequiredForWriteOperations"

	ResponseCodeTypeErrorClientDisconnected ResponseCodeType = "ErrorClientDisconnected"

	ResponseCodeTypeErrorClientIntentInvalidStateDefinition ResponseCodeType = "ErrorClientIntentInvalidStateDefinition"

	ResponseCodeTypeErrorClientIntentNotFound ResponseCodeType = "ErrorClientIntentNotFound"

	ResponseCodeTypeErrorConnectionFailed ResponseCodeType = "ErrorConnectionFailed"

	ResponseCodeTypeErrorContainsFilterWrongType ResponseCodeType = "ErrorContainsFilterWrongType"

	ResponseCodeTypeErrorContentConversionFailed ResponseCodeType = "ErrorContentConversionFailed"

	ResponseCodeTypeErrorContentIndexingNotEnabled ResponseCodeType = "ErrorContentIndexingNotEnabled"

	ResponseCodeTypeErrorCorruptData ResponseCodeType = "ErrorCorruptData"

	ResponseCodeTypeErrorCreateItemAccessDenied ResponseCodeType = "ErrorCreateItemAccessDenied"

	ResponseCodeTypeErrorCreateManagedFolderPartialCompletion ResponseCodeType = "ErrorCreateManagedFolderPartialCompletion"

	ResponseCodeTypeErrorCreateSubfolderAccessDenied ResponseCodeType = "ErrorCreateSubfolderAccessDenied"

	ResponseCodeTypeErrorCrossMailboxMoveCopy ResponseCodeType = "ErrorCrossMailboxMoveCopy"

	ResponseCodeTypeErrorCrossSiteRequest ResponseCodeType = "ErrorCrossSiteRequest"

	ResponseCodeTypeErrorDataSizeLimitExceeded ResponseCodeType = "ErrorDataSizeLimitExceeded"

	ResponseCodeTypeErrorDataSourceOperation ResponseCodeType = "ErrorDataSourceOperation"

	ResponseCodeTypeErrorDelegateAlreadyExists ResponseCodeType = "ErrorDelegateAlreadyExists"

	ResponseCodeTypeErrorDelegateCannotAddOwner ResponseCodeType = "ErrorDelegateCannotAddOwner"

	ResponseCodeTypeErrorDelegateMissingConfiguration ResponseCodeType = "ErrorDelegateMissingConfiguration"

	ResponseCodeTypeErrorDelegateNoUser ResponseCodeType = "ErrorDelegateNoUser"

	ResponseCodeTypeErrorDelegateValidationFailed ResponseCodeType = "ErrorDelegateValidationFailed"

	ResponseCodeTypeErrorDeleteDistinguishedFolder ResponseCodeType = "ErrorDeleteDistinguishedFolder"

	ResponseCodeTypeErrorDeleteItemsFailed ResponseCodeType = "ErrorDeleteItemsFailed"

	ResponseCodeTypeErrorDeleteUnifiedMessagingPromptFailed ResponseCodeType = "ErrorDeleteUnifiedMessagingPromptFailed"

	ResponseCodeTypeErrorDistinguishedUserNotSupported ResponseCodeType = "ErrorDistinguishedUserNotSupported"

	ResponseCodeTypeErrorDistributionListMemberNotExist ResponseCodeType = "ErrorDistributionListMemberNotExist"

	ResponseCodeTypeErrorDuplicateInputFolderNames ResponseCodeType = "ErrorDuplicateInputFolderNames"

	ResponseCodeTypeErrorDuplicateUserIdsSpecified ResponseCodeType = "ErrorDuplicateUserIdsSpecified"

	ResponseCodeTypeErrorEmailAddressMismatch ResponseCodeType = "ErrorEmailAddressMismatch"

	ResponseCodeTypeErrorEventNotFound ResponseCodeType = "ErrorEventNotFound"

	ResponseCodeTypeErrorExceededConnectionCount ResponseCodeType = "ErrorExceededConnectionCount"

	ResponseCodeTypeErrorExceededSubscriptionCount ResponseCodeType = "ErrorExceededSubscriptionCount"

	ResponseCodeTypeErrorExceededFindCountLimit ResponseCodeType = "ErrorExceededFindCountLimit"

	ResponseCodeTypeErrorExpiredSubscription ResponseCodeType = "ErrorExpiredSubscription"

	ResponseCodeTypeErrorExtensionNotFound ResponseCodeType = "ErrorExtensionNotFound"

	ResponseCodeTypeErrorExtensionsNotAuthorized ResponseCodeType = "ErrorExtensionsNotAuthorized"

	ResponseCodeTypeErrorFolderCorrupt ResponseCodeType = "ErrorFolderCorrupt"

	ResponseCodeTypeErrorFolderNotFound ResponseCodeType = "ErrorFolderNotFound"

	ResponseCodeTypeErrorFolderPropertRequestFailed ResponseCodeType = "ErrorFolderPropertRequestFailed"

	ResponseCodeTypeErrorFolderSave ResponseCodeType = "ErrorFolderSave"

	ResponseCodeTypeErrorFolderSaveFailed ResponseCodeType = "ErrorFolderSaveFailed"

	ResponseCodeTypeErrorFolderSavePropertyError ResponseCodeType = "ErrorFolderSavePropertyError"

	ResponseCodeTypeErrorFolderExists ResponseCodeType = "ErrorFolderExists"

	ResponseCodeTypeErrorFreeBusyGenerationFailed ResponseCodeType = "ErrorFreeBusyGenerationFailed"

	ResponseCodeTypeErrorGetServerSecurityDescriptorFailed ResponseCodeType = "ErrorGetServerSecurityDescriptorFailed"

	ResponseCodeTypeErrorImContactLimitReached ResponseCodeType = "ErrorImContactLimitReached"

	ResponseCodeTypeErrorImGroupDisplayNameAlreadyExists ResponseCodeType = "ErrorImGroupDisplayNameAlreadyExists"

	ResponseCodeTypeErrorImGroupLimitReached ResponseCodeType = "ErrorImGroupLimitReached"

	ResponseCodeTypeErrorImpersonateUserDenied ResponseCodeType = "ErrorImpersonateUserDenied"

	ResponseCodeTypeErrorImpersonationDenied ResponseCodeType = "ErrorImpersonationDenied"

	ResponseCodeTypeErrorImpersonationFailed ResponseCodeType = "ErrorImpersonationFailed"

	ResponseCodeTypeErrorIncorrectSchemaVersion ResponseCodeType = "ErrorIncorrectSchemaVersion"

	ResponseCodeTypeErrorIncorrectUpdatePropertyCount ResponseCodeType = "ErrorIncorrectUpdatePropertyCount"

	ResponseCodeTypeErrorIndividualMailboxLimitReached ResponseCodeType = "ErrorIndividualMailboxLimitReached"

	ResponseCodeTypeErrorInsufficientResources ResponseCodeType = "ErrorInsufficientResources"

	ResponseCodeTypeErrorInternalServerError ResponseCodeType = "ErrorInternalServerError"

	ResponseCodeTypeErrorInternalServerTransientError ResponseCodeType = "ErrorInternalServerTransientError"

	ResponseCodeTypeErrorInvalidAccessLevel ResponseCodeType = "ErrorInvalidAccessLevel"

	ResponseCodeTypeErrorInvalidArgument ResponseCodeType = "ErrorInvalidArgument"

	ResponseCodeTypeErrorInvalidAttachmentId ResponseCodeType = "ErrorInvalidAttachmentId"

	ResponseCodeTypeErrorInvalidAttachmentSubfilter ResponseCodeType = "ErrorInvalidAttachmentSubfilter"

	ResponseCodeTypeErrorInvalidAttachmentSubfilterTextFilter ResponseCodeType = "ErrorInvalidAttachmentSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidAuthorizationContext ResponseCodeType = "ErrorInvalidAuthorizationContext"

	ResponseCodeTypeErrorInvalidChangeKey ResponseCodeType = "ErrorInvalidChangeKey"

	ResponseCodeTypeErrorInvalidClientSecurityContext ResponseCodeType = "ErrorInvalidClientSecurityContext"

	ResponseCodeTypeErrorInvalidCompleteDate ResponseCodeType = "ErrorInvalidCompleteDate"

	ResponseCodeTypeErrorInvalidContactEmailAddress ResponseCodeType = "ErrorInvalidContactEmailAddress"

	ResponseCodeTypeErrorInvalidContactEmailIndex ResponseCodeType = "ErrorInvalidContactEmailIndex"

	ResponseCodeTypeErrorInvalidCrossForestCredentials ResponseCodeType = "ErrorInvalidCrossForestCredentials"

	ResponseCodeTypeErrorInvalidDelegatePermission ResponseCodeType = "ErrorInvalidDelegatePermission"

	ResponseCodeTypeErrorInvalidDelegateUserId ResponseCodeType = "ErrorInvalidDelegateUserId"

	ResponseCodeTypeErrorInvalidExcludesRestriction ResponseCodeType = "ErrorInvalidExcludesRestriction"

	ResponseCodeTypeErrorInvalidExpressionTypeForSubFilter ResponseCodeType = "ErrorInvalidExpressionTypeForSubFilter"

	ResponseCodeTypeErrorInvalidExtendedProperty ResponseCodeType = "ErrorInvalidExtendedProperty"

	ResponseCodeTypeErrorInvalidExtendedPropertyValue ResponseCodeType = "ErrorInvalidExtendedPropertyValue"

	ResponseCodeTypeErrorInvalidFolderId ResponseCodeType = "ErrorInvalidFolderId"

	ResponseCodeTypeErrorInvalidFolderTypeForOperation ResponseCodeType = "ErrorInvalidFolderTypeForOperation"

	ResponseCodeTypeErrorInvalidFractionalPagingParameters ResponseCodeType = "ErrorInvalidFractionalPagingParameters"

	ResponseCodeTypeErrorInvalidFreeBusyViewType ResponseCodeType = "ErrorInvalidFreeBusyViewType"

	ResponseCodeTypeErrorInvalidId ResponseCodeType = "ErrorInvalidId"

	ResponseCodeTypeErrorInvalidIdEmpty ResponseCodeType = "ErrorInvalidIdEmpty"

	ResponseCodeTypeErrorInvalidIdMalformed ResponseCodeType = "ErrorInvalidIdMalformed"

	ResponseCodeTypeErrorInvalidIdMalformedEwsLegacyIdFormat ResponseCodeType = "ErrorInvalidIdMalformedEwsLegacyIdFormat"

	ResponseCodeTypeErrorInvalidIdMonikerTooLong ResponseCodeType = "ErrorInvalidIdMonikerTooLong"

	ResponseCodeTypeErrorInvalidIdNotAnItemAttachmentId ResponseCodeType = "ErrorInvalidIdNotAnItemAttachmentId"

	ResponseCodeTypeErrorInvalidIdReturnedByResolveNames ResponseCodeType = "ErrorInvalidIdReturnedByResolveNames"

	ResponseCodeTypeErrorInvalidIdStoreObjectIdTooLong ResponseCodeType = "ErrorInvalidIdStoreObjectIdTooLong"

	ResponseCodeTypeErrorInvalidIdTooManyAttachmentLevels ResponseCodeType = "ErrorInvalidIdTooManyAttachmentLevels"

	ResponseCodeTypeErrorInvalidIdXml ResponseCodeType = "ErrorInvalidIdXml"

	ResponseCodeTypeErrorInvalidImContactId ResponseCodeType = "ErrorInvalidImContactId"

	ResponseCodeTypeErrorInvalidImDistributionGroupSmtpAddress ResponseCodeType = "ErrorInvalidImDistributionGroupSmtpAddress"

	ResponseCodeTypeErrorInvalidImGroupId ResponseCodeType = "ErrorInvalidImGroupId"

	ResponseCodeTypeErrorInvalidIndexedPagingParameters ResponseCodeType = "ErrorInvalidIndexedPagingParameters"

	ResponseCodeTypeErrorInvalidInternetHeaderChildNodes ResponseCodeType = "ErrorInvalidInternetHeaderChildNodes"

	ResponseCodeTypeErrorInvalidItemForOperationArchiveItem ResponseCodeType = "ErrorInvalidItemForOperationArchiveItem"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItemAttachment ResponseCodeType = "ErrorInvalidItemForOperationCreateItemAttachment"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItem ResponseCodeType = "ErrorInvalidItemForOperationCreateItem"

	ResponseCodeTypeErrorInvalidItemForOperationAcceptItem ResponseCodeType = "ErrorInvalidItemForOperationAcceptItem"

	ResponseCodeTypeErrorInvalidItemForOperationDeclineItem ResponseCodeType = "ErrorInvalidItemForOperationDeclineItem"

	ResponseCodeTypeErrorInvalidItemForOperationCancelItem ResponseCodeType = "ErrorInvalidItemForOperationCancelItem"

	ResponseCodeTypeErrorInvalidItemForOperationExpandDL ResponseCodeType = "ErrorInvalidItemForOperationExpandDL"

	ResponseCodeTypeErrorInvalidItemForOperationRemoveItem ResponseCodeType = "ErrorInvalidItemForOperationRemoveItem"

	ResponseCodeTypeErrorInvalidItemForOperationSendItem ResponseCodeType = "ErrorInvalidItemForOperationSendItem"

	ResponseCodeTypeErrorInvalidItemForOperationTentative ResponseCodeType = "ErrorInvalidItemForOperationTentative"

	ResponseCodeTypeErrorInvalidLogonType ResponseCodeType = "ErrorInvalidLogonType"

	ResponseCodeTypeErrorInvalidLikeRequest ResponseCodeType = "ErrorInvalidLikeRequest"

	ResponseCodeTypeErrorInvalidMailbox ResponseCodeType = "ErrorInvalidMailbox"

	ResponseCodeTypeErrorInvalidManagedFolderProperty ResponseCodeType = "ErrorInvalidManagedFolderProperty"

	ResponseCodeTypeErrorInvalidManagedFolderQuota ResponseCodeType = "ErrorInvalidManagedFolderQuota"

	ResponseCodeTypeErrorInvalidManagedFolderSize ResponseCodeType = "ErrorInvalidManagedFolderSize"

	ResponseCodeTypeErrorInvalidMergedFreeBusyInterval ResponseCodeType = "ErrorInvalidMergedFreeBusyInterval"

	ResponseCodeTypeErrorInvalidNameForNameResolution ResponseCodeType = "ErrorInvalidNameForNameResolution"

	ResponseCodeTypeErrorInvalidOperation ResponseCodeType = "ErrorInvalidOperation"

	ResponseCodeTypeErrorInvalidNetworkServiceContext ResponseCodeType = "ErrorInvalidNetworkServiceContext"

	ResponseCodeTypeErrorInvalidOofParameter ResponseCodeType = "ErrorInvalidOofParameter"

	ResponseCodeTypeErrorInvalidPagingMaxRows ResponseCodeType = "ErrorInvalidPagingMaxRows"

	ResponseCodeTypeErrorInvalidParentFolder ResponseCodeType = "ErrorInvalidParentFolder"

	ResponseCodeTypeErrorInvalidPercentCompleteValue ResponseCodeType = "ErrorInvalidPercentCompleteValue"

	ResponseCodeTypeErrorInvalidPermissionSettings ResponseCodeType = "ErrorInvalidPermissionSettings"

	ResponseCodeTypeErrorInvalidPhoneCallId ResponseCodeType = "ErrorInvalidPhoneCallId"

	ResponseCodeTypeErrorInvalidPhoneNumber ResponseCodeType = "ErrorInvalidPhoneNumber"

	ResponseCodeTypeErrorInvalidUserInfo ResponseCodeType = "ErrorInvalidUserInfo"

	ResponseCodeTypeErrorInvalidPropertyAppend ResponseCodeType = "ErrorInvalidPropertyAppend"

	ResponseCodeTypeErrorInvalidPropertyDelete ResponseCodeType = "ErrorInvalidPropertyDelete"

	ResponseCodeTypeErrorInvalidPropertyForExists ResponseCodeType = "ErrorInvalidPropertyForExists"

	ResponseCodeTypeErrorInvalidPropertyForOperation ResponseCodeType = "ErrorInvalidPropertyForOperation"

	ResponseCodeTypeErrorInvalidPropertyRequest ResponseCodeType = "ErrorInvalidPropertyRequest"

	ResponseCodeTypeErrorInvalidPropertySet ResponseCodeType = "ErrorInvalidPropertySet"

	ResponseCodeTypeErrorInvalidPropertyUpdateSentMessage ResponseCodeType = "ErrorInvalidPropertyUpdateSentMessage"

	ResponseCodeTypeErrorInvalidProxySecurityContext ResponseCodeType = "ErrorInvalidProxySecurityContext"

	ResponseCodeTypeErrorInvalidPullSubscriptionId ResponseCodeType = "ErrorInvalidPullSubscriptionId"

	ResponseCodeTypeErrorInvalidPushSubscriptionUrl ResponseCodeType = "ErrorInvalidPushSubscriptionUrl"

	ResponseCodeTypeErrorInvalidRecipients ResponseCodeType = "ErrorInvalidRecipients"

	ResponseCodeTypeErrorInvalidRecipientSubfilter ResponseCodeType = "ErrorInvalidRecipientSubfilter"

	ResponseCodeTypeErrorInvalidRecipientSubfilterComparison ResponseCodeType = "ErrorInvalidRecipientSubfilterComparison"

	ResponseCodeTypeErrorInvalidRecipientSubfilterOrder ResponseCodeType = "ErrorInvalidRecipientSubfilterOrder"

	ResponseCodeTypeErrorInvalidRecipientSubfilterTextFilter ResponseCodeType = "ErrorInvalidRecipientSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidReferenceItem ResponseCodeType = "ErrorInvalidReferenceItem"

	ResponseCodeTypeErrorInvalidRequest ResponseCodeType = "ErrorInvalidRequest"

	ResponseCodeTypeErrorInvalidRestriction ResponseCodeType = "ErrorInvalidRestriction"

	ResponseCodeTypeErrorInvalidRetentionTagTypeMismatch ResponseCodeType = "ErrorInvalidRetentionTagTypeMismatch"

	ResponseCodeTypeErrorInvalidRetentionTagInvisible ResponseCodeType = "ErrorInvalidRetentionTagInvisible"

	ResponseCodeTypeErrorInvalidRetentionTagInheritance ResponseCodeType = "ErrorInvalidRetentionTagInheritance"

	ResponseCodeTypeErrorInvalidRetentionTagIdGuid ResponseCodeType = "ErrorInvalidRetentionTagIdGuid"

	ResponseCodeTypeErrorInvalidRoutingType ResponseCodeType = "ErrorInvalidRoutingType"

	ResponseCodeTypeErrorInvalidScheduledOofDuration ResponseCodeType = "ErrorInvalidScheduledOofDuration"

	ResponseCodeTypeErrorInvalidSchemaVersionForMailboxVersion ResponseCodeType = "ErrorInvalidSchemaVersionForMailboxVersion"

	ResponseCodeTypeErrorInvalidSecurityDescriptor ResponseCodeType = "ErrorInvalidSecurityDescriptor"

	ResponseCodeTypeErrorInvalidSendItemSaveSettings ResponseCodeType = "ErrorInvalidSendItemSaveSettings"

	ResponseCodeTypeErrorInvalidSerializedAccessToken ResponseCodeType = "ErrorInvalidSerializedAccessToken"

	ResponseCodeTypeErrorInvalidServerVersion ResponseCodeType = "ErrorInvalidServerVersion"

	ResponseCodeTypeErrorInvalidSid ResponseCodeType = "ErrorInvalidSid"

	ResponseCodeTypeErrorInvalidSIPUri ResponseCodeType = "ErrorInvalidSIPUri"

	ResponseCodeTypeErrorInvalidSmtpAddress ResponseCodeType = "ErrorInvalidSmtpAddress"

	ResponseCodeTypeErrorInvalidSubfilterType ResponseCodeType = "ErrorInvalidSubfilterType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotAttendeeType ResponseCodeType = "ErrorInvalidSubfilterTypeNotAttendeeType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotRecipientType ResponseCodeType = "ErrorInvalidSubfilterTypeNotRecipientType"

	ResponseCodeTypeErrorInvalidSubscription ResponseCodeType = "ErrorInvalidSubscription"

	ResponseCodeTypeErrorInvalidSubscriptionRequest ResponseCodeType = "ErrorInvalidSubscriptionRequest"

	ResponseCodeTypeErrorInvalidSyncStateData ResponseCodeType = "ErrorInvalidSyncStateData"

	ResponseCodeTypeErrorInvalidTimeInterval ResponseCodeType = "ErrorInvalidTimeInterval"

	ResponseCodeTypeErrorInvalidUserOofSettings ResponseCodeType = "ErrorInvalidUserOofSettings"

	ResponseCodeTypeErrorInvalidUserPrincipalName ResponseCodeType = "ErrorInvalidUserPrincipalName"

	ResponseCodeTypeErrorInvalidUserSid ResponseCodeType = "ErrorInvalidUserSid"

	ResponseCodeTypeErrorInvalidUserSidMissingUPN ResponseCodeType = "ErrorInvalidUserSidMissingUPN"

	ResponseCodeTypeErrorInvalidValueForProperty ResponseCodeType = "ErrorInvalidValueForProperty"

	ResponseCodeTypeErrorInvalidWatermark ResponseCodeType = "ErrorInvalidWatermark"

	ResponseCodeTypeErrorIPGatewayNotFound ResponseCodeType = "ErrorIPGatewayNotFound"

	ResponseCodeTypeErrorIrresolvableConflict ResponseCodeType = "ErrorIrresolvableConflict"

	ResponseCodeTypeErrorItemCorrupt ResponseCodeType = "ErrorItemCorrupt"

	ResponseCodeTypeErrorItemNotFound ResponseCodeType = "ErrorItemNotFound"

	ResponseCodeTypeErrorItemPropertyRequestFailed ResponseCodeType = "ErrorItemPropertyRequestFailed"

	ResponseCodeTypeErrorItemSave ResponseCodeType = "ErrorItemSave"

	ResponseCodeTypeErrorItemSavePropertyError ResponseCodeType = "ErrorItemSavePropertyError"

	ResponseCodeTypeErrorLegacyMailboxFreeBusyViewTypeNotMerged ResponseCodeType = "ErrorLegacyMailboxFreeBusyViewTypeNotMerged"

	ResponseCodeTypeErrorLocalServerObjectNotFound ResponseCodeType = "ErrorLocalServerObjectNotFound"

	ResponseCodeTypeErrorLogonAsNetworkServiceFailed ResponseCodeType = "ErrorLogonAsNetworkServiceFailed"

	ResponseCodeTypeErrorMailboxConfiguration ResponseCodeType = "ErrorMailboxConfiguration"

	ResponseCodeTypeErrorMailboxDataArrayEmpty ResponseCodeType = "ErrorMailboxDataArrayEmpty"

	ResponseCodeTypeErrorMailboxDataArrayTooBig ResponseCodeType = "ErrorMailboxDataArrayTooBig"

	ResponseCodeTypeErrorMailboxHoldNotFound ResponseCodeType = "ErrorMailboxHoldNotFound"

	ResponseCodeTypeErrorMailboxLogonFailed ResponseCodeType = "ErrorMailboxLogonFailed"

	ResponseCodeTypeErrorMailboxMoveInProgress ResponseCodeType = "ErrorMailboxMoveInProgress"

	ResponseCodeTypeErrorMailboxStoreUnavailable ResponseCodeType = "ErrorMailboxStoreUnavailable"

	ResponseCodeTypeErrorMailRecipientNotFound ResponseCodeType = "ErrorMailRecipientNotFound"

	ResponseCodeTypeErrorMailTipsDisabled ResponseCodeType = "ErrorMailTipsDisabled"

	ResponseCodeTypeErrorManagedFolderAlreadyExists ResponseCodeType = "ErrorManagedFolderAlreadyExists"

	ResponseCodeTypeErrorManagedFolderNotFound ResponseCodeType = "ErrorManagedFolderNotFound"

	ResponseCodeTypeErrorManagedFoldersRootFailure ResponseCodeType = "ErrorManagedFoldersRootFailure"

	ResponseCodeTypeErrorMeetingSuggestionGenerationFailed ResponseCodeType = "ErrorMeetingSuggestionGenerationFailed"

	ResponseCodeTypeErrorMessageDispositionRequired ResponseCodeType = "ErrorMessageDispositionRequired"

	ResponseCodeTypeErrorMessageSizeExceeded ResponseCodeType = "ErrorMessageSizeExceeded"

	ResponseCodeTypeErrorMimeContentConversionFailed ResponseCodeType = "ErrorMimeContentConversionFailed"

	ResponseCodeTypeErrorMimeContentInvalid ResponseCodeType = "ErrorMimeContentInvalid"

	ResponseCodeTypeErrorMimeContentInvalidBase64String ResponseCodeType = "ErrorMimeContentInvalidBase64String"

	ResponseCodeTypeErrorMissingArgument ResponseCodeType = "ErrorMissingArgument"

	ResponseCodeTypeErrorMissingEmailAddress ResponseCodeType = "ErrorMissingEmailAddress"

	ResponseCodeTypeErrorMissingEmailAddressForManagedFolder ResponseCodeType = "ErrorMissingEmailAddressForManagedFolder"

	ResponseCodeTypeErrorMissingInformationEmailAddress ResponseCodeType = "ErrorMissingInformationEmailAddress"

	ResponseCodeTypeErrorMissingInformationReferenceItemId ResponseCodeType = "ErrorMissingInformationReferenceItemId"

	ResponseCodeTypeErrorMissingItemForCreateItemAttachment ResponseCodeType = "ErrorMissingItemForCreateItemAttachment"

	ResponseCodeTypeErrorMissingManagedFolderId ResponseCodeType = "ErrorMissingManagedFolderId"

	ResponseCodeTypeErrorMissingRecipients ResponseCodeType = "ErrorMissingRecipients"

	ResponseCodeTypeErrorMissingUserIdInformation ResponseCodeType = "ErrorMissingUserIdInformation"

	ResponseCodeTypeErrorMoreThanOneAccessModeSpecified ResponseCodeType = "ErrorMoreThanOneAccessModeSpecified"

	ResponseCodeTypeErrorMoveCopyFailed ResponseCodeType = "ErrorMoveCopyFailed"

	ResponseCodeTypeErrorMoveDistinguishedFolder ResponseCodeType = "ErrorMoveDistinguishedFolder"

	ResponseCodeTypeErrorMultiLegacyMailboxAccess ResponseCodeType = "ErrorMultiLegacyMailboxAccess"

	ResponseCodeTypeErrorNameResolutionMultipleResults ResponseCodeType = "ErrorNameResolutionMultipleResults"

	ResponseCodeTypeErrorNameResolutionNoMailbox ResponseCodeType = "ErrorNameResolutionNoMailbox"

	ResponseCodeTypeErrorNameResolutionNoResults ResponseCodeType = "ErrorNameResolutionNoResults"

	ResponseCodeTypeErrorNoApplicableProxyCASServersAvailable ResponseCodeType = "ErrorNoApplicableProxyCASServersAvailable"

	ResponseCodeTypeErrorNoCalendar ResponseCodeType = "ErrorNoCalendar"

	ResponseCodeTypeErrorNoDestinationCASDueToKerberosRequirements ResponseCodeType = "ErrorNoDestinationCASDueToKerberosRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToSSLRequirements ResponseCodeType = "ErrorNoDestinationCASDueToSSLRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToVersionMismatch ResponseCodeType = "ErrorNoDestinationCASDueToVersionMismatch"

	ResponseCodeTypeErrorNoFolderClassOverride ResponseCodeType = "ErrorNoFolderClassOverride"

	ResponseCodeTypeErrorNoFreeBusyAccess ResponseCodeType = "ErrorNoFreeBusyAccess"

	ResponseCodeTypeErrorNonExistentMailbox ResponseCodeType = "ErrorNonExistentMailbox"

	ResponseCodeTypeErrorNonPrimarySmtpAddress ResponseCodeType = "ErrorNonPrimarySmtpAddress"

	ResponseCodeTypeErrorNoPropertyTagForCustomProperties ResponseCodeType = "ErrorNoPropertyTagForCustomProperties"

	ResponseCodeTypeErrorNoPublicFolderReplicaAvailable ResponseCodeType = "ErrorNoPublicFolderReplicaAvailable"

	ResponseCodeTypeErrorNoPublicFolderServerAvailable ResponseCodeType = "ErrorNoPublicFolderServerAvailable"

	ResponseCodeTypeErrorNoRespondingCASInDestinationSite ResponseCodeType = "ErrorNoRespondingCASInDestinationSite"

	ResponseCodeTypeErrorNotDelegate ResponseCodeType = "ErrorNotDelegate"

	ResponseCodeTypeErrorNotEnoughMemory ResponseCodeType = "ErrorNotEnoughMemory"

	ResponseCodeTypeErrorObjectTypeChanged ResponseCodeType = "ErrorObjectTypeChanged"

	ResponseCodeTypeErrorOccurrenceCrossingBoundary ResponseCodeType = "ErrorOccurrenceCrossingBoundary"

	ResponseCodeTypeErrorOccurrenceTimeSpanTooBig ResponseCodeType = "ErrorOccurrenceTimeSpanTooBig"

	ResponseCodeTypeErrorOperationNotAllowedWithPublicFolderRoot ResponseCodeType = "ErrorOperationNotAllowedWithPublicFolderRoot"

	ResponseCodeTypeErrorParentFolderIdRequired ResponseCodeType = "ErrorParentFolderIdRequired"

	ResponseCodeTypeErrorParentFolderNotFound ResponseCodeType = "ErrorParentFolderNotFound"

	ResponseCodeTypeErrorPasswordChangeRequired ResponseCodeType = "ErrorPasswordChangeRequired"

	ResponseCodeTypeErrorPasswordExpired ResponseCodeType = "ErrorPasswordExpired"

	ResponseCodeTypeErrorPhoneNumberNotDialable ResponseCodeType = "ErrorPhoneNumberNotDialable"

	ResponseCodeTypeErrorPropertyUpdate ResponseCodeType = "ErrorPropertyUpdate"

	ResponseCodeTypeErrorPromptPublishingOperationFailed ResponseCodeType = "ErrorPromptPublishingOperationFailed"

	ResponseCodeTypeErrorPropertyValidationFailure ResponseCodeType = "ErrorPropertyValidationFailure"

	ResponseCodeTypeErrorProxiedSubscriptionCallFailure ResponseCodeType = "ErrorProxiedSubscriptionCallFailure"

	ResponseCodeTypeErrorProxyCallFailed ResponseCodeType = "ErrorProxyCallFailed"

	ResponseCodeTypeErrorProxyGroupSidLimitExceeded ResponseCodeType = "ErrorProxyGroupSidLimitExceeded"

	ResponseCodeTypeErrorProxyRequestNotAllowed ResponseCodeType = "ErrorProxyRequestNotAllowed"

	ResponseCodeTypeErrorProxyRequestProcessingFailed ResponseCodeType = "ErrorProxyRequestProcessingFailed"

	ResponseCodeTypeErrorProxyServiceDiscoveryFailed ResponseCodeType = "ErrorProxyServiceDiscoveryFailed"

	ResponseCodeTypeErrorProxyTokenExpired ResponseCodeType = "ErrorProxyTokenExpired"

	ResponseCodeTypeErrorPublicFolderMailboxDiscoveryFailed ResponseCodeType = "ErrorPublicFolderMailboxDiscoveryFailed"

	ResponseCodeTypeErrorPublicFolderOperationFailed ResponseCodeType = "ErrorPublicFolderOperationFailed"

	ResponseCodeTypeErrorPublicFolderRequestProcessingFailed ResponseCodeType = "ErrorPublicFolderRequestProcessingFailed"

	ResponseCodeTypeErrorPublicFolderServerNotFound ResponseCodeType = "ErrorPublicFolderServerNotFound"

	ResponseCodeTypeErrorPublicFolderSyncException ResponseCodeType = "ErrorPublicFolderSyncException"

	ResponseCodeTypeErrorQueryFilterTooLong ResponseCodeType = "ErrorQueryFilterTooLong"

	ResponseCodeTypeErrorQuotaExceeded ResponseCodeType = "ErrorQuotaExceeded"

	ResponseCodeTypeErrorReadEventsFailed ResponseCodeType = "ErrorReadEventsFailed"

	ResponseCodeTypeErrorReadReceiptNotPending ResponseCodeType = "ErrorReadReceiptNotPending"

	ResponseCodeTypeErrorRecurrenceEndDateTooBig ResponseCodeType = "ErrorRecurrenceEndDateTooBig"

	ResponseCodeTypeErrorRecurrenceHasNoOccurrence ResponseCodeType = "ErrorRecurrenceHasNoOccurrence"

	ResponseCodeTypeErrorRemoveDelegatesFailed ResponseCodeType = "ErrorRemoveDelegatesFailed"

	ResponseCodeTypeErrorRequestAborted ResponseCodeType = "ErrorRequestAborted"

	ResponseCodeTypeErrorRequestStreamTooBig ResponseCodeType = "ErrorRequestStreamTooBig"

	ResponseCodeTypeErrorRequiredPropertyMissing ResponseCodeType = "ErrorRequiredPropertyMissing"

	ResponseCodeTypeErrorResolveNamesInvalidFolderType ResponseCodeType = "ErrorResolveNamesInvalidFolderType"

	ResponseCodeTypeErrorResolveNamesOnlyOneContactsFolderAllowed ResponseCodeType = "ErrorResolveNamesOnlyOneContactsFolderAllowed"

	ResponseCodeTypeErrorResponseSchemaValidation ResponseCodeType = "ErrorResponseSchemaValidation"

	ResponseCodeTypeErrorRestrictionTooLong ResponseCodeType = "ErrorRestrictionTooLong"

	ResponseCodeTypeErrorRestrictionTooComplex ResponseCodeType = "ErrorRestrictionTooComplex"

	ResponseCodeTypeErrorResultSetTooBig ResponseCodeType = "ErrorResultSetTooBig"

	ResponseCodeTypeErrorInvalidExchangeImpersonationHeaderData ResponseCodeType = "ErrorInvalidExchangeImpersonationHeaderData"

	ResponseCodeTypeErrorSavedItemFolderNotFound ResponseCodeType = "ErrorSavedItemFolderNotFound"

	ResponseCodeTypeErrorSchemaValidation ResponseCodeType = "ErrorSchemaValidation"

	ResponseCodeTypeErrorSearchFolderNotInitialized ResponseCodeType = "ErrorSearchFolderNotInitialized"

	ResponseCodeTypeErrorSendAsDenied ResponseCodeType = "ErrorSendAsDenied"

	ResponseCodeTypeErrorSendMeetingCancellationsRequired ResponseCodeType = "ErrorSendMeetingCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsOrCancellationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsOrCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsRequired"

	ResponseCodeTypeErrorSentMeetingRequestUpdate ResponseCodeType = "ErrorSentMeetingRequestUpdate"

	ResponseCodeTypeErrorSentTaskRequestUpdate ResponseCodeType = "ErrorSentTaskRequestUpdate"

	ResponseCodeTypeErrorServerBusy ResponseCodeType = "ErrorServerBusy"

	ResponseCodeTypeErrorServiceDiscoveryFailed ResponseCodeType = "ErrorServiceDiscoveryFailed"

	ResponseCodeTypeErrorStaleObject ResponseCodeType = "ErrorStaleObject"

	ResponseCodeTypeErrorSubmissionQuotaExceeded ResponseCodeType = "ErrorSubmissionQuotaExceeded"

	ResponseCodeTypeErrorSubscriptionAccessDenied ResponseCodeType = "ErrorSubscriptionAccessDenied"

	ResponseCodeTypeErrorSubscriptionDelegateAccessNotSupported ResponseCodeType = "ErrorSubscriptionDelegateAccessNotSupported"

	ResponseCodeTypeErrorSubscriptionNotFound ResponseCodeType = "ErrorSubscriptionNotFound"

	ResponseCodeTypeErrorSubscriptionUnsubscribed ResponseCodeType = "ErrorSubscriptionUnsubscribed"

	ResponseCodeTypeErrorSyncFolderNotFound ResponseCodeType = "ErrorSyncFolderNotFound"

	ResponseCodeTypeErrorTeamMailboxNotFound ResponseCodeType = "ErrorTeamMailboxNotFound"

	ResponseCodeTypeErrorTeamMailboxNotLinkedToSharePoint ResponseCodeType = "ErrorTeamMailboxNotLinkedToSharePoint"

	ResponseCodeTypeErrorTeamMailboxUrlValidationFailed ResponseCodeType = "ErrorTeamMailboxUrlValidationFailed"

	ResponseCodeTypeErrorTeamMailboxNotAuthorizedOwner ResponseCodeType = "ErrorTeamMailboxNotAuthorizedOwner"

	ResponseCodeTypeErrorTeamMailboxActiveToPendingDelete ResponseCodeType = "ErrorTeamMailboxActiveToPendingDelete"

	ResponseCodeTypeErrorTeamMailboxFailedSendingNotifications ResponseCodeType = "ErrorTeamMailboxFailedSendingNotifications"

	ResponseCodeTypeErrorTeamMailboxErrorUnknown ResponseCodeType = "ErrorTeamMailboxErrorUnknown"

	ResponseCodeTypeErrorTimeIntervalTooBig ResponseCodeType = "ErrorTimeIntervalTooBig"

	ResponseCodeTypeErrorTimeoutExpired ResponseCodeType = "ErrorTimeoutExpired"

	ResponseCodeTypeErrorTimeZone ResponseCodeType = "ErrorTimeZone"

	ResponseCodeTypeErrorToFolderNotFound ResponseCodeType = "ErrorToFolderNotFound"

	ResponseCodeTypeErrorTokenSerializationDenied ResponseCodeType = "ErrorTokenSerializationDenied"

	ResponseCodeTypeErrorTooManyObjectsOpened ResponseCodeType = "ErrorTooManyObjectsOpened"

	ResponseCodeTypeErrorUpdatePropertyMismatch ResponseCodeType = "ErrorUpdatePropertyMismatch"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADCreationFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADCreationFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNamingPolicy ResponseCodeType = "ErrorUnifiedGroupMailboxNamingPolicy"

	ResponseCodeTypeErrorUnifiedGroupMailboxDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNotFound ResponseCodeType = "ErrorUnifiedGroupMailboxNotFound"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateDelayed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateDelayed"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdatedPartialProperties ResponseCodeType = "ErrorUnifiedGroupMailboxUpdatedPartialProperties"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateFailed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxProvisionFailed ResponseCodeType = "ErrorUnifiedGroupMailboxProvisionFailed"

	ResponseCodeTypeErrorUnifiedMessagingDialPlanNotFound ResponseCodeType = "ErrorUnifiedMessagingDialPlanNotFound"

	ResponseCodeTypeErrorUnifiedMessagingReportDataNotFound ResponseCodeType = "ErrorUnifiedMessagingReportDataNotFound"

	ResponseCodeTypeErrorUnifiedMessagingPromptNotFound ResponseCodeType = "ErrorUnifiedMessagingPromptNotFound"

	ResponseCodeTypeErrorUnifiedMessagingRequestFailed ResponseCodeType = "ErrorUnifiedMessagingRequestFailed"

	ResponseCodeTypeErrorUnifiedMessagingServerNotFound ResponseCodeType = "ErrorUnifiedMessagingServerNotFound"

	ResponseCodeTypeErrorUnableToGetUserOofSettings ResponseCodeType = "ErrorUnableToGetUserOofSettings"

	ResponseCodeTypeErrorUnableToRemoveImContactFromGroup ResponseCodeType = "ErrorUnableToRemoveImContactFromGroup"

	ResponseCodeTypeErrorUnsupportedSubFilter ResponseCodeType = "ErrorUnsupportedSubFilter"

	ResponseCodeTypeErrorUnsupportedCulture ResponseCodeType = "ErrorUnsupportedCulture"

	ResponseCodeTypeErrorUnsupportedMapiPropertyType ResponseCodeType = "ErrorUnsupportedMapiPropertyType"

	ResponseCodeTypeErrorUnsupportedMimeConversion ResponseCodeType = "ErrorUnsupportedMimeConversion"

	ResponseCodeTypeErrorUnsupportedPathForQuery ResponseCodeType = "ErrorUnsupportedPathForQuery"

	ResponseCodeTypeErrorUnsupportedPathForSortGroup ResponseCodeType = "ErrorUnsupportedPathForSortGroup"

	ResponseCodeTypeErrorUnsupportedPropertyDefinition ResponseCodeType = "ErrorUnsupportedPropertyDefinition"

	ResponseCodeTypeErrorUnsupportedQueryFilter ResponseCodeType = "ErrorUnsupportedQueryFilter"

	ResponseCodeTypeErrorUnsupportedRecurrence ResponseCodeType = "ErrorUnsupportedRecurrence"

	ResponseCodeTypeErrorUnsupportedTypeForConversion ResponseCodeType = "ErrorUnsupportedTypeForConversion"

	ResponseCodeTypeErrorUpdateDelegatesFailed ResponseCodeType = "ErrorUpdateDelegatesFailed"

	ResponseCodeTypeErrorUserNotUnifiedMessagingEnabled ResponseCodeType = "ErrorUserNotUnifiedMessagingEnabled"

	ResponseCodeTypeErrorVoiceMailNotImplemented ResponseCodeType = "ErrorVoiceMailNotImplemented"

	ResponseCodeTypeErrorValueOutOfRange ResponseCodeType = "ErrorValueOutOfRange"

	ResponseCodeTypeErrorVirusDetected ResponseCodeType = "ErrorVirusDetected"

	ResponseCodeTypeErrorVirusMessageDeleted ResponseCodeType = "ErrorVirusMessageDeleted"

	ResponseCodeTypeErrorWebRequestInInvalidState ResponseCodeType = "ErrorWebRequestInInvalidState"

	ResponseCodeTypeErrorWin32InteropError ResponseCodeType = "ErrorWin32InteropError"

	ResponseCodeTypeErrorWorkingHoursSaveFailed ResponseCodeType = "ErrorWorkingHoursSaveFailed"

	ResponseCodeTypeErrorWorkingHoursXmlMalformed ResponseCodeType = "ErrorWorkingHoursXmlMalformed"

	ResponseCodeTypeErrorWrongServerVersion ResponseCodeType = "ErrorWrongServerVersion"

	ResponseCodeTypeErrorWrongServerVersionDelegate ResponseCodeType = "ErrorWrongServerVersionDelegate"

	ResponseCodeTypeErrorMissingInformationSharingFolderId ResponseCodeType = "ErrorMissingInformationSharingFolderId"

	ResponseCodeTypeErrorDuplicateSOAPHeader ResponseCodeType = "ErrorDuplicateSOAPHeader"

	ResponseCodeTypeErrorSharingSynchronizationFailed ResponseCodeType = "ErrorSharingSynchronizationFailed"

	ResponseCodeTypeErrorSharingNoExternalEwsAvailable ResponseCodeType = "ErrorSharingNoExternalEwsAvailable"

	ResponseCodeTypeErrorFreeBusyDLLimitReached ResponseCodeType = "ErrorFreeBusyDLLimitReached"

	ResponseCodeTypeErrorInvalidGetSharingFolderRequest ResponseCodeType = "ErrorInvalidGetSharingFolderRequest"

	ResponseCodeTypeErrorNotAllowedExternalSharingByPolicy ResponseCodeType = "ErrorNotAllowedExternalSharingByPolicy"

	ResponseCodeTypeErrorUserNotAllowedByPolicy ResponseCodeType = "ErrorUserNotAllowedByPolicy"

	ResponseCodeTypeErrorPermissionNotAllowedByPolicy ResponseCodeType = "ErrorPermissionNotAllowedByPolicy"

	ResponseCodeTypeErrorOrganizationNotFederated ResponseCodeType = "ErrorOrganizationNotFederated"

	ResponseCodeTypeErrorMailboxFailover ResponseCodeType = "ErrorMailboxFailover"

	ResponseCodeTypeErrorInvalidExternalSharingInitiator ResponseCodeType = "ErrorInvalidExternalSharingInitiator"

	ResponseCodeTypeErrorMessageTrackingPermanentError ResponseCodeType = "ErrorMessageTrackingPermanentError"

	ResponseCodeTypeErrorMessageTrackingTransientError ResponseCodeType = "ErrorMessageTrackingTransientError"

	ResponseCodeTypeErrorMessageTrackingNoSuchDomain ResponseCodeType = "ErrorMessageTrackingNoSuchDomain"

	ResponseCodeTypeErrorUserWithoutFederatedProxyAddress ResponseCodeType = "ErrorUserWithoutFederatedProxyAddress"

	ResponseCodeTypeErrorInvalidOrganizationRelationshipForFreeBusy ResponseCodeType = "ErrorInvalidOrganizationRelationshipForFreeBusy"

	ResponseCodeTypeErrorInvalidFederatedOrganizationId ResponseCodeType = "ErrorInvalidFederatedOrganizationId"

	ResponseCodeTypeErrorInvalidExternalSharingSubscriber ResponseCodeType = "ErrorInvalidExternalSharingSubscriber"

	ResponseCodeTypeErrorInvalidSharingData ResponseCodeType = "ErrorInvalidSharingData"

	ResponseCodeTypeErrorInvalidSharingMessage ResponseCodeType = "ErrorInvalidSharingMessage"

	ResponseCodeTypeErrorNotSupportedSharingMessage ResponseCodeType = "ErrorNotSupportedSharingMessage"

	ResponseCodeTypeErrorApplyConversationActionFailed ResponseCodeType = "ErrorApplyConversationActionFailed"

	ResponseCodeTypeErrorInboxRulesValidationError ResponseCodeType = "ErrorInboxRulesValidationError"

	ResponseCodeTypeErrorOutlookRuleBlobExists ResponseCodeType = "ErrorOutlookRuleBlobExists"

	ResponseCodeTypeErrorRulesOverQuota ResponseCodeType = "ErrorRulesOverQuota"

	ResponseCodeTypeErrorNewEventStreamConnectionOpened ResponseCodeType = "ErrorNewEventStreamConnectionOpened"

	ResponseCodeTypeErrorMissedNotificationEvents ResponseCodeType = "ErrorMissedNotificationEvents"

	ResponseCodeTypeErrorDuplicateLegacyDistinguishedName ResponseCodeType = "ErrorDuplicateLegacyDistinguishedName"

	ResponseCodeTypeErrorInvalidClientAccessTokenRequest ResponseCodeType = "ErrorInvalidClientAccessTokenRequest"

	ResponseCodeTypeErrorUnauthorizedClientAccessTokenRequest ResponseCodeType = "ErrorUnauthorizedClientAccessTokenRequest"

	ResponseCodeTypeErrorNoSpeechDetected ResponseCodeType = "ErrorNoSpeechDetected"

	ResponseCodeTypeErrorUMServerUnavailable ResponseCodeType = "ErrorUMServerUnavailable"

	ResponseCodeTypeErrorRecipientNotFound ResponseCodeType = "ErrorRecipientNotFound"

	ResponseCodeTypeErrorRecognizerNotInstalled ResponseCodeType = "ErrorRecognizerNotInstalled"

	ResponseCodeTypeErrorSpeechGrammarError ResponseCodeType = "ErrorSpeechGrammarError"

	ResponseCodeTypeErrorInvalidManagementRoleHeader ResponseCodeType = "ErrorInvalidManagementRoleHeader"

	ResponseCodeTypeErrorLocationServicesDisabled ResponseCodeType = "ErrorLocationServicesDisabled"

	ResponseCodeTypeErrorLocationServicesRequestTimedOut ResponseCodeType = "ErrorLocationServicesRequestTimedOut"

	ResponseCodeTypeErrorLocationServicesRequestFailed ResponseCodeType = "ErrorLocationServicesRequestFailed"

	ResponseCodeTypeErrorLocationServicesInvalidRequest ResponseCodeType = "ErrorLocationServicesInvalidRequest"

	ResponseCodeTypeErrorWeatherServiceDisabled ResponseCodeType = "ErrorWeatherServiceDisabled"

	ResponseCodeTypeErrorMailboxScopeNotAllowedWithoutQueryString ResponseCodeType = "ErrorMailboxScopeNotAllowedWithoutQueryString"

	ResponseCodeTypeErrorArchiveMailboxSearchFailed ResponseCodeType = "ErrorArchiveMailboxSearchFailed"

	ResponseCodeTypeErrorGetRemoteArchiveFolderFailed ResponseCodeType = "ErrorGetRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorFindRemoteArchiveFolderFailed ResponseCodeType = "ErrorFindRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorGetRemoteArchiveItemFailed ResponseCodeType = "ErrorGetRemoteArchiveItemFailed"

	ResponseCodeTypeErrorExportRemoteArchiveItemsFailed ResponseCodeType = "ErrorExportRemoteArchiveItemsFailed"

	ResponseCodeTypeErrorInvalidPhotoSize ResponseCodeType = "ErrorInvalidPhotoSize"

	ResponseCodeTypeErrorSearchQueryHasTooManyKeywords ResponseCodeType = "ErrorSearchQueryHasTooManyKeywords"

	ResponseCodeTypeErrorSearchTooManyMailboxes ResponseCodeType = "ErrorSearchTooManyMailboxes"

	ResponseCodeTypeErrorInvalidRetentionTagNone ResponseCodeType = "ErrorInvalidRetentionTagNone"

	ResponseCodeTypeErrorDiscoverySearchesDisabled ResponseCodeType = "ErrorDiscoverySearchesDisabled"

	ResponseCodeTypeErrorCalendarSeekToConditionNotSupported ResponseCodeType = "ErrorCalendarSeekToConditionNotSupported"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForAccept ResponseCodeType = "ErrorCalendarIsGroupMailboxForAccept"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForDecline ResponseCodeType = "ErrorCalendarIsGroupMailboxForDecline"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForTentative ResponseCodeType = "ErrorCalendarIsGroupMailboxForTentative"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForSuppressReadReceipt ResponseCodeType = "ErrorCalendarIsGroupMailboxForSuppressReadReceipt"

	ResponseCodeTypeErrorOrganizationAccessBlocked ResponseCodeType = "ErrorOrganizationAccessBlocked"

	ResponseCodeTypeErrorInvalidLicense ResponseCodeType = "ErrorInvalidLicense"

	ResponseCodeTypeErrorMessagePerFolderCountReceiveQuotaExceeded ResponseCodeType = "ErrorMessagePerFolderCountReceiveQuotaExceeded"

	ResponseCodeTypeErrorInvalidBulkActionType ResponseCodeType = "ErrorInvalidBulkActionType"

	ResponseCodeTypeErrorInvalidKeepNCount ResponseCodeType = "ErrorInvalidKeepNCount"

	ResponseCodeTypeErrorInvalidKeepNType ResponseCodeType = "ErrorInvalidKeepNType"

	ResponseCodeTypeErrorNoOAuthServerAvailableForRequest ResponseCodeType = "ErrorNoOAuthServerAvailableForRequest"

	ResponseCodeTypeErrorInstantSearchSessionExpired ResponseCodeType = "ErrorInstantSearchSessionExpired"

	ResponseCodeTypeErrorInstantSearchTimeout ResponseCodeType = "ErrorInstantSearchTimeout"

	ResponseCodeTypeErrorInstantSearchFailed ResponseCodeType = "ErrorInstantSearchFailed"

	ResponseCodeTypeErrorUnsupportedUserForExecuteSearch ResponseCodeType = "ErrorUnsupportedUserForExecuteSearch"

	ResponseCodeTypeErrorDuplicateExtendedKeywordDefinition ResponseCodeType = "ErrorDuplicateExtendedKeywordDefinition"

	ResponseCodeTypeErrorMissingExchangePrincipal ResponseCodeType = "ErrorMissingExchangePrincipal"

	ResponseCodeTypeErrorUnexpectedUnifiedGroupsCount ResponseCodeType = "ErrorUnexpectedUnifiedGroupsCount"

	ResponseCodeTypeErrorParsingXMLResponse ResponseCodeType = "ErrorParsingXMLResponse"

	ResponseCodeTypeErrorInvalidFederationOrganizationIdentifier ResponseCodeType = "ErrorInvalidFederationOrganizationIdentifier"

	ResponseCodeTypeErrorInvalidSweepRule ResponseCodeType = "ErrorInvalidSweepRule"

	ResponseCodeTypeErrorInvalidSweepRuleOperationType ResponseCodeType = "ErrorInvalidSweepRuleOperationType"

	ResponseCodeTypeErrorTargetDomainNotSupported ResponseCodeType = "ErrorTargetDomainNotSupported"

	ResponseCodeTypeErrorInvalidInternetWebProxyOnLocalServer ResponseCodeType = "ErrorInvalidInternetWebProxyOnLocalServer"

	ResponseCodeTypeErrorNoSenderRestrictionsSettingsFoundInRequest ResponseCodeType = "ErrorNoSenderRestrictionsSettingsFoundInRequest"

	ResponseCodeTypeErrorDuplicateSenderRestrictionsInputFound ResponseCodeType = "ErrorDuplicateSenderRestrictionsInputFound"

	ResponseCodeTypeErrorSenderRestrictionsUpdateFailed ResponseCodeType = "ErrorSenderRestrictionsUpdateFailed"

	ResponseCodeTypeErrorMessageSubmissionBlocked ResponseCodeType = "ErrorMessageSubmissionBlocked"

	ResponseCodeTypeErrorExceededMessageLimit ResponseCodeType = "ErrorExceededMessageLimit"

	ResponseCodeTypeErrorExceededMaxRecipientLimitBlock ResponseCodeType = "ErrorExceededMaxRecipientLimitBlock"

	ResponseCodeTypeErrorAccountSuspend ResponseCodeType = "ErrorAccountSuspend"

	ResponseCodeTypeErrorExceededMaxRecipientLimit ResponseCodeType = "ErrorExceededMaxRecipientLimit"

	ResponseCodeTypeErrorMessageBlocked ResponseCodeType = "ErrorMessageBlocked"

	ResponseCodeTypeErrorAccountSuspendShowTierUpgrade ResponseCodeType = "ErrorAccountSuspendShowTierUpgrade"

	ResponseCodeTypeErrorExceededMessageLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMessageLimitShowTierUpgrade"

	ResponseCodeTypeErrorExceededMaxRecipientLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMaxRecipientLimitShowTierUpgrade"

	ResponseCodeTypeErrorInvalidLongitude ResponseCodeType = "ErrorInvalidLongitude"

	ResponseCodeTypeErrorInvalidLatitude ResponseCodeType = "ErrorInvalidLatitude"

	ResponseCodeTypeErrorProxySoapException ResponseCodeType = "ErrorProxySoapException"

	ResponseCodeTypeErrorUnifiedGroupAlreadyExists ResponseCodeType = "ErrorUnifiedGroupAlreadyExists"

	ResponseCodeTypeErrorUnifiedGroupAadAuthorizationRequestDenied ResponseCodeType = "ErrorUnifiedGroupAadAuthorizationRequestDenied"

	ResponseCodeTypeErrorUnifiedGroupCreationDisabled ResponseCodeType = "ErrorUnifiedGroupCreationDisabled"

	ResponseCodeTypeErrorMarketPlaceExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorMarketPlaceExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorNewerExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerExtensionAlreadyInstalled"

	ResponseCodeTypeErrorNewerMarketPlaceExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerMarketPlaceExtensionAlreadyInstalled"

	ResponseCodeTypeErrorInvalidExtensionId ResponseCodeType = "ErrorInvalidExtensionId"

	ResponseCodeTypeErrorCannotUninstallProvidedExtensions ResponseCodeType = "ErrorCannotUninstallProvidedExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallMarketPlaceExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallMarketPlaceExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallReadWriteMailboxExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallReadWriteMailboxExtensions"

	ResponseCodeTypeErrorInvalidReportMessageActionType ResponseCodeType = "ErrorInvalidReportMessageActionType"

	ResponseCodeTypeErrorCannotDownloadExtensionManifest ResponseCodeType = "ErrorCannotDownloadExtensionManifest"

	ResponseCodeTypeErrorCalendarForwardActionNotAllowed ResponseCodeType = "ErrorCalendarForwardActionNotAllowed"

	ResponseCodeTypeErrorUnifiedGroupAliasNamingPolicy ResponseCodeType = "ErrorUnifiedGroupAliasNamingPolicy"

	ResponseCodeTypeErrorSubscriptionsDisabledForGroup ResponseCodeType = "ErrorSubscriptionsDisabledForGroup"
)

type ListOfExtensionIdsType []GuidType

type GetFolder GetFolderType

type UploadItems UploadItemsType

type UploadItemsResponse UploadItemsResponseType

type ExportItems ExportItemsType

type ExportItemsResponse ExportItemsResponseType

type CreateFolder CreateFolderType

type FindFolder FindFolderType

type FindFolderResponse FindFolderResponseType

type DeleteFolder DeleteFolderType

type DeleteFolderResponse DeleteFolderResponseType

type EmptyFolder EmptyFolderType

type EmptyFolderResponse EmptyFolderResponseType

type MoveFolder MoveFolderType

type CopyFolder CopyFolderType

type UpdateFolder UpdateFolderType

type CreateFolderResponse CreateFolderResponseType

type GetFolderResponse GetFolderResponseType

type UpdateFolderResponse UpdateFolderResponseType

type MoveFolderResponse MoveFolderResponseType

type CopyFolderResponse CopyFolderResponseType

type CreateFolderPath CreateFolderPathType

type CreateFolderPathResponse CreateFolderPathResponseType

type GetItem GetItemType

type CreateItem CreateItemType

type UpdateItem UpdateItemType

type UpdateItemInRecoverableItems UpdateItemInRecoverableItemsType

type DeleteItem DeleteItemType

type MoveItem MoveItemType

type CopyItem CopyItemType

type ArchiveItem ArchiveItemType

type SendItem SendItemType

type SendItemResponse SendItemResponseType

type FindItem FindItemType

type FindConversation FindConversationType

type FindConversationResponse FindConversationResponseMessageType

type PerformInstantSearch PerformInstantSearchRequest

type EndInstantSearchSession EndInstantSearchSessionRequest

type ApplyConversationAction ApplyConversationActionType

type ApplyConversationActionResponse ApplyConversationActionResponseType

type FindPeople FindPeopleType

type FindPeopleResponse FindPeopleResponseMessageType

type FindTags FindTagsType

type FindTagsResponse FindTagsResponseMessageType

type AddTag AddTagType

type AddTagResponse AddTagResponseMessageType

type HideTag HideTagType

type HideTagResponse HideTagResponseMessageType

type GetPersona GetPersonaType

type GetPersonaResponseMessage GetPersonaResponseMessageType

type CreateAttachment CreateAttachmentType

type CreateAttachmentResponse CreateAttachmentResponseType

type DeleteAttachment DeleteAttachmentType

type DeleteAttachmentResponse DeleteAttachmentResponseType

type GetAttachment GetAttachmentType

type GetAttachmentResponse GetAttachmentResponseType

type CreateItemResponse CreateItemResponseType

type UpdateItemResponse UpdateItemResponseType

type UpdateItemInRecoverableItemsResponse UpdateItemInRecoverableItemsResponseType

type GetItemResponse GetItemResponseType

type MoveItemResponse MoveItemResponseType

type CopyItemResponse CopyItemResponseType

type DeleteItemResponse DeleteItemResponseType

type FindItemResponse FindItemResponseType

type ArchiveItemResponse ArchiveItemResponseType

type GetClientAccessToken GetClientAccessTokenType

type GetClientAccessTokenResponse GetClientAccessTokenResponseType

type GetFocusedOtherOverrides GetFocusedOtherOverridesRequestType

type GetFocusedOtherOverridesResponse GetFocusedOtherOverridesResponseType

type CreateOrUpdateFocusedOtherOverride CreateOrUpdateFocusedOtherOverrideRequestType

type CreateOrUpdateFocusedOtherOverrideResponse CreateOrUpdateFocusedOtherOverrideResponseType

type DeleteFocusedOtherOverride DeleteFocusedOtherOverrideRequestType

type DeleteFocusedOtherOverrideResponse DeleteFocusedOtherOverrideResponseType

type ResolveNames ResolveNamesType

type ResolveNamesResponse ResolveNamesResponseType

type GetPasswordExpirationDate GetPasswordExpirationDateType

type GetPasswordExpirationDateResponse GetPasswordExpirationDateResponseMessageType

type GetMailTips GetMailTipsType

type GetMailTipsResponse GetMailTipsResponseMessageType

type PlayOnPhone PlayOnPhoneType

type PlayOnPhoneResponse PlayOnPhoneResponseMessageType

type GetPhoneCallInformation GetPhoneCallInformationType

type GetPhoneCallInformationResponse GetPhoneCallInformationResponseMessageType

type DisconnectPhoneCall DisconnectPhoneCallType

type DisconnectPhoneCallResponse DisconnectPhoneCallResponseMessageType

type ExpandDL ExpandDLType

type ExpandDLResponse ExpandDLResponseType

type GetServerTimeZones GetServerTimeZonesType

type GetServerTimeZonesResponse GetServerTimeZonesResponseType

type CreateManagedFolder CreateManagedFolderRequestType

type CreateManagedFolderResponse CreateManagedFolderResponseType

type Subscribe SubscribeType

type SubscribeResponse SubscribeResponseType

type Unsubscribe UnsubscribeType

type UnsubscribeResponse UnsubscribeResponseType

type GetEvents GetEventsType

type GetEventsResponse GetEventsResponseType

type GetStreamingEvents GetStreamingEventsType

type GetStreamingEventsResponse GetStreamingEventsResponseType

type SendNotification SendNotificationResponseType

type SendNotificationResult SendNotificationResultType

type SyncFolderHierarchy SyncFolderHierarchyType

type SyncFolderHierarchyResponse SyncFolderHierarchyResponseType

type SyncFolderItems SyncFolderItemsType

type SyncFolderItemsResponse SyncFolderItemsResponseType

type GetUserAvailabilityRequest GetUserAvailabilityRequestType

type GetUserAvailabilityResponse GetUserAvailabilityResponseType

type ConvertId ConvertIdType

type ConvertIdResponse ConvertIdResponseType

type GetDelegate GetDelegateType

type GetDelegateResponse GetDelegateResponseMessageType

type AddDelegate AddDelegateType

type AddDelegateResponse AddDelegateResponseMessageType

type RemoveDelegate RemoveDelegateType

type RemoveDelegateResponse RemoveDelegateResponseMessageType

type UpdateDelegate UpdateDelegateType

type UpdateDelegateResponse UpdateDelegateResponseMessageType

type GetSharingMetadata GetSharingMetadataType

type GetSharingMetadataResponse GetSharingMetadataResponseMessageType

type RefreshSharingFolder RefreshSharingFolderType

type RefreshSharingFolderResponse RefreshSharingFolderResponseMessageType

type GetSharingFolder GetSharingFolderType

type GetSharingFolderResponse GetSharingFolderResponseMessageType

type CreateUserConfiguration CreateUserConfigurationType

type CreateUserConfigurationResponse CreateUserConfigurationResponseType

type DeleteUserConfiguration DeleteUserConfigurationType

type DeleteUserConfigurationResponse DeleteUserConfigurationResponseType

type GetUserConfiguration GetUserConfigurationType

type GetUserConfigurationResponse GetUserConfigurationResponseType

type GetSpecificUserConfiguration GetSpecificUserConfigurationType

type GetSpecificUserConfigurationResponse GetSpecificUserConfigurationResponseType

type UpdateUserConfiguration UpdateUserConfigurationType

type UpdateUserConfigurationResponse UpdateUserConfigurationResponseType

type SetTeamMailbox SetTeamMailboxRequestType

type UnpinTeamMailbox UnpinTeamMailboxRequestType

type SetTeamMailboxResponse SetTeamMailboxResponseMessageType

type UnpinTeamMailboxResponse UnpinTeamMailboxResponseMessageType

type GetRoomLists GetRoomListsType

type GetRoomListsResponse GetRoomListsResponseMessageType

type GetRooms GetRoomsType

type GetRoomsResponse GetRoomsResponseMessageType

type GetReminders GetRemindersType

type GetRemindersResponse GetRemindersResponseMessageType

type PerformReminderAction PerformReminderActionType

type PerformReminderActionResponse PerformReminderActionResponseMessageType

type GetServiceConfiguration GetServiceConfigurationType

type GetServiceConfigurationResponse GetServiceConfigurationResponseMessageType

type FindMessageTrackingReport FindMessageTrackingReportRequestType

type FindMessageTrackingReportResponse FindMessageTrackingReportResponseMessageType

type GetMessageTrackingReport GetMessageTrackingReportRequestType

type GetMessageTrackingReportResponse GetMessageTrackingReportResponseMessageType

type GetInboxRules GetInboxRulesRequestType

type GetInboxRulesResponse GetInboxRulesResponseType

type UpdateInboxRules UpdateInboxRulesRequestType

type UpdateInboxRulesResponse UpdateInboxRulesResponseType

type FindMailboxStatisticsByKeywords FindMailboxStatisticsByKeywordsType

type FindMailboxStatisticsByKeywordsResponse FindMailboxStatisticsByKeywordsResponseType

type GetSearchableMailboxes GetSearchableMailboxesType

type GetSearchableMailboxesResponse GetSearchableMailboxesResponseMessageType

type SearchMailboxes SearchMailboxesType

type SearchMailboxesResponse SearchMailboxesResponseType

type GetDiscoverySearchConfiguration GetDiscoverySearchConfigurationType

type GetDiscoverySearchConfigurationResponse GetDiscoverySearchConfigurationResponseMessageType

type GetHoldOnMailboxes GetHoldOnMailboxesType

type GetHoldOnMailboxesResponse GetHoldOnMailboxesResponseMessageType

type SetHoldOnMailboxes SetHoldOnMailboxesType

type SetHoldOnMailboxesResponse SetHoldOnMailboxesResponseMessageType

type GetNonIndexableItemStatistics GetNonIndexableItemStatisticsType

type GetNonIndexableItemStatisticsResponse GetNonIndexableItemStatisticsResponseMessageType

type GetNonIndexableItemDetails GetNonIndexableItemDetailsType

type GetNonIndexableItemDetailsResponse GetNonIndexableItemDetailsResponseMessageType

type MarkAllItemsAsRead MarkAllItemsAsReadType

type MarkAllItemsAsReadResponse MarkAllItemsAsReadResponseType

type GetConversationItems GetConversationItemsType

type GetConversationItemsResponse GetConversationItemsResponseType

type GetOMEConfiguration GetOMEConfigurationType

type GetOMEConfigurationResponse OMEConfigurationResponseType

type SetOMEConfiguration SetOMEConfigurationType

type SetOMEConfigurationResponse SetOMEConfigurationResponseType

type GetAppManifests GetAppManifestsType

type GetAppManifestsResponse GetAppManifestsResponseType

type GetAppMarketplaceUrl GetAppMarketplaceUrlType

type GetAppMarketplaceUrlResponse GetAppMarketplaceUrlResponseMessageType

type MarkAsJunk MarkAsJunkType

type MarkAsJunkResponse MarkAsJunkResponseType

type ReportMessage ReportMessageType

type ReportMessageResponse ReportMessageResponseType

type InstallApp InstallAppType

type InstallAppResponse InstallAppResponseType

type UninstallApp UninstallAppType

type UninstallAppResponse UninstallAppResponseType

type DisableApp DisableAppType

type DisableAppResponse DisableAppResponseType

type AddNewImContactToGroup AddNewImContactToGroupType

type AddNewImContactToGroupResponse AddNewImContactToGroupResponseMessageType

type AddNewTelUriContactToGroup AddNewTelUriContactToGroupType

type AddNewTelUriContactToGroupResponse AddNewTelUriContactToGroupResponseMessageType

type AddImContactToGroup AddImContactToGroupType

type AddImContactToGroupResponse AddImContactToGroupResponseMessageType

type RemoveImContactFromGroup RemoveImContactFromGroupType

type RemoveImContactFromGroupResponse RemoveImContactFromGroupResponseMessageType

type AddImGroup AddImGroupType

type AddImGroupResponse AddImGroupResponseMessageType

type AddDistributionGroupToImList AddDistributionGroupToImListType

type AddDistributionGroupToImListResponse AddDistributionGroupToImListResponseMessageType

type GetImItemList GetImItemListType

type GetImItemListResponse GetImItemListResponseMessageType

type GetImItems GetImItemsType

type GetImItemsResponse GetImItemsResponseMessageType

type RemoveContactFromImList RemoveContactFromImListType

type RemoveContactFromImListResponse RemoveContactFromImListResponseMessageType

type RemoveDistributionGroupFromImList RemoveDistributionGroupFromImListType

type RemoveDistributionGroupFromImListResponse RemoveDistributionGroupFromImListResponseMessageType

type RemoveImGroup RemoveImGroupType

type RemoveImGroupResponse RemoveImGroupResponseMessageType

type SetImGroup SetImGroupType

type SetImGroupResponse SetImGroupResponseMessageType

type SetImListMigrationCompleted SetImListMigrationCompletedType

type SetImListMigrationCompletedResponse SetImListMigrationCompletedResponseMessageType

type GetUserRetentionPolicyTags GetUserRetentionPolicyTagsType

type GetUserRetentionPolicyTagsResponse GetUserRetentionPolicyTagsResponseMessageType

type GetUserPhoto GetUserPhotoType

type GetUserPhotoResponse GetUserPhotoResponseMessageType

type GetMeetingSpace GetMeetingSpaceType

type GetMeetingSpaceResponseMessage GetMeetingSpaceResponseMessageType

type CreateMeetingSpace CreateMeetingSpaceType

type CreateMeetingSpaceResponseMessage CreateMeetingSpaceResponseMessageType

type UpdateMeetingSpace UpdateMeetingSpaceType

type UpdateMeetingSpaceResponseMessage UpdateMeetingSpaceResponseMessageType

type FindMeetingSpaceByJoinUrl FindMeetingSpaceByJoinUrlType

type FindMeetingSpaceByJoinUrlResponseMessage FindMeetingSpaceByJoinUrlResponseMessageType

type DeleteMeetingSpace DeleteMeetingSpaceType

type DeleteMeetingSpaceResponseMessage DeleteMeetingSpaceResponseMessageType

type GetMeetingInstanceRequest GetMeetingInstanceRequestType

type GetMeetingInstanceResponse GetMeetingInstanceResponseMessageType

type CreateMeetingInstanceRequest CreateMeetingInstanceRequestType

type CreateMeetingInstanceResponse CreateMeetingInstanceResponseMessageType

type UpdateMeetingInstanceRequest UpdateMeetingInstanceRequestType

type UpdateMeetingInstanceResponse UpdateMeetingInstanceResponseMessageType

type DeleteMeetingInstanceRequest DeleteMeetingInstanceRequestType

type DeleteMeetingInstanceResponse DeleteMeetingInstanceResponseMessageType

type SetUserPhoto SetUserPhotoType

type SetUserPhotoResponse SetUserPhotoResponseMessageType

type RegisterConsent RegisterConsentType

type RegisterConsentResponse RegisterConsentResponseMessageType

type FindAvailableMeetingTimes FindAvailableMeetingTimesType

type FindAvailableMeetingTimesResponse FindAvailableMeetingTimesResponseMessageType

type FindMeetingTimeCandidates FindMeetingTimeCandidatesType

type FindMeetingTimeCandidatesResponse FindMeetingTimeCandidatesResponseMessageType

type StartSearchSessionResponse StartSearchSessionResponseMessage

type GetSearchSuggestionsResponse GetSearchSuggestionsResponseMessage

type DeleteSearchSuggestionResponse DeleteSearchSuggestionResponseMessageType

type ExecuteSearchResponse ExecuteSearchResponseMessage

type EndSearchSessionResponse EndSearchSessionResponseMessage

type GetLastPrivateCatalogUpdate GetLastPrivateCatalogUpdateType

type GetLastPrivateCatalogUpdateResponse GetLastPrivateCatalogUpdateResponseType

type GetPrivateCatalogAddIns GetPrivateCatalogAddInsType

type GetPrivateCatalogAddInsResponse GetPrivateCatalogAddInsResponseType

type ResponseMessageType struct {
	MessageText string `xml:"m:MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode *ResponseCodeType `xml:"m:ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	DescriptiveLinkKey int32 `xml:"m:DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty"`

	MessageXml struct {
	} `MessageXml,omitempty" json:"MessageXml,omitempty"`

	ResponseClass *ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type ArrayOfResponseMessagesType struct {
	XMLName xml.Name `xml:"m:ResponseMessages"`

	CreateItemResponseMessage *ItemInfoResponseMessageType `xml:"m:CreateItemResponseMessage,omitempty" json:"CreateItemResponseMessage,omitempty"`

	DeleteItemResponseMessage *DeleteItemResponseMessageType `xml:"m:DeleteItemResponseMessage,omitempty" json:"DeleteItemResponseMessage,omitempty"`

	GetItemResponseMessage *ItemInfoResponseMessageType `xml:"m:GetItemResponseMessage,omitempty" json:"GetItemResponseMessage,omitempty"`

	UpdateItemResponseMessage *UpdateItemResponseMessageType `xml:"m:UpdateItemResponseMessage,omitempty" json:"UpdateItemResponseMessage,omitempty"`

	UpdateItemInRecoverableItemsResponseMessage *UpdateItemInRecoverableItemsResponseMessageType `xml:"m:UpdateItemInRecoverableItemsResponseMessage,omitempty" json:"UpdateItemInRecoverableItemsResponseMessage,omitempty"`

	SendItemResponseMessage *ResponseMessageType `xml:"m:SendItemResponseMessage,omitempty" json:"SendItemResponseMessage,omitempty"`

	DeleteFolderResponseMessage *ResponseMessageType `xml:"m:DeleteFolderResponseMessage,omitempty" json:"DeleteFolderResponseMessage,omitempty"`

	EmptyFolderResponseMessage *ResponseMessageType `xml:"m:EmptyFolderResponseMessage,omitempty" json:"EmptyFolderResponseMessage,omitempty"`

	CreateFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:CreateFolderResponseMessage,omitempty" json:"CreateFolderResponseMessage,omitempty"`

	GetFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:GetFolderResponseMessage,omitempty" json:"GetFolderResponseMessage,omitempty"`

	FindFolderResponseMessage *FindFolderResponseMessageType `xml:"m:FindFolderResponseMessage,omitempty" json:"FindFolderResponseMessage,omitempty"`

	UpdateFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:UpdateFolderResponseMessage,omitempty" json:"UpdateFolderResponseMessage,omitempty"`

	MoveFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:MoveFolderResponseMessage,omitempty" json:"MoveFolderResponseMessage,omitempty"`

	CopyFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:CopyFolderResponseMessage,omitempty" json:"CopyFolderResponseMessage,omitempty"`

	CreateFolderPathResponseMessage *FolderInfoResponseMessageType `xml:"m:CreateFolderPathResponseMessage,omitempty" json:"CreateFolderPathResponseMessage,omitempty"`

	CreateAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"m:CreateAttachmentResponseMessage,omitempty" json:"CreateAttachmentResponseMessage,omitempty"`

	DeleteAttachmentResponseMessage *DeleteAttachmentResponseMessageType `xml:"m:DeleteAttachmentResponseMessage,omitempty" json:"DeleteAttachmentResponseMessage,omitempty"`

	GetAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"m:GetAttachmentResponseMessage,omitempty" json:"GetAttachmentResponseMessage,omitempty"`

	UploadItemsResponseMessage *UploadItemsResponseMessageType `xml:"m:UploadItemsResponseMessage,omitempty" json:"UploadItemsResponseMessage,omitempty"`

	ExportItemsResponseMessage *ExportItemsResponseMessageType `xml:"m:ExportItemsResponseMessage,omitempty" json:"ExportItemsResponseMessage,omitempty"`

	MarkAllItemsAsReadResponseMessage *ResponseMessageType `xml:"m:MarkAllItemsAsReadResponseMessage,omitempty" json:"MarkAllItemsAsReadResponseMessage,omitempty"`

	GetClientAccessTokenResponseMessage *GetClientAccessTokenResponseMessageType `xml:"m:GetClientAccessTokenResponseMessage,omitempty" json:"GetClientAccessTokenResponseMessage,omitempty"`

	GetAppManifestsResponseMessage *ResponseMessageType `xml:"m:GetAppManifestsResponseMessage,omitempty" json:"GetAppManifestsResponseMessage,omitempty"`

	SetClientExtensionResponseMessage *ResponseMessageType `xml:"m:SetClientExtensionResponseMessage,omitempty" json:"SetClientExtensionResponseMessage,omitempty"`

	GetOMEConfigurationResponseMessage *ResponseMessageType `xml:"m:GetOMEConfigurationResponseMessage,omitempty" json:"GetOMEConfigurationResponseMessage,omitempty"`

	SetOMEConfigurationResponseMessage *ResponseMessageType `xml:"m:SetOMEConfigurationResponseMessage,omitempty" json:"SetOMEConfigurationResponseMessage,omitempty"`

	FindItemResponseMessage *FindItemResponseMessageType `xml:"m:FindItemResponseMessage,omitempty" json:"FindItemResponseMessage,omitempty"`

	MoveItemResponseMessage *ItemInfoResponseMessageType `xml:"m:MoveItemResponseMessage,omitempty" json:"MoveItemResponseMessage,omitempty"`

	ArchiveItemResponseMessage *ItemInfoResponseMessageType `xml:"m:ArchiveItemResponseMessage,omitempty" json:"ArchiveItemResponseMessage,omitempty"`

	CopyItemResponseMessage *ItemInfoResponseMessageType `xml:"m:CopyItemResponseMessage,omitempty" json:"CopyItemResponseMessage,omitempty"`

	ResolveNamesResponseMessage *ResolveNamesResponseMessageType `xml:"m:ResolveNamesResponseMessage,omitempty" json:"ResolveNamesResponseMessage,omitempty"`

	ExpandDLResponseMessage *ExpandDLResponseMessageType `xml:"m:ExpandDLResponseMessage,omitempty" json:"ExpandDLResponseMessage,omitempty"`

	GetServerTimeZonesResponseMessage *GetServerTimeZonesResponseMessageType `xml:"m:GetServerTimeZonesResponseMessage,omitempty" json:"GetServerTimeZonesResponseMessage,omitempty"`

	GetEventsResponseMessage *GetEventsResponseMessageType `xml:"m:GetEventsResponseMessage,omitempty" json:"GetEventsResponseMessage,omitempty"`

	GetStreamingEventsResponseMessage *GetStreamingEventsResponseMessageType `xml:"m:GetStreamingEventsResponseMessage,omitempty" json:"GetStreamingEventsResponseMessage,omitempty"`

	SubscribeResponseMessage *SubscribeResponseMessageType `xml:"m:SubscribeResponseMessage,omitempty" json:"SubscribeResponseMessage,omitempty"`

	UnsubscribeResponseMessage *ResponseMessageType `xml:"m:UnsubscribeResponseMessage,omitempty" json:"UnsubscribeResponseMessage,omitempty"`

	SendNotificationResponseMessage *SendNotificationResponseMessageType `xml:"m:SendNotificationResponseMessage,omitempty" json:"SendNotificationResponseMessage,omitempty"`

	SyncFolderHierarchyResponseMessage *SyncFolderHierarchyResponseMessageType `xml:"m:SyncFolderHierarchyResponseMessage,omitempty" json:"SyncFolderHierarchyResponseMessage,omitempty"`

	SyncFolderItemsResponseMessage *SyncFolderItemsResponseMessageType `xml:"m:SyncFolderItemsResponseMessage,omitempty" json:"SyncFolderItemsResponseMessage,omitempty"`

	CreateManagedFolderResponseMessage *FolderInfoResponseMessageType `xml:"m:CreateManagedFolderResponseMessage,omitempty" json:"CreateManagedFolderResponseMessage,omitempty"`

	ConvertIdResponseMessage *ConvertIdResponseMessageType `xml:"m:ConvertIdResponseMessage,omitempty" json:"ConvertIdResponseMessage,omitempty"`

	GetSharingMetadataResponseMessage *GetSharingMetadataResponseMessageType `xml:"m:GetSharingMetadataResponseMessage,omitempty" json:"GetSharingMetadataResponseMessage,omitempty"`

	RefreshSharingFolderResponseMessage *RefreshSharingFolderResponseMessageType `xml:"m:RefreshSharingFolderResponseMessage,omitempty" json:"RefreshSharingFolderResponseMessage,omitempty"`

	GetSharingFolderResponseMessage *GetSharingFolderResponseMessageType `xml:"m:GetSharingFolderResponseMessage,omitempty" json:"GetSharingFolderResponseMessage,omitempty"`

	CreateUserConfigurationResponseMessage *ResponseMessageType `xml:"m:CreateUserConfigurationResponseMessage,omitempty" json:"CreateUserConfigurationResponseMessage,omitempty"`

	DeleteUserConfigurationResponseMessage *ResponseMessageType `xml:"m:DeleteUserConfigurationResponseMessage,omitempty" json:"DeleteUserConfigurationResponseMessage,omitempty"`

	GetUserConfigurationResponseMessage *GetUserConfigurationResponseMessageType `xml:"m:GetUserConfigurationResponseMessage,omitempty" json:"GetUserConfigurationResponseMessage,omitempty"`

	GetSpecificUserConfigurationResponseMessage *GetSpecificUserConfigurationResponseMessageType `xml:"m:GetSpecificUserConfigurationResponseMessage,omitempty" json:"GetSpecificUserConfigurationResponseMessage,omitempty"`

	UpdateUserConfigurationResponseMessage *ResponseMessageType `xml:"m:UpdateUserConfigurationResponseMessage,omitempty" json:"UpdateUserConfigurationResponseMessage,omitempty"`

	GetRoomListsResponse *GetRoomListsResponseMessageType `xml:"m:GetRoomListsResponse,omitempty" json:"GetRoomListsResponse,omitempty"`

	GetRoomsResponse *GetRoomsResponseMessageType `xml:"m:GetRoomsResponse,omitempty" json:"GetRoomsResponse,omitempty"`

	GetRemindersResponse *GetRemindersResponseMessageType `xml:"m:GetRemindersResponse,omitempty" json:"GetRemindersResponse,omitempty"`

	PerformReminderActionResponse *PerformReminderActionResponseMessageType `xml:"m:PerformReminderActionResponse,omitempty" json:"PerformReminderActionResponse,omitempty"`

	ApplyConversationActionResponseMessage *ApplyConversationActionResponseMessageType `xml:"m:ApplyConversationActionResponseMessage,omitempty" json:"ApplyConversationActionResponseMessage,omitempty"`

	FindMailboxStatisticsByKeywordsResponseMessage *FindMailboxStatisticsByKeywordsResponseMessageType `xml:"m:FindMailboxStatisticsByKeywordsResponseMessage,omitempty" json:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty"`

	GetSearchableMailboxesResponseMessage *GetSearchableMailboxesResponseMessageType `xml:"m:GetSearchableMailboxesResponseMessage,omitempty" json:"GetSearchableMailboxesResponseMessage,omitempty"`

	SearchMailboxesResponseMessage *SearchMailboxesResponseMessageType `xml:"m:SearchMailboxesResponseMessage,omitempty" json:"SearchMailboxesResponseMessage,omitempty"`

	GetDiscoverySearchConfigurationResponseMessage *GetDiscoverySearchConfigurationResponseMessageType `xml:"m:GetDiscoverySearchConfigurationResponseMessage,omitempty" json:"GetDiscoverySearchConfigurationResponseMessage,omitempty"`

	GetHoldOnMailboxesResponseMessage *GetHoldOnMailboxesResponseMessageType `xml:"m:GetHoldOnMailboxesResponseMessage,omitempty" json:"GetHoldOnMailboxesResponseMessage,omitempty"`

	SetHoldOnMailboxesResponseMessage *SetHoldOnMailboxesResponseMessageType `xml:"m:SetHoldOnMailboxesResponseMessage,omitempty" json:"SetHoldOnMailboxesResponseMessage,omitempty"`

	GetNonIndexableItemStatisticsResponseMessage *GetNonIndexableItemStatisticsResponseMessageType `xml:"m:GetNonIndexableItemStatisticsResponseMessage,omitempty" json:"GetNonIndexableItemStatisticsResponseMessage,omitempty"`

	GetNonIndexableItemDetailsResponseMessage *GetNonIndexableItemDetailsResponseMessageType `xml:"m:GetNonIndexableItemDetailsResponseMessage,omitempty" json:"GetNonIndexableItemDetailsResponseMessage,omitempty"`

	FindPeopleResponseMessage *FindPeopleResponseMessageType `xml:"m:FindPeopleResponseMessage,omitempty" json:"FindPeopleResponseMessage,omitempty"`

	FindTagsResponseMessage *FindTagsResponseMessageType `xml:"m:FindTagsResponseMessage,omitempty" json:"FindTagsResponseMessage,omitempty"`

	AddTagResponseMessage *AddTagResponseMessageType `xml:"m:AddTagResponseMessage,omitempty" json:"AddTagResponseMessage,omitempty"`

	HideTagResponseMessage *HideTagResponseMessageType `xml:"m:HideTagResponseMessage,omitempty" json:"HideTagResponseMessage,omitempty"`

	GetPasswordExpirationDateResponse *GetPasswordExpirationDateResponseMessageType `xml:"m:GetPasswordExpirationDateResponse,omitempty" json:"GetPasswordExpirationDateResponse,omitempty"`

	GetPersonaResponseMessage *GetPersonaResponseMessageType `xml:"m:GetPersonaResponseMessage,omitempty" json:"GetPersonaResponseMessage,omitempty"`

	GetConversationItemsResponseMessage *GetConversationItemsResponseMessageType `xml:"m:GetConversationItemsResponseMessage,omitempty" json:"GetConversationItemsResponseMessage,omitempty"`

	GetUserRetentionPolicyTagsResponseMessage *GetUserRetentionPolicyTagsResponseMessageType `xml:"m:GetUserRetentionPolicyTagsResponseMessage,omitempty" json:"GetUserRetentionPolicyTagsResponseMessage,omitempty"`

	GetUserPhotoResponseMessage *GetUserPhotoResponseMessageType `xml:"m:GetUserPhotoResponseMessage,omitempty" json:"GetUserPhotoResponseMessage,omitempty"`

	MarkAsJunkResponseMessage *MarkAsJunkResponseMessageType `xml:"m:MarkAsJunkResponseMessage,omitempty" json:"MarkAsJunkResponseMessage,omitempty"`

	ReportMessageResponseMessage *ReportMessageResponseMessageType `xml:"m:ReportMessageResponseMessage,omitempty" json:"ReportMessageResponseMessage,omitempty"`

	PostModernGroupItemResponseMessage *ItemInfoResponseMessageType `xml:"m:PostModernGroupItemResponseMessage,omitempty" json:"PostModernGroupItemResponseMessage,omitempty"`

	GetLastPrivateCatalogUpdateResponseMessage *ResponseMessageType `xml:"m:GetLastPrivateCatalogUpdateResponseMessage,omitempty" json:"GetLastPrivateCatalogUpdateResponseMessage,omitempty"`

	GetPrivateCatalogAddInsResponseMessage *ResponseMessageType `xml:"m:GetPrivateCatalogAddInsResponseMessage,omitempty" json:"GetPrivateCatalogAddInsResponseMessage,omitempty"`
}

type BaseResponseMessageType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"m:ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseRequestType struct {
}

type GetFolderType struct {
	XMLName xml.Name `xml:"m:GetFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"m:FolderShape,omitempty" json:"FolderShape,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type UploadItemsType struct {
	XMLName xml.Name `xml:"m:UploadItems"`

	*BaseRequestType

	Items *NonEmptyArrayOfUploadItemsType `xml:"m:Items,omitempty" json:"Items,omitempty"`
}

type UploadItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:UploadItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`
}

type UploadItemsResponseType struct {
	XMLName xml.Name `xml:"m:UploadItemsResponse"`

	*BaseResponseMessageType
}

type ExportItemsType struct {
	XMLName xml.Name `xml:"m:ExportItems"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type ExportItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:ExportItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`

	Data []byte `xml:"m:Data,omitempty" json:"Data,omitempty"`
}

type ExportItemsResponseType struct {
	XMLName xml.Name `xml:"m:ExportItemsResponse"`

	*BaseResponseMessageType
}

type CreateFolderType struct {
	XMLName xml.Name `xml:"m:CreateFolder"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"m:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	Folders *NonEmptyArrayOfFoldersType `xml:"m:Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderType struct {
	XMLName xml.Name `xml:"m:FindFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"m:FolderShape,omitempty" json:"FolderShape,omitempty"`

	Restriction *RestrictionType `xml:"m:Restriction,omitempty" json:"Restriction,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	IndexedPageFolderView *IndexedPageViewType `xml:"m:IndexedPageFolderView,omitempty" json:"IndexedPageFolderView,omitempty"`

	FractionalPageFolderView *FractionalPageViewType `xml:"m:FractionalPageFolderView,omitempty" json:"FractionalPageFolderView,omitempty"`

	Traversal *FolderQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FolderInfoResponseMessageType struct {
	*ResponseMessageType

	Folders *ArrayOfFoldersType `xml:"m:Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindFolderResponseMessage"`

	*ResponseMessageType

	RootFolder *FindFolderParentType `xml:"m:RootFolder,omitempty" json:"RootFolder,omitempty"`
}

type FindFolderResponseType struct {
	XMLName xml.Name `xml:"m:FindFolderResponse"`

	*BaseResponseMessageType
}

type DeleteFolderType struct {
	XMLName xml.Name `xml:"m:DeleteFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`
}

type DeleteFolderResponseType struct {
	XMLName xml.Name `xml:"m:DeleteFolderResponse"`

	*BaseResponseMessageType
}

type EmptyFolderType struct {
	XMLName xml.Name `xml:"m:EmptyFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	DeleteSubFolders bool `xml:"DeleteSubFolders,attr,omitempty" json:"DeleteSubFolders,omitempty"`
}

type EmptyFolderResponseType struct {
	XMLName xml.Name `xml:"m:EmptyFolderResponse"`

	*BaseResponseMessageType
}

type BaseMoveCopyFolderType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"m:ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MoveFolderType struct {
	XMLName xml.Name `xml:"m:MoveFolder"`

	*BaseMoveCopyFolderType
}

type CopyFolderType struct {
	XMLName xml.Name `xml:"m:CopyFolder"`

	*BaseMoveCopyFolderType
}

type UpdateFolderType struct {
	XMLName xml.Name `xml:"m:UpdateFolder"`

	*BaseRequestType

	FolderChanges *NonEmptyArrayOfFolderChangesType `xml:"m:FolderChanges,omitempty" json:"FolderChanges,omitempty"`
}

type CreateFolderResponseType struct {
	XMLName xml.Name `xml:"m:CreateFolderResponse"`

	*BaseResponseMessageType
}

type GetFolderResponseType struct {
	XMLName xml.Name `xml:"m:GetFolderResponse"`

	*BaseResponseMessageType
}

type UpdateFolderResponseType struct {
	XMLName xml.Name `xml:"m:UpdateFolderResponse"`

	*BaseResponseMessageType
}

type MoveFolderResponseType struct {
	XMLName xml.Name `xml:"m:MoveFolderResponse"`

	*BaseResponseMessageType
}

type CopyFolderResponseType struct {
	XMLName xml.Name `xml:"m:CopyFolderResponse"`

	*BaseResponseMessageType
}

type CreateFolderPathType struct {
	XMLName xml.Name `xml:"m:CreateFolderPath"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"m:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	RelativeFolderPath *NonEmptyArrayOfFoldersType `xml:"m:RelativeFolderPath,omitempty" json:"RelativeFolderPath,omitempty"`
}

type CreateFolderPathResponseType struct {
	XMLName xml.Name `xml:"m:CreateFolderPathResponse"`

	*BaseResponseMessageType
}

type GetItemType struct {
	XMLName xml.Name `xml:"m:GetItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"m:ItemShape,omitempty" json:"ItemShape,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type CreateItemType struct {
	XMLName xml.Name `xml:"m:CreateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"m:SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"m:Items,omitempty" json:"Items,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitations *CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingInvitations,attr,omitempty" json:"SendMeetingInvitations,omitempty"`
}

type UpdateItemType struct {
	XMLName xml.Name `xml:"m:UpdateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"m:SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	ItemChanges *NonEmptyArrayOfItemChangesType `xml:"m:ItemChanges,omitempty" json:"ItemChanges,omitempty"`

	ConflictResolution *ConflictResolutionType `xml:"ConflictResolution,attr,omitempty" json:"ConflictResolution,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitationsOrCancellations *CalendarItemUpdateOperationType `xml:"SendMeetingInvitationsOrCancellations,attr,omitempty" json:"SendMeetingInvitationsOrCancellations,omitempty"`

	SuppressReadReceipts bool `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type ItemInfoResponseMessageType struct {
	*ResponseMessageType

	Items *ArrayOfRealItemsType `xml:"m:Items,omitempty" json:"Items,omitempty"`
}

type UpdateItemResponseMessageType struct {
	XMLName xml.Name `xml:"m:UpdateItemResponseMessage"`

	*ItemInfoResponseMessageType

	ConflictResults *ConflictResultsType `xml:"m:ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type UpdateItemInRecoverableItemsType struct {
	XMLName xml.Name `xml:"m:UpdateItemInRecoverableItems"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"m:Updates,omitempty" json:"Updates,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"m:Attachments,omitempty" json:"Attachments,omitempty"`

	MakeItemImmutable bool `xml:"m:MakeItemImmutable,omitempty" json:"MakeItemImmutable,omitempty"`
}

type UpdateItemInRecoverableItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:UpdateItemInRecoverableItemsResponseMessage"`

	*ItemInfoResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"m:Attachments,omitempty" json:"Attachments,omitempty"`

	ConflictResults *ConflictResultsType `xml:"m:ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type DeleteItemType struct {
	XMLName xml.Name `xml:"m:DeleteItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	SendMeetingCancellations *CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingCancellations,attr,omitempty" json:"SendMeetingCancellations,omitempty"`

	AffectedTaskOccurrences *AffectedTaskOccurrencesType `xml:"AffectedTaskOccurrences,attr,omitempty" json:"AffectedTaskOccurrences,omitempty"`

	SuppressReadReceipts bool `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type AttachmentInfoResponseMessageType struct {
	*ResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"m:Attachments,omitempty" json:"Attachments,omitempty"`
}

type DeleteAttachmentResponseMessageType struct {
	XMLName xml.Name `xml:"m:DeleteAttachmentResponseMessage"`

	*ResponseMessageType

	RootItemId *RootItemIdType `xml:"m:RootItemId,omitempty" json:"RootItemId,omitempty"`
}

type BaseMoveCopyItemType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"m:ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`

	ReturnNewItemIds bool `xml:"m:ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty"`
}

type MoveItemType struct {
	XMLName xml.Name `xml:"m:MoveItem"`

	*BaseMoveCopyItemType
}

type CopyItemType struct {
	XMLName xml.Name `xml:"m:CopyItem"`

	*BaseMoveCopyItemType
}

type ArchiveItemType struct {
	XMLName xml.Name `xml:"m:ArchiveItem"`

	*BaseRequestType

	ArchiveSourceFolderId *TargetFolderIdType `xml:"m:ArchiveSourceFolderId,omitempty" json:"ArchiveSourceFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type SendItemType struct {
	XMLName xml.Name `xml:"m:SendItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`

	SavedItemFolderId *TargetFolderIdType `xml:"m:SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	SaveItemToFolder bool `xml:"SaveItemToFolder,attr,omitempty" json:"SaveItemToFolder,omitempty"`
}

type SendItemResponseType struct {
	XMLName xml.Name `xml:"m:SendItemResponse"`

	*BaseResponseMessageType
}

type QueryStringType struct {
	Value string `xml:",chardata" json:"-,"`

	ResetCache bool `xml:"ResetCache,attr,omitempty" json:"ResetCache,omitempty"`

	ReturnHighlightTerms bool `xml:"ReturnHighlightTerms,attr,omitempty" json:"ReturnHighlightTerms,omitempty"`

	ReturnDeletedItems bool `xml:"ReturnDeletedItems,attr,omitempty" json:"ReturnDeletedItems,omitempty"`
}

type FindItemType struct {
	XMLName xml.Name `xml:"m:FindItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"m:ItemShape,omitempty" json:"ItemShape,omitempty"`

	Restriction *RestrictionType `xml:"m:Restriction,omitempty" json:"Restriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	QueryString *QueryStringType `xml:"m:QueryString,omitempty" json:"QueryString,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"m:IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	FractionalPageItemView *FractionalPageViewType `xml:"m:FractionalPageItemView,omitempty" json:"FractionalPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"m:SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	CalendarView *CalendarViewType `xml:"m:CalendarView,omitempty" json:"CalendarView,omitempty"`

	ContactsView *ContactsViewType `xml:"m:ContactsView,omitempty" json:"ContactsView,omitempty"`

	GroupBy *GroupByType `xml:"m:GroupBy,omitempty" json:"GroupBy,omitempty"`

	DistinguishedGroupBy *DistinguishedGroupByType `xml:"m:DistinguishedGroupBy,omitempty" json:"DistinguishedGroupBy,omitempty"`

	Traversal *ItemQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FindConversationType struct {
	XMLName xml.Name `xml:"m:FindConversation"`

	*BaseRequestType

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"m:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"m:MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	QueryString *QueryStringType `xml:"m:QueryString,omitempty" json:"QueryString,omitempty"`

	ConversationShape *ConversationResponseShapeType `xml:"m:ConversationShape,omitempty" json:"ConversationShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"m:IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"m:SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	Traversal *ConversationQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`

	ViewFilter *ViewFilterType `xml:"ViewFilter,attr,omitempty" json:"ViewFilter,omitempty"`
}

type FindConversationResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindConversationResponse"`

	*ResponseMessageType

	Conversations *ArrayOfConversationsType `xml:"m:Conversations,omitempty" json:"Conversations,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"m:HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`

	TotalConversationsInView int32 `xml:"m:TotalConversationsInView,omitempty" json:"TotalConversationsInView,omitempty"`

	IndexedOffset int32 `xml:"m:IndexedOffset,omitempty" json:"IndexedOffset,omitempty"`
}

type PerformInstantSearchRequest struct {
	XMLName xml.Name `xml:"m:PerformInstantSearch"`

	*BaseRequestType

	SearchSessionId string `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	ItemType *InstantSearchItemType `xml:"m:ItemType,omitempty" json:"ItemType,omitempty"`

	QueryOptions *QueryOptionsType `xml:"m:QueryOptions,omitempty" json:"QueryOptions,omitempty"`

	SearchRequestId int64 `xml:"m:SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	KqlQuery string `xml:"m:KqlQuery,omitempty" json:"KqlQuery,omitempty"`

	FolderScope *ArrayOfFolderIdType `xml:"m:FolderScope,omitempty" json:"FolderScope,omitempty"`

	DistinguishedFolderScope *ArrayOfDistinguishedFolderIdType `xml:"m:DistinguishedFolderScope,omitempty" json:"DistinguishedFolderScope,omitempty"`

	IsDeepTraversal bool `xml:"m:IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`

	WaitOnSearchResults bool `xml:"m:WaitOnSearchResults,omitempty" json:"WaitOnSearchResults,omitempty"`
}

type PerformInstantSearchResponse struct {
	*ResponseMessageType

	Payload *InstantSearchPayloadType `xml:"m:Payload,omitempty" json:"Payload,omitempty"`
}

type EndInstantSearchSessionRequest struct {
	XMLName xml.Name `xml:"m:EndInstantSearchSession"`

	*BaseRequestType

	SessionId string `xml:"m:SessionId,omitempty" json:"SessionId,omitempty"`
}

type ApplyConversationActionType struct {
	XMLName xml.Name `xml:"m:ApplyConversationAction"`

	*BaseRequestType

	ConversationActions *NonEmptyArrayOfApplyConversationActionType `xml:"m:ConversationActions,omitempty" json:"ConversationActions,omitempty"`
}

type ApplyConversationActionResponseType struct {
	XMLName xml.Name `xml:"m:ApplyConversationActionResponse"`

	*BaseResponseMessageType
}

type ApplyConversationActionResponseMessageType struct {
	XMLName xml.Name `xml:"m:ApplyConversationActionResponseMessage"`

	*ResponseMessageType
}

type FindPeopleType struct {
	XMLName xml.Name `xml:"m:FindPeople"`

	*BaseRequestType

	PersonaShape *PersonaResponseShapeType `xml:"m:PersonaShape,omitempty" json:"PersonaShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"m:IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	Restriction *RestrictionType `xml:"m:Restriction,omitempty" json:"Restriction,omitempty"`

	AggregationRestriction *RestrictionType `xml:"m:AggregationRestriction,omitempty" json:"AggregationRestriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"m:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	QueryString string `xml:"m:QueryString,omitempty" json:"QueryString,omitempty"`

	SearchPeopleSuggestionIndex bool `xml:"m:SearchPeopleSuggestionIndex,omitempty" json:"SearchPeopleSuggestionIndex,omitempty"`

	TopicQueryString string `xml:"m:TopicQueryString,omitempty" json:"TopicQueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"m:Context,omitempty" json:"Context,omitempty"`

	QuerySources *ArrayOfPeopleQuerySource `xml:"m:QuerySources,omitempty" json:"QuerySources,omitempty"`
}

type FindPeopleResponseMessageType struct {
	*ResponseMessageType

	People *ArrayOfPeopleType `xml:"m:People,omitempty" json:"People,omitempty"`

	TotalNumberOfPeopleInView int32 `xml:"m:TotalNumberOfPeopleInView,omitempty" json:"TotalNumberOfPeopleInView,omitempty"`

	FirstMatchingRowIndex int32 `xml:"m:FirstMatchingRowIndex,omitempty" json:"FirstMatchingRowIndex,omitempty"`

	FirstLoadedRowIndex int32 `xml:"m:FirstLoadedRowIndex,omitempty" json:"FirstLoadedRowIndex,omitempty"`

	TransactionId *GuidType `xml:"m:TransactionId,omitempty" json:"TransactionId,omitempty"`
}

type FindTagsType struct {
	XMLName xml.Name `xml:"m:FindTags"`

	*BaseRequestType

	IndexedPageItemView *IndexedPageViewType `xml:"m:IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	QueryString string `xml:"m:QueryString,omitempty" json:"QueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"m:Context,omitempty" json:"Context,omitempty"`
}

type FindTagsResponseMessageType struct {
	*ResponseMessageType

	Tags *ArrayOfStringsType `xml:"m:Tags,omitempty" json:"Tags,omitempty"`
}

type AddTagType struct {
	XMLName xml.Name `xml:"m:AddTag"`

	*BaseRequestType

	Tag string `xml:"m:Tag,omitempty" json:"Tag,omitempty"`

	AppName string `xml:"m:AppName,omitempty" json:"AppName,omitempty"`
}

type AddTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful bool `xml:"m:WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type HideTagType struct {
	XMLName xml.Name `xml:"m:HideTag"`

	*BaseRequestType

	Tag string `xml:"m:Tag,omitempty" json:"Tag,omitempty"`
}

type HideTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful bool `xml:"m:WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type GetPersonaType struct {
	XMLName xml.Name `xml:"m:GetPersona"`

	*BaseRequestType

	PersonaId *ItemIdType `xml:"m:PersonaId,omitempty" json:"PersonaId,omitempty"`

	EmailAddress *EmailAddressType `xml:"m:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"m:ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemLinkId string `xml:"m:ItemLinkId,omitempty" json:"ItemLinkId,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"m:AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type GetPersonaResponseMessageType struct {
	*ResponseMessageType

	Persona *PersonaType `xml:"m:Persona,omitempty" json:"Persona,omitempty"`
}

type CreateAttachmentType struct {
	XMLName xml.Name `xml:"m:CreateAttachment"`

	*BaseRequestType

	ParentItemId *ItemIdType `xml:"m:ParentItemId,omitempty" json:"ParentItemId,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"m:Attachments,omitempty" json:"Attachments,omitempty"`
}

type CreateAttachmentResponseType struct {
	XMLName xml.Name `xml:"m:CreateAttachmentResponse"`

	*BaseResponseMessageType
}

type DeleteAttachmentType struct {
	XMLName xml.Name `xml:"m:DeleteAttachment"`

	*BaseRequestType

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"m:AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type DeleteAttachmentResponseType struct {
	XMLName xml.Name `xml:"m:DeleteAttachmentResponse"`

	*BaseResponseMessageType
}

type GetAttachmentType struct {
	XMLName xml.Name `xml:"m:GetAttachment"`

	*BaseRequestType

	AttachmentShape *AttachmentResponseShapeType `xml:"m:AttachmentShape,omitempty" json:"AttachmentShape,omitempty"`

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"m:AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type GetAttachmentResponseType struct {
	XMLName xml.Name `xml:"m:GetAttachmentResponse"`

	*BaseResponseMessageType
}

type CreateItemResponseType struct {
	XMLName xml.Name `xml:"m:CreateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemResponseType struct {
	XMLName xml.Name `xml:"m:UpdateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemInRecoverableItemsResponseType struct {
	XMLName xml.Name `xml:"m:UpdateItemInRecoverableItemsResponse"`

	*BaseResponseMessageType
}

type GetItemResponseType struct {
	XMLName xml.Name `xml:"m:GetItemResponse"`

	*BaseResponseMessageType
}

type MoveItemResponseType struct {
	XMLName xml.Name `xml:"m:MoveItemResponse"`

	*BaseResponseMessageType
}

type CopyItemResponseType struct {
	XMLName xml.Name `xml:"m:CopyItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseType struct {
	XMLName xml.Name `xml:"m:DeleteItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseMessageType struct {
	XMLName xml.Name `xml:"m:DeleteItemResponseMessage"`

	*ResponseMessageType
}

type FindItemResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindItemResponseMessage"`

	*ResponseMessageType

	RootFolder *FindItemParentType `xml:"m:RootFolder,omitempty" json:"RootFolder,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"m:HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`
}

type FindItemResponseType struct {
	XMLName xml.Name `xml:"m:FindItemResponse"`

	*BaseResponseMessageType
}

type ArchiveItemResponseType struct {
	XMLName xml.Name `xml:"m:ArchiveItemResponse"`

	*BaseResponseMessageType
}

type GetClientAccessTokenType struct {
	XMLName xml.Name `xml:"m:GetClientAccessToken"`

	*BaseRequestType

	TokenRequests *NonEmptyArrayOfClientAccessTokenRequestsType `xml:"m:TokenRequests,omitempty" json:"TokenRequests,omitempty"`
}

type GetClientAccessTokenResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetClientAccessTokenResponseMessage"`

	*ResponseMessageType

	Token *ClientAccessTokenType `xml:"m:Token,omitempty" json:"Token,omitempty"`
}

type GetClientAccessTokenResponseType struct {
	XMLName xml.Name `xml:"m:GetClientAccessTokenResponse"`

	*BaseResponseMessageType
}

type GetFocusedOtherOverridesRequestType struct {
	XMLName xml.Name `xml:"m:GetFocusedOtherOverrides"`

	*BaseRequestType
}

type GetFocusedOtherOverridesResponseType struct {
	XMLName xml.Name `xml:"m:GetFocusedOtherOverridesResponse"`

	*BaseResponseMessageType

	Overrides *ArrayOfInferenceClassificationOverridesType `xml:"m:Overrides,omitempty" json:"Overrides,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideRequestType struct {
	XMLName xml.Name `xml:"m:CreateOrUpdateFocusedOtherOverride"`

	*BaseRequestType

	SenderSmtpAddress string `xml:"m:SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName string `xml:"m:SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"m:AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"m:CreateOrUpdateFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"m:Override,omitempty" json:"Override,omitempty"`
}

type DeleteFocusedOtherOverrideRequestType struct {
	XMLName xml.Name `xml:"m:DeleteFocusedOtherOverride"`

	*BaseRequestType

	Id *GuidType `xml:"m:Id,omitempty" json:"Id,omitempty"`
}

type DeleteFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"m:DeleteFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"m:Override,omitempty" json:"Override,omitempty"`
}

type ResolveNamesType struct {
	XMLName xml.Name `xml:"m:ResolveNames"`

	*BaseRequestType

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	UnresolvedEntry *NonEmptyStringType `xml:"m:UnresolvedEntry,omitempty" json:"UnresolvedEntry,omitempty"`

	ReturnFullContactData bool `xml:"ReturnFullContactData,attr,omitempty" json:"ReturnFullContactData,omitempty"`

	SearchScope *ResolveNamesSearchScopeType `xml:"SearchScope,attr,omitempty" json:"SearchScope,omitempty"`

	ContactDataShape *DefaultShapeNamesType `xml:"ContactDataShape,attr,omitempty" json:"ContactDataShape,omitempty"`
}

type ResolveNamesResponseMessageType struct {
	XMLName xml.Name `xml:"m:ResolveNamesResponseMessage"`

	*ResponseMessageType

	ResolutionSet *ArrayOfResolutionType `xml:"m:ResolutionSet,omitempty" json:"ResolutionSet,omitempty"`
}

type ResolveNamesResponseType struct {
	XMLName xml.Name `xml:"m:ResolveNamesResponse"`

	*BaseResponseMessageType
}

type GetPasswordExpirationDateType struct {
	XMLName xml.Name `xml:"m:GetPasswordExpirationDate"`

	*BaseRequestType

	MailboxSmtpAddress string `xml:"m:MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetPasswordExpirationDateResponseMessageType struct {
	*ResponseMessageType

	PasswordExpirationDate xsd.DateTime `xml:"m:PasswordExpirationDate,omitempty" json:"PasswordExpirationDate,omitempty"`
}

type GetMailTipsType struct {
	XMLName xml.Name `xml:"m:GetMailTips"`

	*BaseRequestType

	SendingAs *EmailAddressType `xml:"m:SendingAs,omitempty" json:"SendingAs,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"m:Recipients,omitempty" json:"Recipients,omitempty"`

	MailTipsRequested *MailTipTypes `xml:"m:MailTipsRequested,omitempty" json:"MailTipsRequested,omitempty"`
}

type GetMailTipsResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetMailTipsResponse"`

	*ResponseMessageType

	ResponseMessages *ArrayOfMailTipsResponseMessageType `xml:"m:ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfMailTipsResponseMessageType struct {
	XMLName xml.Name `xml:"m:ResponseMessages"`

	MailTipsResponseMessageType []*MailTipsResponseMessageType `xml:"m:MailTipsResponseMessageType,omitempty" json:"MailTipsResponseMessageType,omitempty"`
}

type MailTipsResponseMessageType struct {
	*ResponseMessageType

	MailTips *MailTips `xml:"m:MailTips,omitempty" json:"MailTips,omitempty"`
}

type PlayOnPhoneType struct {
	XMLName xml.Name `xml:"m:PlayOnPhone"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`

	DialString string `xml:"m:DialString,omitempty" json:"DialString,omitempty"`
}

type PlayOnPhoneResponseMessageType struct {
	XMLName xml.Name `xml:"m:PlayOnPhoneResponse"`

	*ResponseMessageType

	PhoneCallId *PhoneCallIdType `xml:"m:PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationType struct {
	XMLName xml.Name `xml:"m:GetPhoneCallInformation"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"m:PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetPhoneCallInformationResponse"`

	*ResponseMessageType

	PhoneCallInformation *PhoneCallInformationType `xml:"m:PhoneCallInformation,omitempty" json:"PhoneCallInformation,omitempty"`
}

type DisconnectPhoneCallType struct {
	XMLName xml.Name `xml:"m:DisconnectPhoneCall"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"m:PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type DisconnectPhoneCallResponseMessageType struct {
	XMLName xml.Name `xml:"m:DisconnectPhoneCallResponse"`

	*ResponseMessageType
}

type ExpandDLType struct {
	XMLName xml.Name `xml:"m:ExpandDL"`

	*BaseRequestType

	Mailbox *EmailAddressType `xml:"m:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type ExpandDLResponseMessageType struct {
	XMLName xml.Name `xml:"m:ExpandDLResponseMessage"`

	*ResponseMessageType

	DLExpansion *ArrayOfDLExpansionType `xml:"m:DLExpansion,omitempty" json:"DLExpansion,omitempty"`
}

type ExpandDLResponseType struct {
	XMLName xml.Name `xml:"m:ExpandDLResponse"`

	*BaseResponseMessageType
}

type GetServerTimeZonesType struct {
	XMLName xml.Name `xml:"m:GetServerTimeZones"`

	*BaseRequestType

	Ids *NonEmptyArrayOfTimeZoneIdType `xml:"m:Ids,omitempty" json:"Ids,omitempty"`

	ReturnFullTimeZoneData bool `xml:"ReturnFullTimeZoneData,attr,omitempty" json:"ReturnFullTimeZoneData,omitempty"`
}

type GetServerTimeZonesResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetServerTimeZonesResponseMessage"`

	*ResponseMessageType

	TimeZoneDefinitions *ArrayOfTimeZoneDefinitionType `xml:"m:TimeZoneDefinitions,omitempty" json:"TimeZoneDefinitions,omitempty"`
}

type GetServerTimeZonesResponseType struct {
	XMLName xml.Name `xml:"m:GetServerTimeZonesResponse"`

	*BaseResponseMessageType
}

type CreateManagedFolderRequestType struct {
	XMLName xml.Name `xml:"m:CreateManagedFolder"`

	*BaseRequestType

	FolderNames *NonEmptyArrayOfFolderNamesType `xml:"m:FolderNames,omitempty" json:"FolderNames,omitempty"`

	Mailbox *EmailAddressType `xml:"m:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type CreateManagedFolderResponseType struct {
	XMLName xml.Name `xml:"m:CreateManagedFolderResponse"`

	*BaseResponseMessageType
}

type SubscribeType struct {
	XMLName xml.Name `xml:"m:Subscribe"`

	*BaseRequestType

	PullSubscriptionRequest *PullSubscriptionRequestType `xml:"m:PullSubscriptionRequest,omitempty" json:"PullSubscriptionRequest,omitempty"`

	PushSubscriptionRequest *PushSubscriptionRequestType `xml:"m:PushSubscriptionRequest,omitempty" json:"PushSubscriptionRequest,omitempty"`

	StreamingSubscriptionRequest *StreamingSubscriptionRequestType `xml:"m:StreamingSubscriptionRequest,omitempty" json:"StreamingSubscriptionRequest,omitempty"`
}

type SubscribeResponseMessageType struct {
	XMLName xml.Name `xml:"m:SubscribeResponseMessage"`

	*ResponseMessageType

	SubscriptionId *SubscriptionIdType `xml:"m:SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"m:Watermark,omitempty" json:"Watermark,omitempty"`
}

type SubscribeResponseType struct {
	XMLName xml.Name `xml:"m:SubscribeResponse"`

	*BaseResponseMessageType
}

type UnsubscribeType struct {
	XMLName xml.Name `xml:"m:Unsubscribe"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"m:SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type UnsubscribeResponseType struct {
	XMLName xml.Name `xml:"m:UnsubscribeResponse"`

	*BaseResponseMessageType
}

type GetEventsType struct {
	XMLName xml.Name `xml:"m:GetEvents"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"m:SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"m:Watermark,omitempty" json:"Watermark,omitempty"`
}

type GetEventsResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetEventsResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"m:Notification,omitempty" json:"Notification,omitempty"`
}

type GetEventsResponseType struct {
	XMLName xml.Name `xml:"m:GetEventsResponse"`

	*BaseResponseMessageType
}

type GetStreamingEventsType struct {
	XMLName xml.Name `xml:"m:GetStreamingEvents"`

	*BaseRequestType

	SubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"m:SubscriptionIds,omitempty" json:"SubscriptionIds,omitempty"`

	ConnectionTimeout *StreamingSubscriptionConnectionTimeoutType `xml:"m:ConnectionTimeout,omitempty" json:"ConnectionTimeout,omitempty"`
}

type GetStreamingEventsResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetStreamingEventsResponseMessage"`

	*ResponseMessageType

	Notifications *NonEmptyArrayOfNotificationsType `xml:"m:Notifications,omitempty" json:"Notifications,omitempty"`

	ErrorSubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"m:ErrorSubscriptionIds,omitempty" json:"ErrorSubscriptionIds,omitempty"`

	ConnectionStatus *ConnectionStatusType `xml:"m:ConnectionStatus,omitempty" json:"ConnectionStatus,omitempty"`
}

type GetStreamingEventsResponseType struct {
	XMLName xml.Name `xml:"m:GetStreamingEventsResponse"`

	*BaseResponseMessageType
}

type SendNotificationResponseMessageType struct {
	XMLName xml.Name `xml:"m:SendNotificationResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"m:Notification,omitempty" json:"Notification,omitempty"`
}

type SendNotificationResponseType struct {
	XMLName xml.Name `xml:"m:SendNotification"`

	*BaseResponseMessageType
}

type SendNotificationResultType struct {
	XMLName xml.Name `xml:"m:SendNotificationResult"`

	SubscriptionStatus *SubscriptionStatusType `xml:"m:SubscriptionStatus,omitempty" json:"SubscriptionStatus,omitempty"`
}

type SyncFolderHierarchyType struct {
	XMLName xml.Name `xml:"m:SyncFolderHierarchy"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"m:FolderShape,omitempty" json:"FolderShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"m:SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState string `xml:"m:SyncState,omitempty" json:"SyncState,omitempty"`
}

type SyncFolderHierarchyResponseMessageType struct {
	XMLName xml.Name `xml:"m:SyncFolderHierarchyResponseMessage"`

	*ResponseMessageType

	SyncState string `xml:"m:SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastFolderInRange bool `xml:"m:IncludesLastFolderInRange,omitempty" json:"IncludesLastFolderInRange,omitempty"`

	Changes *SyncFolderHierarchyChangesType `xml:"m:Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderHierarchyResponseType struct {
	XMLName xml.Name `xml:"m:SyncFolderHierarchyResponse"`

	*BaseResponseMessageType
}

type SyncFolderItemsType struct {
	XMLName xml.Name `xml:"m:SyncFolderItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"m:ItemShape,omitempty" json:"ItemShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"m:SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState string `xml:"m:SyncState,omitempty" json:"SyncState,omitempty"`

	Ignore *ArrayOfBaseItemIdsType `xml:"m:Ignore,omitempty" json:"Ignore,omitempty"`

	MaxChangesReturned *MaxSyncChangesReturnedType `xml:"m:MaxChangesReturned,omitempty" json:"MaxChangesReturned,omitempty"`

	SyncScope *SyncFolderItemsScopeType `xml:"m:SyncScope,omitempty" json:"SyncScope,omitempty"`
}

type SyncFolderItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:SyncFolderItemsResponseMessage"`

	*ResponseMessageType

	SyncState string `xml:"m:SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastItemInRange bool `xml:"m:IncludesLastItemInRange,omitempty" json:"IncludesLastItemInRange,omitempty"`

	Changes *SyncFolderItemsChangesType `xml:"m:Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderItemsResponseType struct {
	XMLName xml.Name `xml:"m:SyncFolderItemsResponse"`

	*BaseResponseMessageType
}

type GetUserAvailabilityRequestType struct {
	XMLName xml.Name `xml:"m:GetUserAvailabilityRequest"`

	*BaseRequestType

	TimeZone *TimeZone `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	MailboxDataArray *ArrayOfMailboxData `xml:"m:MailboxDataArray,omitempty" json:"MailboxDataArray,omitempty"`

	FreeBusyViewOptions *FreeBusyViewOptions `xml:"FreeBusyViewOptions,omitempty" json:"FreeBusyViewOptions,omitempty"`

	SuggestionsViewOptions *SuggestionsViewOptions `xml:"SuggestionsViewOptions,omitempty" json:"SuggestionsViewOptions,omitempty"`
}

type FreeBusyResponseType struct {
	XMLName xml.Name `xml:"m:FreeBusyResponse"`

	ResponseMessage *ResponseMessageType `xml:"m:ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	FreeBusyView *FreeBusyView `xml:"m:FreeBusyView,omitempty" json:"FreeBusyView,omitempty"`
}

type ArrayOfFreeBusyResponse struct {
	XMLName xml.Name `xml:"m:FreeBusyResponseArray"`

	FreeBusyResponse []*FreeBusyResponseType `xml:"m:FreeBusyResponse,omitempty" json:"FreeBusyResponse,omitempty"`
}

type SuggestionsResponseType struct {
	XMLName xml.Name `xml:"m:SuggestionsResponse"`

	ResponseMessage *ResponseMessageType `xml:"m:ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	SuggestionDayResultArray *ArrayOfSuggestionDayResult `xml:"m:SuggestionDayResultArray,omitempty" json:"SuggestionDayResultArray,omitempty"`
}

type GetUserAvailabilityResponseType struct {
	XMLName xml.Name `xml:"m:GetUserAvailabilityResponse"`

	FreeBusyResponseArray *ArrayOfFreeBusyResponse `xml:"m:FreeBusyResponseArray,omitempty" json:"FreeBusyResponseArray,omitempty"`

	SuggestionsResponse *SuggestionsResponseType `xml:"m:SuggestionsResponse,omitempty" json:"SuggestionsResponse,omitempty"`
}

type GetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type GetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"m:ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	OofSettings *OofSettings `xml:"OofSettings,omitempty" json:"OofSettings,omitempty"`

	AllowExternalOof *ExternalAudience `xml:"m:AllowExternalOof,omitempty" json:"AllowExternalOof,omitempty"`
}

type SetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	UserOofSettings *UserOofSettings `xml:"UserOofSettings,omitempty" json:"UserOofSettings,omitempty"`
}

type SetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"m:ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`
}

type ConvertIdType struct {
	XMLName xml.Name `xml:"m:ConvertId"`

	*BaseRequestType

	SourceIds *NonEmptyArrayOfAlternateIdsType `xml:"m:SourceIds,omitempty" json:"SourceIds,omitempty"`

	DestinationFormat *IdFormatType `xml:"DestinationFormat,attr,omitempty" json:"DestinationFormat,omitempty"`
}

type ConvertIdResponseType struct {
	XMLName xml.Name `xml:"m:ConvertIdResponse"`

	*BaseResponseMessageType
}

type ConvertIdResponseMessageType struct {
	XMLName xml.Name `xml:"m:ConvertIdResponseMessage"`

	*ResponseMessageType

	AlternateId *AlternateIdBaseType `xml:"m:AlternateId,omitempty" json:"AlternateId,omitempty"`
}

type GetDelegateType struct {
	XMLName xml.Name `xml:"m:GetDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"m:UserIds,omitempty" json:"UserIds,omitempty"`

	IncludePermissions bool `xml:"IncludePermissions,attr,omitempty" json:"IncludePermissions,omitempty"`
}

type GetDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetDelegateResponse"`

	*BaseDelegateResponseMessageType

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"m:DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type ArrayOfDelegateUserResponseMessageType struct {
	XMLName xml.Name `xml:"m:ResponseMessages"`

	DelegateUserResponseMessageType []*DelegateUserResponseMessageType `xml:"m:DelegateUserResponseMessageType,omitempty" json:"DelegateUserResponseMessageType,omitempty"`
}

type DelegateUserResponseMessageType struct {
	*ResponseMessageType

	DelegateUser *DelegateUserType `xml:"m:DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type AddDelegateType struct {
	XMLName xml.Name `xml:"m:AddDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"m:DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"m:DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type BaseDelegateResponseMessageType struct {
	*ResponseMessageType

	ResponseMessages *ArrayOfDelegateUserResponseMessageType `xml:"m:ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseDelegateType struct {
	*BaseRequestType

	Mailbox *EmailAddressType `xml:"m:Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type AddDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type RemoveDelegateType struct {
	XMLName xml.Name `xml:"m:RemoveDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"m:UserIds,omitempty" json:"UserIds,omitempty"`
}

type RemoveDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"m:RemoveDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type UpdateDelegateType struct {
	XMLName xml.Name `xml:"m:UpdateDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"m:DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"m:DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type UpdateDelegateResponseMessageType struct {
	XMLName xml.Name `xml:"m:UpdateDelegateResponse"`

	*BaseDelegateResponseMessageType
}

type GetSharingMetadataType struct {
	XMLName xml.Name `xml:"m:GetSharingMetadata"`

	*BaseRequestType

	IdOfFolderToShare *FolderIdType `xml:"m:IdOfFolderToShare,omitempty" json:"IdOfFolderToShare,omitempty"`

	SenderSmtpAddress *NonEmptyStringType `xml:"m:SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"m:Recipients,omitempty" json:"Recipients,omitempty"`
}

type GetSharingMetadataResponseMessageType struct {
	*ResponseMessageType

	EncryptedSharedFolderDataCollection *ArrayOfEncryptedSharedFolderDataType `xml:"m:EncryptedSharedFolderDataCollection,omitempty" json:"EncryptedSharedFolderDataCollection,omitempty"`

	InvalidRecipients *ArrayOfInvalidRecipientsType `xml:"m:InvalidRecipients,omitempty" json:"InvalidRecipients,omitempty"`
}

type RefreshSharingFolderType struct {
	XMLName xml.Name `xml:"m:RefreshSharingFolder"`

	*BaseRequestType

	SharingFolderId *FolderIdType `xml:"m:SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type RefreshSharingFolderResponseMessageType struct {
	*ResponseMessageType
}

type GetSharingFolderType struct {
	XMLName xml.Name `xml:"m:GetSharingFolder"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"m:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DataType *SharingDataType `xml:"m:DataType,omitempty" json:"DataType,omitempty"`

	SharedFolderId *NonEmptyStringType `xml:"m:SharedFolderId,omitempty" json:"SharedFolderId,omitempty"`
}

type GetSharingFolderResponseMessageType struct {
	*ResponseMessageType

	SharingFolderId *FolderIdType `xml:"m:SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type CreateUserConfigurationType struct {
	XMLName xml.Name `xml:"m:CreateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"m:UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type CreateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:CreateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type DeleteUserConfigurationType struct {
	XMLName xml.Name `xml:"m:DeleteUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"m:UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`
}

type DeleteUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:DeleteUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetUserConfigurationType struct {
	XMLName xml.Name `xml:"m:GetUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"m:UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"m:UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"m:UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:GetUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetSpecificUserConfigurationType struct {
	XMLName xml.Name `xml:"m:GetSpecificUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"m:UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"m:UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetSpecificUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetSpecificUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"m:UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetSpecificUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:GetSpecificUserConfigurationResponse"`

	*BaseResponseMessageType
}

type UpdateUserConfigurationType struct {
	XMLName xml.Name `xml:"m:UpdateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"m:UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type UpdateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:UpdateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type SetTeamMailboxRequestType struct {
	XMLName xml.Name `xml:"m:SetTeamMailbox"`

	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"m:EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	SharePointSiteUrl string `xml:"m:SharePointSiteUrl,omitempty" json:"SharePointSiteUrl,omitempty"`

	State *TeamMailboxLifecycleStateType `xml:"m:State,omitempty" json:"State,omitempty"`
}

type UnpinTeamMailboxRequestType struct {
	XMLName xml.Name `xml:"m:UnpinTeamMailbox"`

	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"m:EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type SetTeamMailboxResponseMessageType struct {
	XMLName xml.Name `xml:"m:SetTeamMailboxResponse"`

	*ResponseMessageType
}

type UnpinTeamMailboxResponseMessageType struct {
	XMLName xml.Name `xml:"m:UnpinTeamMailboxResponse"`

	*ResponseMessageType
}

type GetRoomListsType struct {
	XMLName xml.Name `xml:"m:GetRoomLists"`

	*BaseRequestType
}

type GetRoomListsResponseMessageType struct {
	*ResponseMessageType

	RoomLists *ArrayOfEmailAddressesType `xml:"m:RoomLists,omitempty" json:"RoomLists,omitempty"`
}

type GetRoomsType struct {
	XMLName xml.Name `xml:"m:GetRooms"`

	*BaseRequestType

	RoomList *EmailAddressType `xml:"m:RoomList,omitempty" json:"RoomList,omitempty"`
}

type GetRoomsResponseMessageType struct {
	*ResponseMessageType

	Rooms *ArrayOfRoomsType `xml:"m:Rooms,omitempty" json:"Rooms,omitempty"`
}

type GetRemindersType struct {
	XMLName xml.Name `xml:"m:GetReminders"`

	*BaseRequestType

	BeginTime xsd.DateTime `xml:"m:BeginTime,omitempty" json:"BeginTime,omitempty"`

	EndTime xsd.DateTime `xml:"m:EndTime,omitempty" json:"EndTime,omitempty"`

	MaxItems int32 `xml:"MaxItems,omitempty" json:"MaxItems,omitempty"`

	ReminderType string `xml:"ReminderType,omitempty" json:"ReminderType,omitempty"`
}

type GetRemindersResponseMessageType struct {
	*ResponseMessageType

	Reminders *ArrayOfRemindersType `xml:"m:Reminders,omitempty" json:"Reminders,omitempty"`
}

type PerformReminderActionType struct {
	XMLName xml.Name `xml:"m:PerformReminderAction"`

	*BaseRequestType

	ReminderItemActions *NonEmptyArrayOfReminderItemActionType `xml:"m:ReminderItemActions,omitempty" json:"ReminderItemActions,omitempty"`
}

type PerformReminderActionResponseMessageType struct {
	*ResponseMessageType

	UpdatedItemIds *NonEmptyArrayOfItemIdsType `xml:"m:UpdatedItemIds,omitempty" json:"UpdatedItemIds,omitempty"`
}

type ArrayOfServiceConfigurationType struct {
	XMLName xml.Name `xml:"m:RequestedConfiguration"`

	ConfigurationName *ServiceConfigurationType `xml:"m:ConfigurationName,omitempty" json:"ConfigurationName,omitempty"`
}

type GetServiceConfigurationType struct {
	XMLName xml.Name `xml:"m:GetServiceConfiguration"`

	*BaseRequestType

	ActingAs *EmailAddressType `xml:"m:ActingAs,omitempty" json:"ActingAs,omitempty"`

	RequestedConfiguration *ArrayOfServiceConfigurationType `xml:"m:RequestedConfiguration,omitempty" json:"RequestedConfiguration,omitempty"`

	ConfigurationRequestDetails *ConfigurationRequestDetailsType `xml:"m:ConfigurationRequestDetails,omitempty" json:"ConfigurationRequestDetails,omitempty"`
}

type GetServiceConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetServiceConfigurationResponse"`

	*ResponseMessageType

	ResponseMessages *ArrayOfServiceConfigurationResponseMessageType `xml:"m:ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfServiceConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"m:ResponseMessages"`

	ServiceConfigurationResponseMessageType []*ServiceConfigurationResponseMessageType `xml:"m:ServiceConfigurationResponseMessageType,omitempty" json:"ServiceConfigurationResponseMessageType,omitempty"`
}

type ServiceConfigurationResponseMessageType struct {
	*ResponseMessageType

	MailTipsConfiguration *MailTipsServiceConfiguration `xml:"m:MailTipsConfiguration,omitempty" json:"MailTipsConfiguration,omitempty"`

	UnifiedMessagingConfiguration *UnifiedMessageServiceConfiguration `xml:"m:UnifiedMessagingConfiguration,omitempty" json:"UnifiedMessagingConfiguration,omitempty"`

	ProtectionRulesConfiguration *ProtectionRulesServiceConfiguration `xml:"m:ProtectionRulesConfiguration,omitempty" json:"ProtectionRulesConfiguration,omitempty"`

	PolicyNudgeRulesConfiguration *PolicyNudgeRulesServiceConfiguration `xml:"m:PolicyNudgeRulesConfiguration,omitempty" json:"PolicyNudgeRulesConfiguration,omitempty"`

	SharePointURLsConfiguration *SharePointURLsServiceConfiguration `xml:"m:SharePointURLsConfiguration,omitempty" json:"SharePointURLsConfiguration,omitempty"`
}

type FindMessageTrackingReportRequestType struct {
	XMLName xml.Name `xml:"m:FindMessageTrackingReport"`

	*BaseRequestType
}

type FindMessageTrackingReportResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindMessageTrackingReportResponse"`

	*ResponseMessageType

	Diagnostics *ArrayOfStringsType `xml:"m:Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	MessageTrackingSearchResults *ArrayOfFindMessageTrackingSearchResultType `xml:"m:MessageTrackingSearchResults,omitempty" json:"MessageTrackingSearchResults,omitempty"`

	ExecutedSearchScope string `xml:"m:ExecutedSearchScope,omitempty" json:"ExecutedSearchScope,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"m:Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"m:Properties,omitempty" json:"Properties,omitempty"`
}

type GetMessageTrackingReportRequestType struct {
	XMLName xml.Name `xml:"m:GetMessageTrackingReport"`

	*BaseRequestType
}

type GetMessageTrackingReportResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetMessageTrackingReportResponse"`

	*ResponseMessageType

	MessageTrackingReport *MessageTrackingReportType `xml:"m:MessageTrackingReport,omitempty" json:"MessageTrackingReport,omitempty"`

	Diagnostics *ArrayOfStringsType `xml:"m:Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"m:Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"m:Properties,omitempty" json:"Properties,omitempty"`
}

type GetInboxRulesRequestType struct {
	XMLName xml.Name `xml:"m:GetInboxRules"`

	*BaseRequestType

	MailboxSmtpAddress string `xml:"m:MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetInboxRulesResponseType struct {
	XMLName xml.Name `xml:"m:GetInboxRulesResponse"`

	*ResponseMessageType

	OutlookRuleBlobExists bool `xml:"m:OutlookRuleBlobExists,omitempty" json:"OutlookRuleBlobExists,omitempty"`

	InboxRules *ArrayOfRulesType `xml:"m:InboxRules,omitempty" json:"InboxRules,omitempty"`
}

type UpdateInboxRulesRequestType struct {
	XMLName xml.Name `xml:"m:UpdateInboxRules"`

	*BaseRequestType

	MailboxSmtpAddress string `xml:"m:MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`

	RemoveOutlookRuleBlob bool `xml:"m:RemoveOutlookRuleBlob,omitempty" json:"RemoveOutlookRuleBlob,omitempty"`

	Operations *ArrayOfRuleOperationsType `xml:"m:Operations,omitempty" json:"Operations,omitempty"`
}

type UpdateInboxRulesResponseType struct {
	XMLName xml.Name `xml:"m:UpdateInboxRulesResponse"`

	*ResponseMessageType

	RuleOperationErrors *ArrayOfRuleOperationErrorsType `xml:"m:RuleOperationErrors,omitempty" json:"RuleOperationErrors,omitempty"`
}

type FindMailboxStatisticsByKeywordsType struct {
	XMLName xml.Name `xml:"m:FindMailboxStatisticsByKeywords"`

	*BaseRequestType

	Mailboxes *ArrayOfUserMailboxesType `xml:"m:Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Keywords *ArrayOfStringsType `xml:"m:Keywords,omitempty" json:"Keywords,omitempty"`

	Language string `xml:"m:Language,omitempty" json:"Language,omitempty"`

	Senders *ArrayOfSmtpAddressType `xml:"m:Senders,omitempty" json:"Senders,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"m:Recipients,omitempty" json:"Recipients,omitempty"`

	FromDate xsd.DateTime `xml:"m:FromDate,omitempty" json:"FromDate,omitempty"`

	ToDate xsd.DateTime `xml:"m:ToDate,omitempty" json:"ToDate,omitempty"`

	MessageTypes *ArrayOfSearchItemKindsType `xml:"m:MessageTypes,omitempty" json:"MessageTypes,omitempty"`

	SearchDumpster bool `xml:"m:SearchDumpster,omitempty" json:"SearchDumpster,omitempty"`

	IncludePersonalArchive bool `xml:"m:IncludePersonalArchive,omitempty" json:"IncludePersonalArchive,omitempty"`

	IncludeUnsearchableItems bool `xml:"m:IncludeUnsearchableItems,omitempty" json:"IncludeUnsearchableItems,omitempty"`
}

type FindMailboxStatisticsByKeywordsResponseType struct {
	XMLName xml.Name `xml:"m:FindMailboxStatisticsByKeywordsResponse"`

	*BaseResponseMessageType
}

type FindMailboxStatisticsByKeywordsResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindMailboxStatisticsByKeywordsResponseMessage"`

	*ResponseMessageType

	MailboxStatisticsSearchResult *MailboxStatisticsSearchResultType `xml:"m:MailboxStatisticsSearchResult,omitempty" json:"MailboxStatisticsSearchResult,omitempty"`
}

type GetSearchableMailboxesType struct {
	XMLName xml.Name `xml:"m:GetSearchableMailboxes"`

	*BaseRequestType

	SearchFilter string `xml:"m:SearchFilter,omitempty" json:"SearchFilter,omitempty"`

	ExpandGroupMembership bool `xml:"m:ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`
}

type GetSearchableMailboxesResponseMessageType struct {
	*ResponseMessageType

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"m:SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"m:FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type SearchMailboxesType struct {
	XMLName xml.Name `xml:"m:SearchMailboxes"`

	*BaseRequestType

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"m:SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"m:ResultType,omitempty" json:"ResultType,omitempty"`

	PreviewItemResponseShape *PreviewItemResponseShapeType `xml:"m:PreviewItemResponseShape,omitempty" json:"PreviewItemResponseShape,omitempty"`

	SortBy *FieldOrderType `xml:"m:SortBy,omitempty" json:"SortBy,omitempty"`

	Language string `xml:"m:Language,omitempty" json:"Language,omitempty"`

	Deduplication bool `xml:"m:Deduplication,omitempty" json:"Deduplication,omitempty"`

	PageSize int32 `xml:"m:PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference string `xml:"m:PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"m:PageDirection,omitempty" json:"PageDirection,omitempty"`
}

type SearchMailboxesResponseType struct {
	XMLName xml.Name `xml:"m:SearchMailboxesResponse"`

	*BaseResponseMessageType
}

type SearchMailboxesResponseMessageType struct {
	XMLName xml.Name `xml:"m:SearchMailboxesResponseMessage"`

	*ResponseMessageType

	SearchMailboxesResult *SearchMailboxesResultType `xml:"m:SearchMailboxesResult,omitempty" json:"SearchMailboxesResult,omitempty"`
}

type GetDiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"m:GetDiscoverySearchConfiguration"`

	*BaseRequestType

	SearchId string `xml:"m:SearchId,omitempty" json:"SearchId,omitempty"`

	ExpandGroupMembership bool `xml:"m:ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`

	InPlaceHoldConfigurationOnly bool `xml:"m:InPlaceHoldConfigurationOnly,omitempty" json:"InPlaceHoldConfigurationOnly,omitempty"`
}

type GetDiscoverySearchConfigurationResponseMessageType struct {
	*ResponseMessageType

	DiscoverySearchConfigurations *ArrayOfDiscoverySearchConfigurationType `xml:"m:DiscoverySearchConfigurations,omitempty" json:"DiscoverySearchConfigurations,omitempty"`
}

type GetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"m:GetHoldOnMailboxes"`

	*BaseRequestType

	HoldId string `xml:"m:HoldId,omitempty" json:"HoldId,omitempty"`
}

type GetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"m:MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type SetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"m:SetHoldOnMailboxes"`

	*BaseRequestType

	ActionType *HoldActionType `xml:"m:ActionType,omitempty" json:"ActionType,omitempty"`

	HoldId string `xml:"m:HoldId,omitempty" json:"HoldId,omitempty"`

	Query string `xml:"m:Query,omitempty" json:"Query,omitempty"`

	Mailboxes *ArrayOfStringsType `xml:"m:Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Language string `xml:"m:Language,omitempty" json:"Language,omitempty"`

	IncludeNonIndexableItems bool `xml:"m:IncludeNonIndexableItems,omitempty" json:"IncludeNonIndexableItems,omitempty"`

	Deduplication bool `xml:"m:Deduplication,omitempty" json:"Deduplication,omitempty"`

	InPlaceHoldIdentity string `xml:"m:InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ItemHoldPeriod string `xml:"m:ItemHoldPeriod,omitempty" json:"ItemHoldPeriod,omitempty"`
}

type SetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"m:MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type GetNonIndexableItemStatisticsType struct {
	XMLName xml.Name `xml:"m:GetNonIndexableItemStatistics"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"m:Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	SearchArchiveOnly bool `xml:"m:SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemStatisticsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemStatistics *ArrayOfNonIndexableItemStatisticsType `xml:"m:NonIndexableItemStatistics,omitempty" json:"NonIndexableItemStatistics,omitempty"`
}

type GetNonIndexableItemDetailsType struct {
	XMLName xml.Name `xml:"m:GetNonIndexableItemDetails"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"m:Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	PageSize int32 `xml:"m:PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference string `xml:"m:PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"m:PageDirection,omitempty" json:"PageDirection,omitempty"`

	SearchArchiveOnly bool `xml:"m:SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemDetailsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemDetailsResult *NonIndexableItemDetailResultType `xml:"m:NonIndexableItemDetailsResult,omitempty" json:"NonIndexableItemDetailsResult,omitempty"`
}

type MarkAllItemsAsReadType struct {
	XMLName xml.Name `xml:"m:MarkAllItemsAsRead"`

	*BaseRequestType

	ReadFlag bool `xml:"m:ReadFlag,omitempty" json:"ReadFlag,omitempty"`

	SuppressReadReceipts bool `xml:"m:SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MarkAllItemsAsReadResponseType struct {
	XMLName xml.Name `xml:"m:MarkAllItemsAsReadResponse"`

	*BaseResponseMessageType
}

type GetConversationItemsType struct {
	XMLName xml.Name `xml:"m:GetConversationItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"m:ItemShape,omitempty" json:"ItemShape,omitempty"`

	FoldersToIgnore *NonEmptyArrayOfBaseFolderIdsType `xml:"m:FoldersToIgnore,omitempty" json:"FoldersToIgnore,omitempty"`

	MaxItemsToReturn int32 `xml:"m:MaxItemsToReturn,omitempty" json:"MaxItemsToReturn,omitempty"`

	SortOrder *ConversationNodeSortOrder `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"m:MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	Conversations *ArrayOfConversationRequestsType `xml:"m:Conversations,omitempty" json:"Conversations,omitempty"`
}

type GetConversationItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetConversationItemsResponseMessage"`

	*ResponseMessageType

	Conversation *ConversationResponseType `xml:"m:Conversation,omitempty" json:"Conversation,omitempty"`
}

type GetConversationItemsResponseType struct {
	XMLName xml.Name `xml:"m:GetConversationItemsResponse"`

	*BaseResponseMessageType
}

type GetOMEConfigurationType struct {
	XMLName xml.Name `xml:"m:GetOMEConfiguration"`

	*BaseRequestType
}

type OMEConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:GetOMEConfigurationResponse"`

	*ResponseMessageType

	Xml string `xml:"m:Xml,omitempty" json:"Xml,omitempty"`
}

type SetOMEConfigurationType struct {
	XMLName xml.Name `xml:"m:SetOMEConfiguration"`

	*BaseRequestType

	Xml string `xml:"m:Xml,omitempty" json:"Xml,omitempty"`
}

type SetOMEConfigurationResponseType struct {
	XMLName xml.Name `xml:"m:SetOMEConfigurationResponse"`

	*ResponseMessageType
}

type GetAppManifestsType struct {
	XMLName xml.Name `xml:"m:GetAppManifests"`

	*BaseRequestType

	ApiVersionSupported string `xml:"m:ApiVersionSupported,omitempty" json:"ApiVersionSupported,omitempty"`

	SchemaVersionSupported string `xml:"m:SchemaVersionSupported,omitempty" json:"SchemaVersionSupported,omitempty"`

	IncludeAllInstalledAddIns bool `xml:"m:IncludeAllInstalledAddIns,omitempty" json:"IncludeAllInstalledAddIns,omitempty"`

	IncludeEntitlementData bool `xml:"m:IncludeEntitlementData,omitempty" json:"IncludeEntitlementData,omitempty"`

	IncludeManifestData bool `xml:"m:IncludeManifestData,omitempty" json:"IncludeManifestData,omitempty"`

	IncludeCustomAppsData bool `xml:"m:IncludeCustomAppsData,omitempty" json:"IncludeCustomAppsData,omitempty"`

	ExtensionIds *ListOfExtensionIdsType `xml:"m:ExtensionIds,omitempty" json:"ExtensionIds,omitempty"`

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"m:AddIns,omitempty" json:"AddIns,omitempty"`
}

type GetAppManifestsResponseType struct {
	XMLName xml.Name `xml:"m:GetAppManifestsResponse"`

	*ResponseMessageType

	Apps *ArrayOfAppsType `xml:"m:Apps,omitempty" json:"Apps,omitempty"`

	Manifests *ArrayOfAppManifestsType `xml:"m:Manifests,omitempty" json:"Manifests,omitempty"`
}

type ArrayOfAppManifestsType struct {
	XMLName xml.Name `xml:"m:Manifests"`

	Manifest [][]byte `xml:"m:Manifest,omitempty" json:"Manifest,omitempty"`
}

type GetAppMarketplaceUrlType struct {
	XMLName xml.Name `xml:"m:GetAppMarketplaceUrl"`

	*BaseRequestType
}

type GetAppMarketplaceUrlResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetAppMarketplaceUrlResponse"`

	*ResponseMessageType

	AppMarketplaceUrl string `xml:"m:AppMarketplaceUrl,omitempty" json:"AppMarketplaceUrl,omitempty"`

	ConnectorsManagementUrl string `xml:"m:ConnectorsManagementUrl,omitempty" json:"ConnectorsManagementUrl,omitempty"`
}

type MarkAsJunkType struct {
	XMLName xml.Name `xml:"m:MarkAsJunk"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`

	IsJunk bool `xml:"IsJunk,attr,omitempty" json:"IsJunk,omitempty"`

	MoveItem bool `xml:"MoveItem,attr,omitempty" json:"MoveItem,omitempty"`
}

type MarkAsJunkResponseType struct {
	XMLName xml.Name `xml:"m:MarkAsJunkResponse"`

	*BaseResponseMessageType
}

type MarkAsJunkResponseMessageType struct {
	XMLName xml.Name `xml:"m:MarkAsJunkResponseMessage"`

	*ResponseMessageType
}

type ReportMessageType struct {
	XMLName xml.Name `xml:"m:ReportMessage"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ItemIds,omitempty" json:"ItemIds,omitempty"`

	ReportAction *ReportMessageActionType `xml:"ReportAction,attr,omitempty" json:"ReportAction,omitempty"`
}

type ReportMessageResponseType struct {
	XMLName xml.Name `xml:"m:ReportMessageResponse"`

	*BaseResponseMessageType
}

type ReportMessageResponseMessageType struct {
	XMLName xml.Name `xml:"m:ReportMessageResponseMessage"`

	*ResponseMessageType
}

type InstallAppType struct {
	XMLName xml.Name `xml:"m:InstallApp"`

	*BaseRequestType

	Manifest []byte `xml:"m:Manifest,omitempty" json:"Manifest,omitempty"`

	MarketplaceAssetId string `xml:"m:MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket string `xml:"m:MarketplaceContentMarket,omitempty" json:"MarketplaceContentMarket,omitempty"`

	SendWelcomeEmail bool `xml:"m:SendWelcomeEmail,omitempty" json:"SendWelcomeEmail,omitempty"`

	ManifestUrl string `xml:"m:ManifestUrl,omitempty" json:"ManifestUrl,omitempty"`

	MarketplaceCorrelationId string `xml:"m:MarketplaceCorrelationId,omitempty" json:"MarketplaceCorrelationId,omitempty"`

	CampaignId string `xml:"m:CampaignId,omitempty" json:"CampaignId,omitempty"`
}

type InstallAppResponseType struct {
	XMLName xml.Name `xml:"m:InstallAppResponse"`

	*ResponseMessageType

	WasFirstInstall bool `xml:"m:WasFirstInstall,omitempty" json:"WasFirstInstall,omitempty"`

	Extension *InstalledAppType `xml:"m:Extension,omitempty" json:"Extension,omitempty"`
}

type UninstallAppType struct {
	XMLName xml.Name `xml:"m:UninstallApp"`

	*BaseRequestType

	ID string `xml:"m:ID,omitempty" json:"ID,omitempty"`
}

type UninstallAppResponseType struct {
	XMLName xml.Name `xml:"m:UninstallAppResponse"`

	*ResponseMessageType
}

type DisableAppType struct {
	XMLName xml.Name `xml:"m:DisableApp"`

	*BaseRequestType

	ID string `xml:"m:ID,omitempty" json:"ID,omitempty"`

	DisableReason *DisableReasonType `xml:"m:DisableReason,omitempty" json:"DisableReason,omitempty"`
}

type DisableAppResponseType struct {
	XMLName xml.Name `xml:"m:DisableAppResponse"`

	*ResponseMessageType
}

type AddNewImContactToGroupType struct {
	XMLName xml.Name `xml:"m:AddNewImContactToGroup"`

	*BaseRequestType

	ImAddress *NonEmptyStringType `xml:"m:ImAddress,omitempty" json:"ImAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"m:DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewImContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddNewImContactToGroupResponse"`

	*ResponseMessageType

	Persona *PersonaType `xml:"m:Persona,omitempty" json:"Persona,omitempty"`
}

type AddNewTelUriContactToGroupType struct {
	XMLName xml.Name `xml:"m:AddNewTelUriContactToGroup"`

	*BaseRequestType

	TelUriAddress *NonEmptyStringType `xml:"m:TelUriAddress,omitempty" json:"TelUriAddress,omitempty"`

	ImContactSipUriAddress *NonEmptyStringType `xml:"m:ImContactSipUriAddress,omitempty" json:"ImContactSipUriAddress,omitempty"`

	ImTelephoneNumber *NonEmptyStringType `xml:"m:ImTelephoneNumber,omitempty" json:"ImTelephoneNumber,omitempty"`

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewTelUriContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddNewTelUriContactToGroupResponse"`

	*ResponseMessageType

	Persona *PersonaType `xml:"m:Persona,omitempty" json:"Persona,omitempty"`
}

type AddImContactToGroupType struct {
	XMLName xml.Name `xml:"m:AddImContactToGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"m:ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddImContactToGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddImContactToGroupResponse"`

	*ResponseMessageType
}

type RemoveImContactFromGroupType struct {
	XMLName xml.Name `xml:"m:RemoveImContactFromGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"m:ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImContactFromGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:RemoveImContactFromGroupResponse"`

	*ResponseMessageType
}

type AddImGroupType struct {
	XMLName xml.Name `xml:"m:AddImGroup"`

	*BaseRequestType

	DisplayName *NonEmptyStringType `xml:"m:DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddImGroupResponse"`

	*ResponseMessageType

	ImGroup *ImGroupType `xml:"m:ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type AddDistributionGroupToImListType struct {
	XMLName xml.Name `xml:"m:AddDistributionGroupToImList"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"m:SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"m:DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddDistributionGroupToImListResponseMessageType struct {
	XMLName xml.Name `xml:"m:AddDistributionGroupToImListResponse"`

	*ResponseMessageType

	ImGroup *ImGroupType `xml:"m:ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type GetImItemListType struct {
	XMLName xml.Name `xml:"m:GetImItemList"`

	*BaseRequestType

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"m:ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemListResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetImItemListResponse"`

	*ResponseMessageType

	ImItemList *ImItemListType `xml:"m:ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type GetImItemsType struct {
	XMLName xml.Name `xml:"m:GetImItems"`

	*BaseRequestType

	ContactIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:ContactIds,omitempty" json:"ContactIds,omitempty"`

	GroupIds *NonEmptyArrayOfBaseItemIdsType `xml:"m:GroupIds,omitempty" json:"GroupIds,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"m:ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemsResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetImItemsResponse"`

	*ResponseMessageType

	ImItemList *ImItemListType `xml:"m:ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type RemoveContactFromImListType struct {
	XMLName xml.Name `xml:"m:RemoveContactFromImList"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"m:ContactId,omitempty" json:"ContactId,omitempty"`
}

type RemoveContactFromImListResponseMessageType struct {
	XMLName xml.Name `xml:"m:RemoveContactFromImListResponse"`

	*ResponseMessageType
}

type RemoveDistributionGroupFromImListType struct {
	XMLName xml.Name `xml:"m:RemoveDistributionGroupFromImList"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveDistributionGroupFromImListResponseMessageType struct {
	XMLName xml.Name `xml:"m:RemoveDistributionGroupFromImListResponse"`

	*ResponseMessageType
}

type RemoveImGroupType struct {
	XMLName xml.Name `xml:"m:RemoveImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:RemoveImGroupResponse"`

	*ResponseMessageType
}

type SetImGroupType struct {
	XMLName xml.Name `xml:"m:SetImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"m:GroupId,omitempty" json:"GroupId,omitempty"`

	NewDisplayName *NonEmptyStringType `xml:"m:NewDisplayName,omitempty" json:"NewDisplayName,omitempty"`
}

type SetImGroupResponseMessageType struct {
	XMLName xml.Name `xml:"m:SetImGroupResponse"`

	*ResponseMessageType
}

type SetImListMigrationCompletedType struct {
	XMLName xml.Name `xml:"m:SetImListMigrationCompleted"`

	*BaseRequestType

	ImListMigrationCompleted bool `xml:"m:ImListMigrationCompleted,omitempty" json:"ImListMigrationCompleted,omitempty"`
}

type SetImListMigrationCompletedResponseMessageType struct {
	XMLName xml.Name `xml:"m:SetImListMigrationCompletedResponse"`

	*ResponseMessageType
}

type GetUserRetentionPolicyTagsType struct {
	XMLName xml.Name `xml:"m:GetUserRetentionPolicyTags"`

	*BaseRequestType
}

type GetUserRetentionPolicyTagsResponseMessageType struct {
	*ResponseMessageType

	RetentionPolicyTags *ArrayOfRetentionPolicyTagsType `xml:"m:RetentionPolicyTags,omitempty" json:"RetentionPolicyTags,omitempty"`
}

type GetUserPhotoType struct {
	XMLName xml.Name `xml:"m:GetUserPhoto"`

	*BaseRequestType

	Email string `xml:"m:Email,omitempty" json:"Email,omitempty"`

	SizeRequested *UserPhotoSizeType `xml:"m:SizeRequested,omitempty" json:"SizeRequested,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"m:TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type GetUserPhotoResponseMessageType struct {
	*ResponseMessageType

	HasChanged bool `xml:"m:HasChanged,omitempty" json:"HasChanged,omitempty"`

	PictureData []byte `xml:"m:PictureData,omitempty" json:"PictureData,omitempty"`
}

type GetUserPhotoResponseType struct {
	*BaseResponseMessageType
}

type GetMeetingSpaceType struct {
	XMLName xml.Name `xml:"m:GetMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceType struct {
	XMLName xml.Name `xml:"m:CreateMeetingSpace"`

	*BaseRequestType

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"m:CreateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceType struct {
	XMLName xml.Name `xml:"m:UpdateMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"m:UpdateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type FindMeetingSpaceByJoinUrlType struct {
	XMLName xml.Name `xml:"m:FindMeetingSpaceByJoinUrl"`

	*BaseRequestType

	JoinUrl string `xml:"m:JoinUrl,omitempty" json:"JoinUrl,omitempty"`
}

type FindMeetingSpaceByJoinUrlResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindMeetingSpaceByJoinUrlResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"m:MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type DeleteMeetingSpaceType struct {
	XMLName xml.Name `xml:"m:DeleteMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"m:DeleteMeetingSpaceResponseMessage"`

	*ResponseMessageType
}

type GetMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"m:GetMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"m:GetMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"m:MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"m:CreateMeetingInstanceRequest"`

	*BaseRequestType

	MeetingInstance *MeetingInstanceType `xml:"m:MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"m:CreateMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"m:MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type UpdateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"m:UpdateMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingInstance *MeetingInstanceType `xml:"m:MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`

	ContentActivitiesToAdd *NonEmptyArrayOfContentActivities `xml:"m:ContentActivitiesToAdd,omitempty" json:"ContentActivitiesToAdd,omitempty"`

	ParticipantActivitiesToAdd *NonEmptyArrayOfParticipantActivities `xml:"m:ParticipantActivitiesToAdd,omitempty" json:"ParticipantActivitiesToAdd,omitempty"`
}

type UpdateMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"m:UpdateMeetingInstanceResponse"`

	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"m:MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type DeleteMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"m:DeleteMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"m:ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingInstanceResponseMessageType struct {
	XMLName xml.Name `xml:"m:DeleteMeetingInstanceResponse"`

	*ResponseMessageType
}

type SetUserPhotoType struct {
	XMLName xml.Name `xml:"m:SetUserPhoto"`

	*BaseRequestType

	Email *NonEmptyStringType `xml:"m:Email,omitempty" json:"Email,omitempty"`

	Content string `xml:"m:Content,omitempty" json:"Content,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"m:TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type SetUserPhotoResponseMessageType struct {
	XMLName xml.Name `xml:"m:SetUserPhotoResponse"`

	*BaseResponseMessageType
}

type RegisterConsentType struct {
	XMLName xml.Name `xml:"m:RegisterConsent"`

	*BaseRequestType

	Id string `xml:"m:Id,omitempty" json:"Id,omitempty"`

	ConsentState *ConsentStateType `xml:"m:ConsentState,omitempty" json:"ConsentState,omitempty"`
}

type RegisterConsentResponseMessageType struct {
	XMLName xml.Name `xml:"m:RegisterConsentResponse"`

	*ResponseMessageType
}

type FindAvailableMeetingTimesType struct {
	XMLName xml.Name `xml:"m:FindAvailableMeetingTimes"`

	*BaseRequestType

	Attendees *ArrayOfSmtpAddressType `xml:"m:Attendees,omitempty" json:"Attendees,omitempty"`

	SearchWindowStart xsd.DateTime `xml:"m:SearchWindowStart,omitempty" json:"SearchWindowStart,omitempty"`

	SearchWindowDuration *Duration `xml:"m:SearchWindowDuration,omitempty" json:"SearchWindowDuration,omitempty"`

	MeetingDurationInMinutes int32 `xml:"m:MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	Location string `xml:"m:Location,omitempty" json:"Location,omitempty"`

	MaxCandidates int32 `xml:"m:MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"m:ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindAvailableMeetingTimesResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindAvailableMeetingTimesResponse"`

	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"m:MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`

	EmptySuggestionsHint *EmptySuggestionReason `xml:"m:EmptySuggestionsHint,omitempty" json:"EmptySuggestionsHint,omitempty"`
}

type FindMeetingTimeCandidatesType struct {
	XMLName xml.Name `xml:"m:FindMeetingTimeCandidates"`

	*BaseRequestType

	AttendeeConstraints *FindMeetingTimesAttendeeConstraints `xml:"m:AttendeeConstraints,omitempty" json:"AttendeeConstraints,omitempty"`

	LocationConstraints *FindMeetingTimesLocationConstraints `xml:"m:LocationConstraints,omitempty" json:"LocationConstraints,omitempty"`

	SearchConstraints *FindMeetingTimesSearchConstraints `xml:"m:SearchConstraints,omitempty" json:"SearchConstraints,omitempty"`

	Constraints *FindMeetingTimesConstraints `xml:"m:Constraints,omitempty" json:"Constraints,omitempty"`
}

type FindMeetingTimeCandidatesResponseMessageType struct {
	XMLName xml.Name `xml:"m:FindMeetingTimeCandidatesResponse"`

	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"m:MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`
}

type StartSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	WarmupOptions *WarmupOptionsType `xml:"m:WarmupOptions,omitempty" json:"WarmupOptions,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"m:SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"m:SearchScope,omitempty" json:"SearchScope,omitempty"`

	IdFormat *IdFormatType `xml:"m:IdFormat,omitempty" json:"IdFormat,omitempty"`

	ApplicationId string `xml:"m:ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario string `xml:"m:Scenario,omitempty" json:"Scenario,omitempty"`
}

type StartSearchSessionResponseMessage struct {
	XMLName xml.Name `xml:"m:StartSearchSessionResponse"`

	*ResponseMessageType
}

type GetSearchSuggestions struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query string `xml:"m:Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"m:SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SuggestionsPrimer bool `xml:"m:SuggestionsPrimer,omitempty" json:"SuggestionsPrimer,omitempty"`

	MaxSuggestionsCountPerSuggestionType int64 `xml:"m:MaxSuggestionsCountPerSuggestionType,omitempty" json:"MaxSuggestionsCountPerSuggestionType,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"m:SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario string `xml:"m:Scenario,omitempty" json:"Scenario,omitempty"`
}

type GetSearchSuggestionsResponseMessage struct {
	XMLName xml.Name `xml:"m:GetSearchSuggestionsResponse"`

	*ResponseMessageType

	SearchSuggestions *SearchSuggestionsType `xml:"m:SearchSuggestions,omitempty" json:"SearchSuggestions,omitempty"`
}

type DeleteSearchSuggestion struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query string `xml:"m:Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"m:SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"m:SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario string `xml:"m:Scenario,omitempty" json:"Scenario,omitempty"`
}

type DeleteSearchSuggestionResponseMessageType struct {
	XMLName xml.Name `xml:"m:DeleteSearchSuggestionResponse"`

	*ResponseMessageType

	Response *DeleteSearchSuggestionResponseType `xml:"m:Response,omitempty" json:"Response,omitempty"`
}

type ExecuteSearch struct {
	*BaseRequestType

	ApplicationId *SearchApplicationIdType `xml:"m:ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario string `xml:"m:Scenario,omitempty" json:"Scenario,omitempty"`

	SearchSessionId *GuidType `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"m:SearchScope,omitempty" json:"SearchScope,omitempty"`

	Query string `xml:"m:Query,omitempty" json:"Query,omitempty"`

	AnalyzedQuery *AnalyzedQuery `xml:"m:AnalyzedQuery,omitempty" json:"AnalyzedQuery,omitempty"`

	ResultRowCount int64 `xml:"m:ResultRowCount,omitempty" json:"ResultRowCount,omitempty"`

	ResultRowOffset int64 `xml:"m:ResultRowOffset,omitempty" json:"ResultRowOffset,omitempty"`

	MaxResultsCountHint int64 `xml:"m:MaxResultsCountHint,omitempty" json:"MaxResultsCountHint,omitempty"`

	MaxPreviewLength int64 `xml:"m:MaxPreviewLength,omitempty" json:"MaxPreviewLength,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*DynamicRefinerQueryType `xml:"m:SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	ExtendedKeywords struct {
		ExtendedKeywordDefinition []*ExtendedKeywordDefinitionType `xml:"m:ExtendedKeywordDefinition,omitempty" json:"ExtendedKeywordDefinition,omitempty"`
	} `ExtendedKeywords,omitempty" json:"ExtendedKeywords,omitempty"`

	RetrieveRefiners bool `xml:"m:RetrieveRefiners,omitempty" json:"RetrieveRefiners,omitempty"`

	MaxRefinersCountPerRefinerType int64 `xml:"m:MaxRefinersCountPerRefinerType,omitempty" json:"MaxRefinersCountPerRefinerType,omitempty"`

	IdFormat *IdFormatType `xml:"m:IdFormat,omitempty" json:"IdFormat,omitempty"`

	ItemTypes *ItemTypesFilterType `xml:"m:ItemTypes,omitempty" json:"ItemTypes,omitempty"`

	PropertySetName *SearchResultsPropertySetNameType `xml:"m:PropertySetName,omitempty" json:"PropertySetName,omitempty"`

	SearchRestrictions *RestrictionType `xml:"m:SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`

	IncludeDeleted bool `xml:"m:IncludeDeleted,omitempty" json:"IncludeDeleted,omitempty"`

	SortOrder *ExecuteSearchSortOrderType `xml:"m:SortOrder,omitempty" json:"SortOrder,omitempty"`

	KeywordMatchOption *MatchOptionsType `xml:"m:KeywordMatchOption,omitempty" json:"KeywordMatchOption,omitempty"`

	ReturnAdditionalIds bool `xml:"m:ReturnAdditionalIds,omitempty" json:"ReturnAdditionalIds,omitempty"`
}

type ExecuteSearchResponseMessage struct {
	XMLName xml.Name `xml:"m:ExecuteSearchResponse"`

	*ResponseMessageType

	SearchResults *SearchResultsType `xml:"m:SearchResults,omitempty" json:"SearchResults,omitempty"`
}

type EndSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"m:SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`
}

type EndSearchSessionResponseMessage struct {
	XMLName xml.Name `xml:"m:EndSearchSessionResponse"`

	*ResponseMessageType
}

type GetLastPrivateCatalogUpdateType struct {
	XMLName xml.Name `xml:"m:GetLastPrivateCatalogUpdate"`

	*BaseRequestType

	Client *OfficeClientType `xml:"m:Client,omitempty" json:"Client,omitempty"`
}

type GetLastPrivateCatalogUpdateResponseType struct {
	XMLName xml.Name `xml:"m:GetLastPrivateCatalogUpdateResponse"`

	*ResponseMessageType

	LastUpdate xsd.DateTime `xml:"m:LastUpdate,omitempty" json:"LastUpdate,omitempty"`

	CatalogHash string `xml:"m:CatalogHash,omitempty" json:"CatalogHash,omitempty"`
}

type GetPrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"m:GetPrivateCatalogAddIns"`

	*BaseRequestType

	Client *OfficeClientType `xml:"m:Client,omitempty" json:"Client,omitempty"`
}

type GetPrivateCatalogAddInsResponseType struct {
	XMLName xml.Name `xml:"m:GetPrivateCatalogAddInsResponse"`

	*ResponseMessageType

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"m:AddIns,omitempty" json:"AddIns,omitempty"`
}

type ArrayOfPrivateCatalogAddInsType struct {
	AddIn []*PrivateCatalogAddInsType `xml:"m:AddIn,omitempty" json:"AddIn,omitempty"`
}

type PrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"m:AddIn"`

	StoreInfo *PrivateCatalogAddInStoreInfoType `xml:"m:StoreInfo,omitempty" json:"StoreInfo,omitempty"`

	ProductId string `xml:"ProductId,attr,omitempty" json:"ProductId,omitempty"`

	State *AddInStateType `xml:"State,attr,omitempty" json:"State,omitempty"`

	Version *VersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type PrivateCatalogAddInStoreInfoType struct {
	XMLName xml.Name `xml:"m:StoreInfo"`

	AssetId string `xml:"AssetId,attr,omitempty" json:"AssetId,omitempty"`

	ContentMarket string `xml:"ContentMarket,attr,omitempty" json:"ContentMarket,omitempty"`
}
