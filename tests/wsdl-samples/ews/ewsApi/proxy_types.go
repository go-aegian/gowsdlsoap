// Code generated by gowsdlsoap DO NOT EDIT.

package ewsApi

import (
	"encoding/xml"
	"github.com/go-aegian/gowsdlsoap/builder/xsd"
)

// Surfaces the various logon types that are supported for conversion

type SpecialLogonTypeType string

const (
	SpecialLogonTypeTypeAdmin SpecialLogonTypeType = "Admin"

	SpecialLogonTypeTypeSystemService SpecialLogonTypeType = "SystemService"
)

type ExchangeVersionType string

const (
	ExchangeVersionTypeExchange2007 ExchangeVersionType = "Exchange2007"

	ExchangeVersionTypeExchange2007_SP1 ExchangeVersionType = "Exchange2007_SP1"

	ExchangeVersionTypeExchange2009 ExchangeVersionType = "Exchange2009"

	ExchangeVersionTypeExchange2010 ExchangeVersionType = "Exchange2010"

	ExchangeVersionTypeExchange2010_SP1 ExchangeVersionType = "Exchange2010_SP1"

	ExchangeVersionTypeExchange2010_SP2 ExchangeVersionType = "Exchange2010_SP2"

	ExchangeVersionTypeExchange2012 ExchangeVersionType = "Exchange2012"

	ExchangeVersionTypeExchange2013 ExchangeVersionType = "Exchange2013"

	ExchangeVersionTypeExchange2013_SP1 ExchangeVersionType = "Exchange2013_SP1"

	ExchangeVersionTypeExchange2015 ExchangeVersionType = "Exchange2015"

	ExchangeVersionTypeExchange2016 ExchangeVersionType = "Exchange2016"

	ExchangeVersionTypeV2015_10_05 ExchangeVersionType = "V2015_10_05"

	ExchangeVersionTypeV2016_01_06 ExchangeVersionType = "V2016_01_06"

	ExchangeVersionTypeV2016_04_13 ExchangeVersionType = "V2016_04_13"

	ExchangeVersionTypeV2016_07_13 ExchangeVersionType = "V2016_07_13"

	ExchangeVersionTypeV2016_10_10 ExchangeVersionType = "V2016_10_10"

	ExchangeVersionTypeV2017_01_07 ExchangeVersionType = "V2017_01_07"

	ExchangeVersionTypeV2017_04_14 ExchangeVersionType = "V2017_04_14"

	ExchangeVersionTypeV2017_07_11 ExchangeVersionType = "V2017_07_11"
)

// Precision for returned DateTime values

type DateTimePrecisionType string

const (
	DateTimePrecisionTypeSeconds DateTimePrecisionType = "Seconds"

	DateTimePrecisionTypeMilliseconds DateTimePrecisionType = "Milliseconds"
)

type NonEmptyStringType string

type MailboxTypeType string

const (
	MailboxTypeTypeUnknown MailboxTypeType = "Unknown"

	MailboxTypeTypeOneOff MailboxTypeType = "OneOff"

	MailboxTypeTypeMailbox MailboxTypeType = "Mailbox"

	MailboxTypeTypePublicDL MailboxTypeType = "PublicDL"

	MailboxTypeTypePrivateDL MailboxTypeType = "PrivateDL"

	MailboxTypeTypeContact MailboxTypeType = "Contact"

	MailboxTypeTypePublicFolder MailboxTypeType = "PublicFolder"

	MailboxTypeTypeGroupMailbox MailboxTypeType = "GroupMailbox"

	MailboxTypeTypeImplicitContact MailboxTypeType = "ImplicitContact"
)

type ActivityDomainType string

const (
	ActivityDomainTypeUnknown ActivityDomainType = "Unknown"

	ActivityDomainTypePersonal ActivityDomainType = "Personal"

	ActivityDomainTypeWork ActivityDomainType = "Work"
)

type ReminderGroupType string

const (
	ReminderGroupTypeCalendar ReminderGroupType = "Calendar"

	ReminderGroupTypeTask ReminderGroupType = "Task"
)

type UnindexedFieldURIType string

const (
	UnindexedFieldURITypeFolderFolderId UnindexedFieldURIType = "folder:FolderId"

	UnindexedFieldURITypeFolderParentFolderId UnindexedFieldURIType = "folder:ParentFolderId"

	UnindexedFieldURITypeFolderDisplayName UnindexedFieldURIType = "folder:DisplayName"

	UnindexedFieldURITypeFolderUnreadCount UnindexedFieldURIType = "folder:UnreadCount"

	UnindexedFieldURITypeFolderTotalCount UnindexedFieldURIType = "folder:TotalCount"

	UnindexedFieldURITypeFolderChildFolderCount UnindexedFieldURIType = "folder:ChildFolderCount"

	UnindexedFieldURITypeFolderFolderClass UnindexedFieldURIType = "folder:FolderClass"

	UnindexedFieldURITypeFolderSearchParameters UnindexedFieldURIType = "folder:SearchParameters"

	UnindexedFieldURITypeFolderManagedFolderInformation UnindexedFieldURIType = "folder:ManagedFolderInformation"

	UnindexedFieldURITypeFolderPermissionSet UnindexedFieldURIType = "folder:PermissionSet"

	UnindexedFieldURITypeFolderEffectiveRights UnindexedFieldURIType = "folder:EffectiveRights"

	UnindexedFieldURITypeFolderSharingEffectiveRights UnindexedFieldURIType = "folder:SharingEffectiveRights"

	UnindexedFieldURITypeFolderDistinguishedFolderId UnindexedFieldURIType = "folder:DistinguishedFolderId"

	UnindexedFieldURITypeFolderPolicyTag UnindexedFieldURIType = "folder:PolicyTag"

	UnindexedFieldURITypeFolderArchiveTag UnindexedFieldURIType = "folder:ArchiveTag"

	UnindexedFieldURITypeFolderReplicaList UnindexedFieldURIType = "folder:ReplicaList"

	UnindexedFieldURITypeItemItemId UnindexedFieldURIType = "item:ItemId"

	UnindexedFieldURITypeItemParentFolderId UnindexedFieldURIType = "item:ParentFolderId"

	UnindexedFieldURITypeItemItemClass UnindexedFieldURIType = "item:ItemClass"

	UnindexedFieldURITypeItemMimeContent UnindexedFieldURIType = "item:MimeContent"

	UnindexedFieldURITypeItemAttachments UnindexedFieldURIType = "item:Attachments"

	UnindexedFieldURITypeItemSubject UnindexedFieldURIType = "item:Subject"

	UnindexedFieldURITypeItemDateTimeReceived UnindexedFieldURIType = "item:DateTimeReceived"

	UnindexedFieldURITypeItemSize UnindexedFieldURIType = "item:Size"

	UnindexedFieldURITypeItemCategories UnindexedFieldURIType = "item:Categories"

	UnindexedFieldURITypeItemHasAttachments UnindexedFieldURIType = "item:HasAttachments"

	UnindexedFieldURITypeItemImportance UnindexedFieldURIType = "item:Importance"

	UnindexedFieldURITypeItemInReplyTo UnindexedFieldURIType = "item:InReplyTo"

	UnindexedFieldURITypeItemInternetMessageHeaders UnindexedFieldURIType = "item:InternetMessageHeaders"

	UnindexedFieldURITypeItemIsAssociated UnindexedFieldURIType = "item:IsAssociated"

	UnindexedFieldURITypeItemIsDraft UnindexedFieldURIType = "item:IsDraft"

	UnindexedFieldURITypeItemIsFromMe UnindexedFieldURIType = "item:IsFromMe"

	UnindexedFieldURITypeItemIsResend UnindexedFieldURIType = "item:IsResend"

	UnindexedFieldURITypeItemIsSubmitted UnindexedFieldURIType = "item:IsSubmitted"

	UnindexedFieldURITypeItemIsUnmodified UnindexedFieldURIType = "item:IsUnmodified"

	UnindexedFieldURITypeItemDateTimeSent UnindexedFieldURIType = "item:DateTimeSent"

	UnindexedFieldURITypeItemDateTimeCreated UnindexedFieldURIType = "item:DateTimeCreated"

	UnindexedFieldURITypeItemBody UnindexedFieldURIType = "item:Body"

	UnindexedFieldURITypeItemResponseObjects UnindexedFieldURIType = "item:ResponseObjects"

	UnindexedFieldURITypeItemSensitivity UnindexedFieldURIType = "item:Sensitivity"

	UnindexedFieldURITypeItemReminderDueBy UnindexedFieldURIType = "item:ReminderDueBy"

	UnindexedFieldURITypeItemReminderIsSet UnindexedFieldURIType = "item:ReminderIsSet"

	UnindexedFieldURITypeItemReminderNextTime UnindexedFieldURIType = "item:ReminderNextTime"

	UnindexedFieldURITypeItemReminderMinutesBeforeStart UnindexedFieldURIType = "item:ReminderMinutesBeforeStart"

	UnindexedFieldURITypeItemDisplayTo UnindexedFieldURIType = "item:DisplayTo"

	UnindexedFieldURITypeItemDisplayCc UnindexedFieldURIType = "item:DisplayCc"

	UnindexedFieldURITypeItemDisplayBcc UnindexedFieldURIType = "item:DisplayBcc"

	UnindexedFieldURITypeItemCulture UnindexedFieldURIType = "item:Culture"

	UnindexedFieldURITypeItemEffectiveRights UnindexedFieldURIType = "item:EffectiveRights"

	UnindexedFieldURITypeItemLastModifiedName UnindexedFieldURIType = "item:LastModifiedName"

	UnindexedFieldURITypeItemLastModifiedTime UnindexedFieldURIType = "item:LastModifiedTime"

	UnindexedFieldURITypeItemConversationId UnindexedFieldURIType = "item:ConversationId"

	UnindexedFieldURITypeItemUniqueBody UnindexedFieldURIType = "item:UniqueBody"

	UnindexedFieldURITypeItemFlag UnindexedFieldURIType = "item:Flag"

	UnindexedFieldURITypeItemStoreEntryId UnindexedFieldURIType = "item:StoreEntryId"

	UnindexedFieldURITypeItemInstanceKey UnindexedFieldURIType = "item:InstanceKey"

	UnindexedFieldURITypeItemNormalizedBody UnindexedFieldURIType = "item:NormalizedBody"

	UnindexedFieldURITypeItemEntityExtractionResult UnindexedFieldURIType = "item:EntityExtractionResult"

	UnindexedFieldURITypeItemPolicyTag UnindexedFieldURIType = "item:PolicyTag"

	UnindexedFieldURITypeItemArchiveTag UnindexedFieldURIType = "item:ArchiveTag"

	UnindexedFieldURITypeItemRetentionDate UnindexedFieldURIType = "item:RetentionDate"

	UnindexedFieldURITypeItemPreview UnindexedFieldURIType = "item:Preview"

	UnindexedFieldURITypeItemPredictedActionReasons UnindexedFieldURIType = "item:PredictedActionReasons"

	UnindexedFieldURITypeItemIsClutter UnindexedFieldURIType = "item:IsClutter"

	UnindexedFieldURITypeItemRightsManagementLicenseData UnindexedFieldURIType = "item:RightsManagementLicenseData"

	UnindexedFieldURITypeItemBlockStatus UnindexedFieldURIType = "item:BlockStatus"

	UnindexedFieldURITypeItemHasBlockedImages UnindexedFieldURIType = "item:HasBlockedImages"

	UnindexedFieldURITypeItemWebClientReadFormQueryString UnindexedFieldURIType = "item:WebClientReadFormQueryString"

	UnindexedFieldURITypeItemWebClientEditFormQueryString UnindexedFieldURIType = "item:WebClientEditFormQueryString"

	UnindexedFieldURITypeItemTextBody UnindexedFieldURIType = "item:TextBody"

	UnindexedFieldURITypeItemIconIndex UnindexedFieldURIType = "item:IconIndex"

	UnindexedFieldURITypeItemMimeContentUTF8 UnindexedFieldURIType = "item:MimeContentUTF8"

	UnindexedFieldURITypeItemMentions UnindexedFieldURIType = "item:Mentions"

	UnindexedFieldURITypeItemMentionedMe UnindexedFieldURIType = "item:MentionedMe"

	UnindexedFieldURITypeItemMentionsPreview UnindexedFieldURIType = "item:MentionsPreview"

	UnindexedFieldURITypeItemMentionsEx UnindexedFieldURIType = "item:MentionsEx"

	UnindexedFieldURITypeItemHashtags UnindexedFieldURIType = "item:Hashtags"

	UnindexedFieldURITypeItemAppliedHashtags UnindexedFieldURIType = "item:AppliedHashtags"

	UnindexedFieldURITypeItemAppliedHashtagsPreview UnindexedFieldURIType = "item:AppliedHashtagsPreview"

	UnindexedFieldURITypeItemLikes UnindexedFieldURIType = "item:Likes"

	UnindexedFieldURITypeItemLikesPreview UnindexedFieldURIType = "item:LikesPreview"

	UnindexedFieldURITypeItemPendingSocialActivityTagIds UnindexedFieldURIType = "item:PendingSocialActivityTagIds"

	UnindexedFieldURITypeItemAtAllMention UnindexedFieldURIType = "item:AtAllMention"

	UnindexedFieldURITypeItemCanDelete UnindexedFieldURIType = "item:CanDelete"

	UnindexedFieldURITypeItemInferenceClassification UnindexedFieldURIType = "item:InferenceClassification"

	UnindexedFieldURITypeItemFirstBody UnindexedFieldURIType = "item:FirstBody"

	UnindexedFieldURITypeMessageConversationIndex UnindexedFieldURIType = "message:ConversationIndex"

	UnindexedFieldURITypeMessageConversationTopic UnindexedFieldURIType = "message:ConversationTopic"

	UnindexedFieldURITypeMessageInternetMessageId UnindexedFieldURIType = "message:InternetMessageId"

	UnindexedFieldURITypeMessageIsRead UnindexedFieldURIType = "message:IsRead"

	UnindexedFieldURITypeMessageIsResponseRequested UnindexedFieldURIType = "message:IsResponseRequested"

	UnindexedFieldURITypeMessageIsReadReceiptRequested UnindexedFieldURIType = "message:IsReadReceiptRequested"

	UnindexedFieldURITypeMessageIsDeliveryReceiptRequested UnindexedFieldURIType = "message:IsDeliveryReceiptRequested"

	UnindexedFieldURITypeMessageReceivedBy UnindexedFieldURIType = "message:ReceivedBy"

	UnindexedFieldURITypeMessageReceivedRepresenting UnindexedFieldURIType = "message:ReceivedRepresenting"

	UnindexedFieldURITypeMessageReferences UnindexedFieldURIType = "message:References"

	UnindexedFieldURITypeMessageReplyTo UnindexedFieldURIType = "message:ReplyTo"

	UnindexedFieldURITypeMessageFrom UnindexedFieldURIType = "message:From"

	UnindexedFieldURITypeMessageSender UnindexedFieldURIType = "message:Sender"

	UnindexedFieldURITypeMessageToRecipients UnindexedFieldURIType = "message:ToRecipients"

	UnindexedFieldURITypeMessageCcRecipients UnindexedFieldURIType = "message:CcRecipients"

	UnindexedFieldURITypeMessageBccRecipients UnindexedFieldURIType = "message:BccRecipients"

	UnindexedFieldURITypeMessageApprovalRequestData UnindexedFieldURIType = "message:ApprovalRequestData"

	UnindexedFieldURITypeMessageVotingInformation UnindexedFieldURIType = "message:VotingInformation"

	UnindexedFieldURITypeMessageReminderMessageData UnindexedFieldURIType = "message:ReminderMessageData"

	UnindexedFieldURITypeMessagePublishedCalendarItemIcs UnindexedFieldURIType = "message:PublishedCalendarItemIcs"

	UnindexedFieldURITypeMessagePublishedCalendarItemName UnindexedFieldURIType = "message:PublishedCalendarItemName"

	UnindexedFieldURITypeMessageMessageSafety UnindexedFieldURIType = "message:MessageSafety"

	UnindexedFieldURITypeSharingMessageSharingMessageAction UnindexedFieldURIType = "sharingMessage:SharingMessageAction"

	UnindexedFieldURITypeMeetingAssociatedCalendarItemId UnindexedFieldURIType = "meeting:AssociatedCalendarItemId"

	UnindexedFieldURITypeMeetingIsDelegated UnindexedFieldURIType = "meeting:IsDelegated"

	UnindexedFieldURITypeMeetingIsOutOfDate UnindexedFieldURIType = "meeting:IsOutOfDate"

	UnindexedFieldURITypeMeetingHasBeenProcessed UnindexedFieldURIType = "meeting:HasBeenProcessed"

	UnindexedFieldURITypeMeetingResponseType UnindexedFieldURIType = "meeting:ResponseType"

	UnindexedFieldURITypeMeetingProposedStart UnindexedFieldURIType = "meeting:ProposedStart"

	UnindexedFieldURITypeMeetingProposedEnd UnindexedFieldURIType = "meeting:ProposedEnd"

	UnindexedFieldURITypeMeetingDoNotForwardMeeting UnindexedFieldURIType = "meeting:DoNotForwardMeeting"

	UnindexedFieldURITypeMeetingRequestMeetingRequestType UnindexedFieldURIType = "meetingRequest:MeetingRequestType"

	UnindexedFieldURITypeMeetingRequestIntendedFreeBusyStatus UnindexedFieldURIType = "meetingRequest:IntendedFreeBusyStatus"

	UnindexedFieldURITypeMeetingRequestChangeHighlights UnindexedFieldURIType = "meetingRequest:ChangeHighlights"

	UnindexedFieldURITypeCalendarStart UnindexedFieldURIType = "calendar:Start"

	UnindexedFieldURITypeCalendarEnd UnindexedFieldURIType = "calendar:End"

	UnindexedFieldURITypeCalendarOriginalStart UnindexedFieldURIType = "calendar:OriginalStart"

	UnindexedFieldURITypeCalendarStartWallClock UnindexedFieldURIType = "calendar:StartWallClock"

	UnindexedFieldURITypeCalendarEndWallClock UnindexedFieldURIType = "calendar:EndWallClock"

	UnindexedFieldURITypeCalendarStartTimeZoneId UnindexedFieldURIType = "calendar:StartTimeZoneId"

	UnindexedFieldURITypeCalendarEndTimeZoneId UnindexedFieldURIType = "calendar:EndTimeZoneId"

	UnindexedFieldURITypeCalendarIsAllDayEvent UnindexedFieldURIType = "calendar:IsAllDayEvent"

	UnindexedFieldURITypeCalendarLegacyFreeBusyStatus UnindexedFieldURIType = "calendar:LegacyFreeBusyStatus"

	UnindexedFieldURITypeCalendarLocation UnindexedFieldURIType = "calendar:Location"

	UnindexedFieldURITypeCalendarEnhancedLocation UnindexedFieldURIType = "calendar:EnhancedLocation"

	UnindexedFieldURITypeCalendarWhen UnindexedFieldURIType = "calendar:When"

	UnindexedFieldURITypeCalendarIsMeeting UnindexedFieldURIType = "calendar:IsMeeting"

	UnindexedFieldURITypeCalendarIsCancelled UnindexedFieldURIType = "calendar:IsCancelled"

	UnindexedFieldURITypeCalendarIsRecurring UnindexedFieldURIType = "calendar:IsRecurring"

	UnindexedFieldURITypeCalendarMeetingRequestWasSent UnindexedFieldURIType = "calendar:MeetingRequestWasSent"

	UnindexedFieldURITypeCalendarIsResponseRequested UnindexedFieldURIType = "calendar:IsResponseRequested"

	UnindexedFieldURITypeCalendarCalendarItemType UnindexedFieldURIType = "calendar:CalendarItemType"

	UnindexedFieldURITypeCalendarMyResponseType UnindexedFieldURIType = "calendar:MyResponseType"

	UnindexedFieldURITypeCalendarOrganizer UnindexedFieldURIType = "calendar:Organizer"

	UnindexedFieldURITypeCalendarRequiredAttendees UnindexedFieldURIType = "calendar:RequiredAttendees"

	UnindexedFieldURITypeCalendarOptionalAttendees UnindexedFieldURIType = "calendar:OptionalAttendees"

	UnindexedFieldURITypeCalendarResources UnindexedFieldURIType = "calendar:Resources"

	UnindexedFieldURITypeCalendarConflictingMeetingCount UnindexedFieldURIType = "calendar:ConflictingMeetingCount"

	UnindexedFieldURITypeCalendarAdjacentMeetingCount UnindexedFieldURIType = "calendar:AdjacentMeetingCount"

	UnindexedFieldURITypeCalendarConflictingMeetings UnindexedFieldURIType = "calendar:ConflictingMeetings"

	UnindexedFieldURITypeCalendarAdjacentMeetings UnindexedFieldURIType = "calendar:AdjacentMeetings"

	UnindexedFieldURITypeCalendarInboxReminders UnindexedFieldURIType = "calendar:InboxReminders"

	UnindexedFieldURITypeCalendarDuration UnindexedFieldURIType = "calendar:Duration"

	UnindexedFieldURITypeCalendarTimeZone UnindexedFieldURIType = "calendar:TimeZone"

	UnindexedFieldURITypeCalendarAppointmentReplyTime UnindexedFieldURIType = "calendar:AppointmentReplyTime"

	UnindexedFieldURITypeCalendarAppointmentSequenceNumber UnindexedFieldURIType = "calendar:AppointmentSequenceNumber"

	UnindexedFieldURITypeCalendarAppointmentState UnindexedFieldURIType = "calendar:AppointmentState"

	UnindexedFieldURITypeCalendarRecurrence UnindexedFieldURIType = "calendar:Recurrence"

	UnindexedFieldURITypeCalendarFirstOccurrence UnindexedFieldURIType = "calendar:FirstOccurrence"

	UnindexedFieldURITypeCalendarLastOccurrence UnindexedFieldURIType = "calendar:LastOccurrence"

	UnindexedFieldURITypeCalendarModifiedOccurrences UnindexedFieldURIType = "calendar:ModifiedOccurrences"

	UnindexedFieldURITypeCalendarDeletedOccurrences UnindexedFieldURIType = "calendar:DeletedOccurrences"

	UnindexedFieldURITypeCalendarMeetingTimeZone UnindexedFieldURIType = "calendar:MeetingTimeZone"

	UnindexedFieldURITypeCalendarConferenceType UnindexedFieldURIType = "calendar:ConferenceType"

	UnindexedFieldURITypeCalendarAllowNewTimeProposal UnindexedFieldURIType = "calendar:AllowNewTimeProposal"

	UnindexedFieldURITypeCalendarIsOnlineMeeting UnindexedFieldURIType = "calendar:IsOnlineMeeting"

	UnindexedFieldURITypeCalendarMeetingWorkspaceUrl UnindexedFieldURIType = "calendar:MeetingWorkspaceUrl"

	UnindexedFieldURITypeCalendarNetShowUrl UnindexedFieldURIType = "calendar:NetShowUrl"

	UnindexedFieldURITypeCalendarUID UnindexedFieldURIType = "calendar:UID"

	UnindexedFieldURITypeCalendarRecurrenceId UnindexedFieldURIType = "calendar:RecurrenceId"

	UnindexedFieldURITypeCalendarDateTimeStamp UnindexedFieldURIType = "calendar:DateTimeStamp"

	UnindexedFieldURITypeCalendarStartTimeZone UnindexedFieldURIType = "calendar:StartTimeZone"

	UnindexedFieldURITypeCalendarEndTimeZone UnindexedFieldURIType = "calendar:EndTimeZone"

	UnindexedFieldURITypeCalendarJoinOnlineMeetingUrl UnindexedFieldURIType = "calendar:JoinOnlineMeetingUrl"

	UnindexedFieldURITypeCalendarOnlineMeetingSettings UnindexedFieldURIType = "calendar:OnlineMeetingSettings"

	UnindexedFieldURITypeCalendarIsOrganizer UnindexedFieldURIType = "calendar:IsOrganizer"

	UnindexedFieldURITypeCalendarCalendarActivityData UnindexedFieldURIType = "calendar:CalendarActivityData"

	UnindexedFieldURITypeCalendarDoNotForwardMeeting UnindexedFieldURIType = "calendar:DoNotForwardMeeting"

	UnindexedFieldURITypeTaskActualWork UnindexedFieldURIType = "task:ActualWork"

	UnindexedFieldURITypeTaskAssignedTime UnindexedFieldURIType = "task:AssignedTime"

	UnindexedFieldURITypeTaskBillingInformation UnindexedFieldURIType = "task:BillingInformation"

	UnindexedFieldURITypeTaskChangeCount UnindexedFieldURIType = "task:ChangeCount"

	UnindexedFieldURITypeTaskCompanies UnindexedFieldURIType = "task:Companies"

	UnindexedFieldURITypeTaskCompleteDate UnindexedFieldURIType = "task:CompleteDate"

	UnindexedFieldURITypeTaskContacts UnindexedFieldURIType = "task:Contacts"

	UnindexedFieldURITypeTaskDelegationState UnindexedFieldURIType = "task:DelegationState"

	UnindexedFieldURITypeTaskDelegator UnindexedFieldURIType = "task:Delegator"

	UnindexedFieldURITypeTaskDueDate UnindexedFieldURIType = "task:DueDate"

	UnindexedFieldURITypeTaskIsAssignmentEditable UnindexedFieldURIType = "task:IsAssignmentEditable"

	UnindexedFieldURITypeTaskIsComplete UnindexedFieldURIType = "task:IsComplete"

	UnindexedFieldURITypeTaskIsRecurring UnindexedFieldURIType = "task:IsRecurring"

	UnindexedFieldURITypeTaskIsTeamTask UnindexedFieldURIType = "task:IsTeamTask"

	UnindexedFieldURITypeTaskMileage UnindexedFieldURIType = "task:Mileage"

	UnindexedFieldURITypeTaskOwner UnindexedFieldURIType = "task:Owner"

	UnindexedFieldURITypeTaskPercentComplete UnindexedFieldURIType = "task:PercentComplete"

	UnindexedFieldURITypeTaskRecurrence UnindexedFieldURIType = "task:Recurrence"

	UnindexedFieldURITypeTaskStartDate UnindexedFieldURIType = "task:StartDate"

	UnindexedFieldURITypeTaskStatus UnindexedFieldURIType = "task:Status"

	UnindexedFieldURITypeTaskStatusDescription UnindexedFieldURIType = "task:StatusDescription"

	UnindexedFieldURITypeTaskTotalWork UnindexedFieldURIType = "task:TotalWork"

	UnindexedFieldURITypeContactsAlias UnindexedFieldURIType = "contacts:Alias"

	UnindexedFieldURITypeContactsAssistantName UnindexedFieldURIType = "contacts:AssistantName"

	UnindexedFieldURITypeContactsBirthday UnindexedFieldURIType = "contacts:Birthday"

	UnindexedFieldURITypeContactsBusinessHomePage UnindexedFieldURIType = "contacts:BusinessHomePage"

	UnindexedFieldURITypeContactsChildren UnindexedFieldURIType = "contacts:Children"

	UnindexedFieldURITypeContactsCompanies UnindexedFieldURIType = "contacts:Companies"

	UnindexedFieldURITypeContactsCompanyName UnindexedFieldURIType = "contacts:CompanyName"

	UnindexedFieldURITypeContactsCompleteName UnindexedFieldURIType = "contacts:CompleteName"

	UnindexedFieldURITypeContactsContactSource UnindexedFieldURIType = "contacts:ContactSource"

	UnindexedFieldURITypeContactsCulture UnindexedFieldURIType = "contacts:Culture"

	UnindexedFieldURITypeContactsDepartment UnindexedFieldURIType = "contacts:Department"

	UnindexedFieldURITypeContactsDisplayName UnindexedFieldURIType = "contacts:DisplayName"

	UnindexedFieldURITypeContactsDirectoryId UnindexedFieldURIType = "contacts:DirectoryId"

	UnindexedFieldURITypeContactsDirectReports UnindexedFieldURIType = "contacts:DirectReports"

	UnindexedFieldURITypeContactsEmailAddresses UnindexedFieldURIType = "contacts:EmailAddresses"

	UnindexedFieldURITypeContactsAbchEmailAddresses UnindexedFieldURIType = "contacts:AbchEmailAddresses"

	UnindexedFieldURITypeContactsFileAs UnindexedFieldURIType = "contacts:FileAs"

	UnindexedFieldURITypeContactsFileAsMapping UnindexedFieldURIType = "contacts:FileAsMapping"

	UnindexedFieldURITypeContactsGeneration UnindexedFieldURIType = "contacts:Generation"

	UnindexedFieldURITypeContactsGivenName UnindexedFieldURIType = "contacts:GivenName"

	UnindexedFieldURITypeContactsImAddresses UnindexedFieldURIType = "contacts:ImAddresses"

	UnindexedFieldURITypeContactsInitials UnindexedFieldURIType = "contacts:Initials"

	UnindexedFieldURITypeContactsJobTitle UnindexedFieldURIType = "contacts:JobTitle"

	UnindexedFieldURITypeContactsManager UnindexedFieldURIType = "contacts:Manager"

	UnindexedFieldURITypeContactsManagerMailbox UnindexedFieldURIType = "contacts:ManagerMailbox"

	UnindexedFieldURITypeContactsMiddleName UnindexedFieldURIType = "contacts:MiddleName"

	UnindexedFieldURITypeContactsMileage UnindexedFieldURIType = "contacts:Mileage"

	UnindexedFieldURITypeContactsMSExchangeCertificate UnindexedFieldURIType = "contacts:MSExchangeCertificate"

	UnindexedFieldURITypeContactsNickname UnindexedFieldURIType = "contacts:Nickname"

	UnindexedFieldURITypeContactsNotes UnindexedFieldURIType = "contacts:Notes"

	UnindexedFieldURITypeContactsOfficeLocation UnindexedFieldURIType = "contacts:OfficeLocation"

	UnindexedFieldURITypeContactsPhoneNumbers UnindexedFieldURIType = "contacts:PhoneNumbers"

	UnindexedFieldURITypeContactsPhoneticFullName UnindexedFieldURIType = "contacts:PhoneticFullName"

	UnindexedFieldURITypeContactsPhoneticFirstName UnindexedFieldURIType = "contacts:PhoneticFirstName"

	UnindexedFieldURITypeContactsPhoneticLastName UnindexedFieldURIType = "contacts:PhoneticLastName"

	UnindexedFieldURITypeContactsPhoto UnindexedFieldURIType = "contacts:Photo"

	UnindexedFieldURITypeContactsPhysicalAddresses UnindexedFieldURIType = "contacts:PhysicalAddresses"

	UnindexedFieldURITypeContactsPostalAddressIndex UnindexedFieldURIType = "contacts:PostalAddressIndex"

	UnindexedFieldURITypeContactsProfession UnindexedFieldURIType = "contacts:Profession"

	UnindexedFieldURITypeContactsSpouseName UnindexedFieldURIType = "contacts:SpouseName"

	UnindexedFieldURITypeContactsSurname UnindexedFieldURIType = "contacts:Surname"

	UnindexedFieldURITypeContactsWeddingAnniversary UnindexedFieldURIType = "contacts:WeddingAnniversary"

	UnindexedFieldURITypeContactsUserSMIMECertificate UnindexedFieldURIType = "contacts:UserSMIMECertificate"

	UnindexedFieldURITypeContactsHasPicture UnindexedFieldURIType = "contacts:HasPicture"

	UnindexedFieldURITypeContactsAccountName UnindexedFieldURIType = "contacts:AccountName"

	UnindexedFieldURITypeContactsIsAutoUpdateDisabled UnindexedFieldURIType = "contacts:IsAutoUpdateDisabled"

	UnindexedFieldURITypeContactsIsMessengerEnabled UnindexedFieldURIType = "contacts:IsMessengerEnabled"

	UnindexedFieldURITypeContactsComment UnindexedFieldURIType = "contacts:Comment"

	UnindexedFieldURITypeContactsContactShortId UnindexedFieldURIType = "contacts:ContactShortId"

	UnindexedFieldURITypeContactsContactType UnindexedFieldURIType = "contacts:ContactType"

	UnindexedFieldURITypeContactsCreatedBy UnindexedFieldURIType = "contacts:CreatedBy"

	UnindexedFieldURITypeContactsGender UnindexedFieldURIType = "contacts:Gender"

	UnindexedFieldURITypeContactsIsHidden UnindexedFieldURIType = "contacts:IsHidden"

	UnindexedFieldURITypeContactsObjectId UnindexedFieldURIType = "contacts:ObjectId"

	UnindexedFieldURITypeContactsPassportId UnindexedFieldURIType = "contacts:PassportId"

	UnindexedFieldURITypeContactsIsPrivate UnindexedFieldURIType = "contacts:IsPrivate"

	UnindexedFieldURITypeContactsSourceId UnindexedFieldURIType = "contacts:SourceId"

	UnindexedFieldURITypeContactsTrustLevel UnindexedFieldURIType = "contacts:TrustLevel"

	UnindexedFieldURITypeContactsUrls UnindexedFieldURIType = "contacts:Urls"

	UnindexedFieldURITypeContactsCid UnindexedFieldURIType = "contacts:Cid"

	UnindexedFieldURITypeContactsSkypeAuthCertificate UnindexedFieldURIType = "contacts:SkypeAuthCertificate"

	UnindexedFieldURITypeContactsSkypeContext UnindexedFieldURIType = "contacts:SkypeContext"

	UnindexedFieldURITypeContactsSkypeId UnindexedFieldURIType = "contacts:SkypeId"

	UnindexedFieldURITypeContactsXboxLiveTag UnindexedFieldURIType = "contacts:XboxLiveTag"

	UnindexedFieldURITypeContactsSkypeRelationship UnindexedFieldURIType = "contacts:SkypeRelationship"

	UnindexedFieldURITypeContactsYomiNickname UnindexedFieldURIType = "contacts:YomiNickname"

	UnindexedFieldURITypeContactsInviteFree UnindexedFieldURIType = "contacts:InviteFree"

	UnindexedFieldURITypeContactsHidePresenceAndProfile UnindexedFieldURIType = "contacts:HidePresenceAndProfile"

	UnindexedFieldURITypeContactsIsPendingOutbound UnindexedFieldURIType = "contacts:IsPendingOutbound"

	UnindexedFieldURITypeContactsSupportGroupFeeds UnindexedFieldURIType = "contacts:SupportGroupFeeds"

	UnindexedFieldURITypeContactsUserTileHash UnindexedFieldURIType = "contacts:UserTileHash"

	UnindexedFieldURITypeContactsUnifiedInbox UnindexedFieldURIType = "contacts:UnifiedInbox"

	UnindexedFieldURITypeContactsMris UnindexedFieldURIType = "contacts:Mris"

	UnindexedFieldURITypeContactsWlid UnindexedFieldURIType = "contacts:Wlid"

	UnindexedFieldURITypeContactsAbchContactId UnindexedFieldURIType = "contacts:AbchContactId"

	UnindexedFieldURITypeContactsNotInBirthdayCalendar UnindexedFieldURIType = "contacts:NotInBirthdayCalendar"

	UnindexedFieldURITypeContactsShellContactType UnindexedFieldURIType = "contacts:ShellContactType"

	UnindexedFieldURITypeContactsImMri UnindexedFieldURIType = "contacts:ImMri"

	UnindexedFieldURITypeContactsPresenceTrustLevel UnindexedFieldURIType = "contacts:PresenceTrustLevel"

	UnindexedFieldURITypeContactsOtherMri UnindexedFieldURIType = "contacts:OtherMri"

	UnindexedFieldURITypeContactsProfileLastChanged UnindexedFieldURIType = "contacts:ProfileLastChanged"

	UnindexedFieldURITypeContactsMobileIMEnabled UnindexedFieldURIType = "contacts:MobileIMEnabled"

	UnindexedFieldURITypeDistributionlistMembers UnindexedFieldURIType = "distributionlist:Members"

	UnindexedFieldURITypeContactsPartnerNetworkProfilePhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkProfilePhotoUrl"

	UnindexedFieldURITypeContactsPartnerNetworkThumbnailPhotoUrl UnindexedFieldURIType = "contacts:PartnerNetworkThumbnailPhotoUrl"

	UnindexedFieldURITypeContactsPersonId UnindexedFieldURIType = "contacts:PersonId"

	UnindexedFieldURITypeContactsConversationGuid UnindexedFieldURIType = "contacts:ConversationGuid"

	UnindexedFieldURITypePostitemPostedTime UnindexedFieldURIType = "postitem:PostedTime"

	UnindexedFieldURITypeConversationConversationId UnindexedFieldURIType = "conversation:ConversationId"

	UnindexedFieldURITypeConversationConversationTopic UnindexedFieldURIType = "conversation:ConversationTopic"

	UnindexedFieldURITypeConversationUniqueRecipients UnindexedFieldURIType = "conversation:UniqueRecipients"

	UnindexedFieldURITypeConversationGlobalUniqueRecipients UnindexedFieldURIType = "conversation:GlobalUniqueRecipients"

	UnindexedFieldURITypeConversationUniqueUnreadSenders UnindexedFieldURIType = "conversation:UniqueUnreadSenders"

	UnindexedFieldURITypeConversationGlobalUniqueUnreadSenders UnindexedFieldURIType = "conversation:GlobalUniqueUnreadSenders"

	UnindexedFieldURITypeConversationUniqueSenders UnindexedFieldURIType = "conversation:UniqueSenders"

	UnindexedFieldURITypeConversationGlobalUniqueSenders UnindexedFieldURIType = "conversation:GlobalUniqueSenders"

	UnindexedFieldURITypeConversationLastDeliveryTime UnindexedFieldURIType = "conversation:LastDeliveryTime"

	UnindexedFieldURITypeConversationGlobalLastDeliveryTime UnindexedFieldURIType = "conversation:GlobalLastDeliveryTime"

	UnindexedFieldURITypeConversationCategories UnindexedFieldURIType = "conversation:Categories"

	UnindexedFieldURITypeConversationGlobalCategories UnindexedFieldURIType = "conversation:GlobalCategories"

	UnindexedFieldURITypeConversationFlagStatus UnindexedFieldURIType = "conversation:FlagStatus"

	UnindexedFieldURITypeConversationGlobalFlagStatus UnindexedFieldURIType = "conversation:GlobalFlagStatus"

	UnindexedFieldURITypeConversationHasAttachments UnindexedFieldURIType = "conversation:HasAttachments"

	UnindexedFieldURITypeConversationGlobalHasAttachments UnindexedFieldURIType = "conversation:GlobalHasAttachments"

	UnindexedFieldURITypeConversationHasIrm UnindexedFieldURIType = "conversation:HasIrm"

	UnindexedFieldURITypeConversationGlobalHasIrm UnindexedFieldURIType = "conversation:GlobalHasIrm"

	UnindexedFieldURITypeConversationMessageCount UnindexedFieldURIType = "conversation:MessageCount"

	UnindexedFieldURITypeConversationGlobalMessageCount UnindexedFieldURIType = "conversation:GlobalMessageCount"

	UnindexedFieldURITypeConversationUnreadCount UnindexedFieldURIType = "conversation:UnreadCount"

	UnindexedFieldURITypeConversationGlobalUnreadCount UnindexedFieldURIType = "conversation:GlobalUnreadCount"

	UnindexedFieldURITypeConversationSize UnindexedFieldURIType = "conversation:Size"

	UnindexedFieldURITypeConversationGlobalSize UnindexedFieldURIType = "conversation:GlobalSize"

	UnindexedFieldURITypeConversationItemClasses UnindexedFieldURIType = "conversation:ItemClasses"

	UnindexedFieldURITypeConversationGlobalItemClasses UnindexedFieldURIType = "conversation:GlobalItemClasses"

	UnindexedFieldURITypeConversationImportance UnindexedFieldURIType = "conversation:Importance"

	UnindexedFieldURITypeConversationGlobalImportance UnindexedFieldURIType = "conversation:GlobalImportance"

	UnindexedFieldURITypeConversationItemIds UnindexedFieldURIType = "conversation:ItemIds"

	UnindexedFieldURITypeConversationGlobalItemIds UnindexedFieldURIType = "conversation:GlobalItemIds"

	UnindexedFieldURITypeConversationLastModifiedTime UnindexedFieldURIType = "conversation:LastModifiedTime"

	UnindexedFieldURITypeConversationInstanceKey UnindexedFieldURIType = "conversation:InstanceKey"

	UnindexedFieldURITypeConversationPreview UnindexedFieldURIType = "conversation:Preview"

	UnindexedFieldURITypeConversationIconIndex UnindexedFieldURIType = "conversation:IconIndex"

	UnindexedFieldURITypeConversationGlobalIconIndex UnindexedFieldURIType = "conversation:GlobalIconIndex"

	UnindexedFieldURITypeConversationDraftItemIds UnindexedFieldURIType = "conversation:DraftItemIds"

	UnindexedFieldURITypeConversationHasClutter UnindexedFieldURIType = "conversation:HasClutter"

	UnindexedFieldURITypeConversationMentionedMe UnindexedFieldURIType = "conversation:MentionedMe"

	UnindexedFieldURITypeConversationGlobalMentionedMe UnindexedFieldURIType = "conversation:GlobalMentionedMe"

	UnindexedFieldURITypeConversationAtAllMention UnindexedFieldURIType = "conversation:AtAllMention"

	UnindexedFieldURITypeConversationGlobalAtAllMention UnindexedFieldURIType = "conversation:GlobalAtAllMention"

	UnindexedFieldURITypePersonFullName UnindexedFieldURIType = "person:FullName"

	UnindexedFieldURITypePersonGivenName UnindexedFieldURIType = "person:GivenName"

	UnindexedFieldURITypePersonSurname UnindexedFieldURIType = "person:Surname"

	UnindexedFieldURITypePersonPhoneNumber UnindexedFieldURIType = "person:PhoneNumber"

	UnindexedFieldURITypePersonSMSNumber UnindexedFieldURIType = "person:SMSNumber"

	UnindexedFieldURITypePersonEmailAddress UnindexedFieldURIType = "person:EmailAddress"

	UnindexedFieldURITypePersonAlias UnindexedFieldURIType = "person:Alias"

	UnindexedFieldURITypePersonDepartment UnindexedFieldURIType = "person:Department"

	UnindexedFieldURITypePersonLinkedInProfileLink UnindexedFieldURIType = "person:LinkedInProfileLink"

	UnindexedFieldURITypePersonSkills UnindexedFieldURIType = "person:Skills"

	UnindexedFieldURITypePersonProfessionalBiography UnindexedFieldURIType = "person:ProfessionalBiography"

	UnindexedFieldURITypePersonManagementChain UnindexedFieldURIType = "person:ManagementChain"

	UnindexedFieldURITypePersonDirectReports UnindexedFieldURIType = "person:DirectReports"

	UnindexedFieldURITypePersonPeers UnindexedFieldURIType = "person:Peers"

	UnindexedFieldURITypePersonTeamSize UnindexedFieldURIType = "person:TeamSize"

	UnindexedFieldURITypePersonCurrentJob UnindexedFieldURIType = "person:CurrentJob"

	UnindexedFieldURITypePersonBirthday UnindexedFieldURIType = "person:Birthday"

	UnindexedFieldURITypePersonHometown UnindexedFieldURIType = "person:Hometown"

	UnindexedFieldURITypePersonCurrentLocation UnindexedFieldURIType = "person:CurrentLocation"

	UnindexedFieldURITypePersonCompanyProfile UnindexedFieldURIType = "person:CompanyProfile"

	UnindexedFieldURITypePersonOffice UnindexedFieldURIType = "person:Office"

	UnindexedFieldURITypePersonHeadline UnindexedFieldURIType = "person:Headline"

	UnindexedFieldURITypePersonMutualConnections UnindexedFieldURIType = "person:MutualConnections"

	UnindexedFieldURITypePersonTitle UnindexedFieldURIType = "person:Title"

	UnindexedFieldURITypePersonMutualManager UnindexedFieldURIType = "person:MutualManager"

	UnindexedFieldURITypePersonInsights UnindexedFieldURIType = "person:Insights"

	UnindexedFieldURITypePersonUserProfilePicture UnindexedFieldURIType = "person:UserProfilePicture"

	UnindexedFieldURITypePersonaPersonaId UnindexedFieldURIType = "persona:PersonaId"

	UnindexedFieldURITypePersonaPersonaType UnindexedFieldURIType = "persona:PersonaType"

	UnindexedFieldURITypePersonaGivenName UnindexedFieldURIType = "persona:GivenName"

	UnindexedFieldURITypePersonaCompanyName UnindexedFieldURIType = "persona:CompanyName"

	UnindexedFieldURITypePersonaSurname UnindexedFieldURIType = "persona:Surname"

	UnindexedFieldURITypePersonaDisplayName UnindexedFieldURIType = "persona:DisplayName"

	UnindexedFieldURITypePersonaEmailAddress UnindexedFieldURIType = "persona:EmailAddress"

	UnindexedFieldURITypePersonaFileAs UnindexedFieldURIType = "persona:FileAs"

	UnindexedFieldURITypePersonaHomeCity UnindexedFieldURIType = "persona:HomeCity"

	UnindexedFieldURITypePersonaCreationTime UnindexedFieldURIType = "persona:CreationTime"

	UnindexedFieldURITypePersonaRelevanceScore UnindexedFieldURIType = "persona:RelevanceScore"

	UnindexedFieldURITypePersonaRankingWeight UnindexedFieldURIType = "persona:RankingWeight"

	UnindexedFieldURITypePersonaWorkCity UnindexedFieldURIType = "persona:WorkCity"

	UnindexedFieldURITypePersonaPersonaObjectStatus UnindexedFieldURIType = "persona:PersonaObjectStatus"

	UnindexedFieldURITypePersonaFileAsId UnindexedFieldURIType = "persona:FileAsId"

	UnindexedFieldURITypePersonaDisplayNamePrefix UnindexedFieldURIType = "persona:DisplayNamePrefix"

	UnindexedFieldURITypePersonaYomiCompanyName UnindexedFieldURIType = "persona:YomiCompanyName"

	UnindexedFieldURITypePersonaYomiFirstName UnindexedFieldURIType = "persona:YomiFirstName"

	UnindexedFieldURITypePersonaYomiLastName UnindexedFieldURIType = "persona:YomiLastName"

	UnindexedFieldURITypePersonaTitle UnindexedFieldURIType = "persona:Title"

	UnindexedFieldURITypePersonaEmailAddresses UnindexedFieldURIType = "persona:EmailAddresses"

	UnindexedFieldURITypePersonaPhoneNumber UnindexedFieldURIType = "persona:PhoneNumber"

	UnindexedFieldURITypePersonaImAddress UnindexedFieldURIType = "persona:ImAddress"

	UnindexedFieldURITypePersonaImAddresses UnindexedFieldURIType = "persona:ImAddresses"

	UnindexedFieldURITypePersonaImAddresses2 UnindexedFieldURIType = "persona:ImAddresses2"

	UnindexedFieldURITypePersonaImAddresses3 UnindexedFieldURIType = "persona:ImAddresses3"

	UnindexedFieldURITypePersonaFolderIds UnindexedFieldURIType = "persona:FolderIds"

	UnindexedFieldURITypePersonaAttributions UnindexedFieldURIType = "persona:Attributions"

	UnindexedFieldURITypePersonaDisplayNames UnindexedFieldURIType = "persona:DisplayNames"

	UnindexedFieldURITypePersonaInitials UnindexedFieldURIType = "persona:Initials"

	UnindexedFieldURITypePersonaFileAses UnindexedFieldURIType = "persona:FileAses"

	UnindexedFieldURITypePersonaFileAsIds UnindexedFieldURIType = "persona:FileAsIds"

	UnindexedFieldURITypePersonaDisplayNamePrefixes UnindexedFieldURIType = "persona:DisplayNamePrefixes"

	UnindexedFieldURITypePersonaGivenNames UnindexedFieldURIType = "persona:GivenNames"

	UnindexedFieldURITypePersonaMiddleNames UnindexedFieldURIType = "persona:MiddleNames"

	UnindexedFieldURITypePersonaSurnames UnindexedFieldURIType = "persona:Surnames"

	UnindexedFieldURITypePersonaGenerations UnindexedFieldURIType = "persona:Generations"

	UnindexedFieldURITypePersonaNicknames UnindexedFieldURIType = "persona:Nicknames"

	UnindexedFieldURITypePersonaYomiCompanyNames UnindexedFieldURIType = "persona:YomiCompanyNames"

	UnindexedFieldURITypePersonaYomiFirstNames UnindexedFieldURIType = "persona:YomiFirstNames"

	UnindexedFieldURITypePersonaYomiLastNames UnindexedFieldURIType = "persona:YomiLastNames"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers UnindexedFieldURIType = "persona:BusinessPhoneNumbers"

	UnindexedFieldURITypePersonaBusinessPhoneNumbers2 UnindexedFieldURIType = "persona:BusinessPhoneNumbers2"

	UnindexedFieldURITypePersonaHomePhones UnindexedFieldURIType = "persona:HomePhones"

	UnindexedFieldURITypePersonaHomePhones2 UnindexedFieldURIType = "persona:HomePhones2"

	UnindexedFieldURITypePersonaMobilePhones UnindexedFieldURIType = "persona:MobilePhones"

	UnindexedFieldURITypePersonaMobilePhones2 UnindexedFieldURIType = "persona:MobilePhones2"

	UnindexedFieldURITypePersonaAssistantPhoneNumbers UnindexedFieldURIType = "persona:AssistantPhoneNumbers"

	UnindexedFieldURITypePersonaCallbackPhones UnindexedFieldURIType = "persona:CallbackPhones"

	UnindexedFieldURITypePersonaCarPhones UnindexedFieldURIType = "persona:CarPhones"

	UnindexedFieldURITypePersonaHomeFaxes UnindexedFieldURIType = "persona:HomeFaxes"

	UnindexedFieldURITypePersonaOrganizationMainPhones UnindexedFieldURIType = "persona:OrganizationMainPhones"

	UnindexedFieldURITypePersonaOtherFaxes UnindexedFieldURIType = "persona:OtherFaxes"

	UnindexedFieldURITypePersonaOtherTelephones UnindexedFieldURIType = "persona:OtherTelephones"

	UnindexedFieldURITypePersonaOtherPhones2 UnindexedFieldURIType = "persona:OtherPhones2"

	UnindexedFieldURITypePersonaPagers UnindexedFieldURIType = "persona:Pagers"

	UnindexedFieldURITypePersonaRadioPhones UnindexedFieldURIType = "persona:RadioPhones"

	UnindexedFieldURITypePersonaTelexNumbers UnindexedFieldURIType = "persona:TelexNumbers"

	UnindexedFieldURITypePersonaWorkFaxes UnindexedFieldURIType = "persona:WorkFaxes"

	UnindexedFieldURITypePersonaEmails1 UnindexedFieldURIType = "persona:Emails1"

	UnindexedFieldURITypePersonaEmails2 UnindexedFieldURIType = "persona:Emails2"

	UnindexedFieldURITypePersonaEmails3 UnindexedFieldURIType = "persona:Emails3"

	UnindexedFieldURITypePersonaBusinessHomePages UnindexedFieldURIType = "persona:BusinessHomePages"

	UnindexedFieldURITypePersonaSchool UnindexedFieldURIType = "persona:School"

	UnindexedFieldURITypePersonaPersonalHomePages UnindexedFieldURIType = "persona:PersonalHomePages"

	UnindexedFieldURITypePersonaOfficeLocations UnindexedFieldURIType = "persona:OfficeLocations"

	UnindexedFieldURITypePersonaBusinessAddresses UnindexedFieldURIType = "persona:BusinessAddresses"

	UnindexedFieldURITypePersonaHomeAddresses UnindexedFieldURIType = "persona:HomeAddresses"

	UnindexedFieldURITypePersonaOtherAddresses UnindexedFieldURIType = "persona:OtherAddresses"

	UnindexedFieldURITypePersonaTitles UnindexedFieldURIType = "persona:Titles"

	UnindexedFieldURITypePersonaDepartments UnindexedFieldURIType = "persona:Departments"

	UnindexedFieldURITypePersonaCompanyNames UnindexedFieldURIType = "persona:CompanyNames"

	UnindexedFieldURITypePersonaManagers UnindexedFieldURIType = "persona:Managers"

	UnindexedFieldURITypePersonaAssistantNames UnindexedFieldURIType = "persona:AssistantNames"

	UnindexedFieldURITypePersonaProfessions UnindexedFieldURIType = "persona:Professions"

	UnindexedFieldURITypePersonaSpouseNames UnindexedFieldURIType = "persona:SpouseNames"

	UnindexedFieldURITypePersonaHobbies UnindexedFieldURIType = "persona:Hobbies"

	UnindexedFieldURITypePersonaWeddingAnniversaries UnindexedFieldURIType = "persona:WeddingAnniversaries"

	UnindexedFieldURITypePersonaBirthdays UnindexedFieldURIType = "persona:Birthdays"

	UnindexedFieldURITypePersonaChildren UnindexedFieldURIType = "persona:Children"

	UnindexedFieldURITypePersonaLocations UnindexedFieldURIType = "persona:Locations"

	UnindexedFieldURITypePersonaExtendedProperties UnindexedFieldURIType = "persona:ExtendedProperties"

	UnindexedFieldURITypePersonaPostalAddress UnindexedFieldURIType = "persona:PostalAddress"

	UnindexedFieldURITypePersonaBodies UnindexedFieldURIType = "persona:Bodies"

	UnindexedFieldURITypePersonaIsFavorite UnindexedFieldURIType = "persona:IsFavorite"

	UnindexedFieldURITypePersonaInlineLinks UnindexedFieldURIType = "persona:InlineLinks"

	UnindexedFieldURITypePersonaItemLinkIds UnindexedFieldURIType = "persona:ItemLinkIds"

	UnindexedFieldURITypePersonaHasActiveDeals UnindexedFieldURIType = "persona:HasActiveDeals"

	UnindexedFieldURITypePersonaIsBusinessContact UnindexedFieldURIType = "persona:IsBusinessContact"

	UnindexedFieldURITypePersonaAttributedHasActiveDeals UnindexedFieldURIType = "persona:AttributedHasActiveDeals"

	UnindexedFieldURITypePersonaAttributedIsBusinessContact UnindexedFieldURIType = "persona:AttributedIsBusinessContact"

	UnindexedFieldURITypePersonaSourceMailboxGuids UnindexedFieldURIType = "persona:SourceMailboxGuids"

	UnindexedFieldURITypePersonaLastContactedDate UnindexedFieldURIType = "persona:LastContactedDate"

	UnindexedFieldURITypePersonaExternalDirectoryObjectId UnindexedFieldURIType = "persona:ExternalDirectoryObjectId"

	UnindexedFieldURITypePersonaMapiEntryId UnindexedFieldURIType = "persona:MapiEntryId"

	UnindexedFieldURITypePersonaMapiEmailAddress UnindexedFieldURIType = "persona:MapiEmailAddress"

	UnindexedFieldURITypePersonaMapiAddressType UnindexedFieldURIType = "persona:MapiAddressType"

	UnindexedFieldURITypePersonaMapiSearchKey UnindexedFieldURIType = "persona:MapiSearchKey"

	UnindexedFieldURITypePersonaMapiTransmittableDisplayName UnindexedFieldURIType = "persona:MapiTransmittableDisplayName"

	UnindexedFieldURITypePersonaMapiSendRichInfo UnindexedFieldURIType = "persona:MapiSendRichInfo"

	UnindexedFieldURITypeRolememberMemberType UnindexedFieldURIType = "rolemember:MemberType"

	UnindexedFieldURITypeRolememberMemberId UnindexedFieldURIType = "rolemember:MemberId"

	UnindexedFieldURITypeRolememberDisplayName UnindexedFieldURIType = "rolemember:DisplayName"

	UnindexedFieldURITypeNetworkTokenRefreshLastCompleted UnindexedFieldURIType = "network:TokenRefreshLastCompleted"

	UnindexedFieldURITypeNetworkTokenRefreshLastAttempted UnindexedFieldURIType = "network:TokenRefreshLastAttempted"

	UnindexedFieldURITypeNetworkSyncEnabled UnindexedFieldURIType = "network:SyncEnabled"

	UnindexedFieldURITypeNetworkRejectedOffers UnindexedFieldURIType = "network:RejectedOffers"

	UnindexedFieldURITypeNetworkSessionHandle UnindexedFieldURIType = "network:SessionHandle"

	UnindexedFieldURITypeNetworkRefreshTokenExpiry2 UnindexedFieldURIType = "network:RefreshTokenExpiry2"

	UnindexedFieldURITypeNetworkRefreshToken2 UnindexedFieldURIType = "network:RefreshToken2"

	UnindexedFieldURITypeNetworkPsaLastChanged UnindexedFieldURIType = "network:PsaLastChanged"

	UnindexedFieldURITypeNetworkOffers UnindexedFieldURIType = "network:Offers"

	UnindexedFieldURITypeNetworkLastWelcomeContact UnindexedFieldURIType = "network:LastWelcomeContact"

	UnindexedFieldURITypeNetworkLastVersionSaved UnindexedFieldURIType = "network:LastVersionSaved"

	UnindexedFieldURITypeNetworkDomainTag UnindexedFieldURIType = "network:DomainTag"

	UnindexedFieldURITypeNetworkFirstAuthErrorDates UnindexedFieldURIType = "network:FirstAuthErrorDates"

	UnindexedFieldURITypeNetworkErrorOffers UnindexedFieldURIType = "network:ErrorOffers"

	UnindexedFieldURITypeNetworkContactSyncSuccess UnindexedFieldURIType = "network:ContactSyncSuccess"

	UnindexedFieldURITypeNetworkContactSyncError UnindexedFieldURIType = "network:ContactSyncError"

	UnindexedFieldURITypeNetworkClientToken2 UnindexedFieldURIType = "network:ClientToken2"

	UnindexedFieldURITypeNetworkClientToken UnindexedFieldURIType = "network:ClientToken"

	UnindexedFieldURITypeNetworkClientPublishSecret UnindexedFieldURIType = "network:ClientPublishSecret"

	UnindexedFieldURITypeNetworkUserEmail UnindexedFieldURIType = "network:UserEmail"

	UnindexedFieldURITypeNetworkAutoLinkSuccess UnindexedFieldURIType = "network:AutoLinkSuccess"

	UnindexedFieldURITypeNetworkAutoLinkError UnindexedFieldURIType = "network:AutoLinkError"

	UnindexedFieldURITypeNetworkIsDefault UnindexedFieldURIType = "network:IsDefault"

	UnindexedFieldURITypeNetworkSettings UnindexedFieldURIType = "network:Settings"

	UnindexedFieldURITypeNetworkProfileUrl UnindexedFieldURIType = "network:ProfileUrl"

	UnindexedFieldURITypeNetworkUserTileUrl UnindexedFieldURIType = "network:UserTileUrl"

	UnindexedFieldURITypeNetworkDomainId UnindexedFieldURIType = "network:DomainId"

	UnindexedFieldURITypeNetworkDisplayName UnindexedFieldURIType = "network:DisplayName"

	UnindexedFieldURITypeNetworkAccountName UnindexedFieldURIType = "network:AccountName"

	UnindexedFieldURITypeNetworkSourceEntryID UnindexedFieldURIType = "network:SourceEntryID"

	UnindexedFieldURITypeAbchpersonFavoriteOrder UnindexedFieldURIType = "abchperson:FavoriteOrder"

	UnindexedFieldURITypeAbchpersonPersonId UnindexedFieldURIType = "abchperson:PersonId"

	UnindexedFieldURITypeAbchpersonExchangePersonIdGuid UnindexedFieldURIType = "abchperson:ExchangePersonIdGuid"

	UnindexedFieldURITypeAbchpersonAntiLinkInfo UnindexedFieldURIType = "abchperson:AntiLinkInfo"

	UnindexedFieldURITypeAbchpersonRelevanceOrder1 UnindexedFieldURIType = "abchperson:RelevanceOrder1"

	UnindexedFieldURITypeAbchpersonRelevanceOrder2 UnindexedFieldURIType = "abchperson:RelevanceOrder2"

	UnindexedFieldURITypeAbchpersonContactHandles UnindexedFieldURIType = "abchperson:ContactHandles"

	UnindexedFieldURITypeAbchpersonCategories UnindexedFieldURIType = "abchperson:Categories"

	UnindexedFieldURITypeBookingServiceIds UnindexedFieldURIType = "booking:ServiceIds"

	UnindexedFieldURITypeBookingStaffIds UnindexedFieldURIType = "booking:StaffIds"

	UnindexedFieldURITypeBookingStaffInitials UnindexedFieldURIType = "booking:StaffInitials"

	UnindexedFieldURITypeBookingCustomerName UnindexedFieldURIType = "booking:CustomerName"

	UnindexedFieldURITypeBookingCustomerEmail UnindexedFieldURIType = "booking:CustomerEmail"

	UnindexedFieldURITypeBookingCustomerPhone UnindexedFieldURIType = "booking:CustomerPhone"

	UnindexedFieldURITypeBookingCustomerId UnindexedFieldURIType = "booking:CustomerId"

	UnindexedFieldURITypeInsightInsightId UnindexedFieldURIType = "insight:InsightId"

	UnindexedFieldURITypeInsightType UnindexedFieldURIType = "insight:Type"

	UnindexedFieldURITypeInsightStartTimeUtc UnindexedFieldURIType = "insight:StartTimeUtc"

	UnindexedFieldURITypeInsightEndTimeUtc UnindexedFieldURIType = "insight:EndTimeUtc"

	UnindexedFieldURITypeInsightStatus UnindexedFieldURIType = "insight:Status"

	UnindexedFieldURITypeInsightVersion UnindexedFieldURIType = "insight:Version"

	UnindexedFieldURITypeInsightApplicationsIds UnindexedFieldURIType = "insight:ApplicationsIds"

	UnindexedFieldURITypeInsightText UnindexedFieldURIType = "insight:Text"

	UnindexedFieldURITypeInsightSuggestedActions UnindexedFieldURIType = "insight:SuggestedActions"

	UnindexedFieldURITypeInsightAppContexts UnindexedFieldURIType = "insight:AppContexts"
)

type DictionaryURIType string

const (
	DictionaryURITypeItemInternetMessageHeader DictionaryURIType = "item:InternetMessageHeader"

	DictionaryURITypeContactsImAddress DictionaryURIType = "contacts:ImAddress"

	DictionaryURITypeContactsPhysicalAddressStreet DictionaryURIType = "contacts:PhysicalAddress:Street"

	DictionaryURITypeContactsPhysicalAddressCity DictionaryURIType = "contacts:PhysicalAddress:City"

	DictionaryURITypeContactsPhysicalAddressState DictionaryURIType = "contacts:PhysicalAddress:State"

	DictionaryURITypeContactsPhysicalAddressCountryOrRegion DictionaryURIType = "contacts:PhysicalAddress:CountryOrRegion"

	DictionaryURITypeContactsPhysicalAddressPostalCode DictionaryURIType = "contacts:PhysicalAddress:PostalCode"

	DictionaryURITypeContactsPhoneNumber DictionaryURIType = "contacts:PhoneNumber"

	DictionaryURITypeContactsEmailAddress DictionaryURIType = "contacts:EmailAddress"

	DictionaryURITypeDistributionlistMembersMember DictionaryURIType = "distributionlist:Members:Member"
)

type ExceptionPropertyURIType string

const (
	ExceptionPropertyURITypeAttachmentName ExceptionPropertyURIType = "attachment:Name"

	ExceptionPropertyURITypeAttachmentContentType ExceptionPropertyURIType = "attachment:ContentType"

	ExceptionPropertyURITypeAttachmentContent ExceptionPropertyURIType = "attachment:Content"

	ExceptionPropertyURITypeRecurrenceMonth ExceptionPropertyURIType = "recurrence:Month"

	ExceptionPropertyURITypeRecurrenceDayOfWeekIndex ExceptionPropertyURIType = "recurrence:DayOfWeekIndex"

	ExceptionPropertyURITypeRecurrenceDaysOfWeek ExceptionPropertyURIType = "recurrence:DaysOfWeek"

	ExceptionPropertyURITypeRecurrenceDayOfMonth ExceptionPropertyURIType = "recurrence:DayOfMonth"

	ExceptionPropertyURITypeRecurrenceInterval ExceptionPropertyURIType = "recurrence:Interval"

	ExceptionPropertyURITypeRecurrenceNumberOfOccurrences ExceptionPropertyURIType = "recurrence:NumberOfOccurrences"

	ExceptionPropertyURITypeTimezoneOffset ExceptionPropertyURIType = "timezone:Offset"
)

// The regular expression captures the standard representation of a GUID

type GuidType string

// Defines the well known property set ids for extended properties.

type DistinguishedPropertySetType string

const (
	DistinguishedPropertySetTypeMeeting DistinguishedPropertySetType = "Meeting"

	DistinguishedPropertySetTypeAppointment DistinguishedPropertySetType = "Appointment"

	DistinguishedPropertySetTypeCommon DistinguishedPropertySetType = "Common"

	DistinguishedPropertySetTypePublicStrings DistinguishedPropertySetType = "PublicStrings"

	DistinguishedPropertySetTypeAddress DistinguishedPropertySetType = "Address"

	DistinguishedPropertySetTypeInternetHeaders DistinguishedPropertySetType = "InternetHeaders"

	DistinguishedPropertySetTypeCalendarAssistant DistinguishedPropertySetType = "CalendarAssistant"

	DistinguishedPropertySetTypeUnifiedMessaging DistinguishedPropertySetType = "UnifiedMessaging"

	DistinguishedPropertySetTypeTask DistinguishedPropertySetType = "Task"

	DistinguishedPropertySetTypeSharing DistinguishedPropertySetType = "Sharing"
)

// Includes all of the extended property types that we support. Note that Error, Null, Object and Object array can not be used in restrictions, or for setting/getting
// values. They are only there for error reporting purposes.

type MapiPropertyTypeType string

const (
	MapiPropertyTypeTypeApplicationTime MapiPropertyTypeType = "ApplicationTime"

	MapiPropertyTypeTypeApplicationTimeArray MapiPropertyTypeType = "ApplicationTimeArray"

	MapiPropertyTypeTypeBinary MapiPropertyTypeType = "Binary"

	MapiPropertyTypeTypeBinaryArray MapiPropertyTypeType = "BinaryArray"

	MapiPropertyTypeTypeBoolean MapiPropertyTypeType = "Boolean"

	MapiPropertyTypeTypeCLSID MapiPropertyTypeType = "CLSID"

	MapiPropertyTypeTypeCLSIDArray MapiPropertyTypeType = "CLSIDArray"

	MapiPropertyTypeTypeCurrency MapiPropertyTypeType = "Currency"

	MapiPropertyTypeTypeCurrencyArray MapiPropertyTypeType = "CurrencyArray"

	MapiPropertyTypeTypeDouble MapiPropertyTypeType = "Double"

	MapiPropertyTypeTypeDoubleArray MapiPropertyTypeType = "DoubleArray"

	MapiPropertyTypeTypeError MapiPropertyTypeType = "Error"

	MapiPropertyTypeTypeFloat MapiPropertyTypeType = "Float"

	MapiPropertyTypeTypeFloatArray MapiPropertyTypeType = "FloatArray"

	MapiPropertyTypeTypeInteger MapiPropertyTypeType = "Integer"

	MapiPropertyTypeTypeIntegerArray MapiPropertyTypeType = "IntegerArray"

	MapiPropertyTypeTypeLong MapiPropertyTypeType = "Long"

	MapiPropertyTypeTypeLongArray MapiPropertyTypeType = "LongArray"

	MapiPropertyTypeTypeNull MapiPropertyTypeType = "Null"

	MapiPropertyTypeTypeObject MapiPropertyTypeType = "Object"

	MapiPropertyTypeTypeObjectArray MapiPropertyTypeType = "ObjectArray"

	MapiPropertyTypeTypeShort MapiPropertyTypeType = "Short"

	MapiPropertyTypeTypeShortArray MapiPropertyTypeType = "ShortArray"

	MapiPropertyTypeTypeSystemTime MapiPropertyTypeType = "SystemTime"

	MapiPropertyTypeTypeSystemTimeArray MapiPropertyTypeType = "SystemTimeArray"

	MapiPropertyTypeTypeString MapiPropertyTypeType = "String"

	MapiPropertyTypeTypeStringArray MapiPropertyTypeType = "StringArray"
)

// This type represents the property tag (MINUS the type part). There are two options for representation: 1. Hex ==> 0x3fa4 2. Decimal ==> 0-65535

type PropertyTagType string

// Types of sub-tree traversal for deletion and enumeration

type FolderQueryTraversalType string

const (
	FolderQueryTraversalTypeShallow FolderQueryTraversalType = "Shallow"

	FolderQueryTraversalTypeDeep FolderQueryTraversalType = "Deep"

	FolderQueryTraversalTypeSoftDeleted FolderQueryTraversalType = "SoftDeleted"
)

// Types of sub-tree traversal for deletion and enumeration

type SearchFolderTraversalType string

const (
	SearchFolderTraversalTypeShallow SearchFolderTraversalType = "Shallow"

	SearchFolderTraversalTypeDeep SearchFolderTraversalType = "Deep"
)

// Types of sub-tree traversal for deletion and enumeration

type ItemQueryTraversalType string

const (
	ItemQueryTraversalTypeShallow ItemQueryTraversalType = "Shallow"

	ItemQueryTraversalTypeSoftDeleted ItemQueryTraversalType = "SoftDeleted"

	ItemQueryTraversalTypeAssociated ItemQueryTraversalType = "Associated"
)

// Types of sub-tree traversal for conversations

type ConversationQueryTraversalType string

const (
	ConversationQueryTraversalTypeShallow ConversationQueryTraversalType = "Shallow"

	ConversationQueryTraversalTypeDeep ConversationQueryTraversalType = "Deep"
)

type DefaultShapeNamesType string

const (
	DefaultShapeNamesTypeIdOnly DefaultShapeNamesType = "IdOnly"

	DefaultShapeNamesTypeDefault DefaultShapeNamesType = "Default"

	DefaultShapeNamesTypeAllProperties DefaultShapeNamesType = "AllProperties"

	DefaultShapeNamesTypePcxPeopleSearch DefaultShapeNamesType = "PcxPeopleSearch"
)

type BodyTypeResponseType string

const (
	BodyTypeResponseTypeBest BodyTypeResponseType = "Best"

	BodyTypeResponseTypeHTML BodyTypeResponseType = "HTML"

	BodyTypeResponseTypeText BodyTypeResponseType = "Text"
)

type DisposalType string

const (
	DisposalTypeHardDelete DisposalType = "HardDelete"

	DisposalTypeSoftDelete DisposalType = "SoftDelete"

	DisposalTypeMoveToDeletedItems DisposalType = "MoveToDeletedItems"
)

// Type of conflict resolution to attempt during update

type ConflictResolutionType string

const (
	ConflictResolutionTypeNeverOverwrite ConflictResolutionType = "NeverOverwrite"

	ConflictResolutionTypeAutoResolve ConflictResolutionType = "AutoResolve"

	ConflictResolutionTypeAlwaysOverwrite ConflictResolutionType = "AlwaysOverwrite"
)

type ClientAccessTokenTypeType string

const (
	ClientAccessTokenTypeTypeCallerIdentity ClientAccessTokenTypeType = "CallerIdentity"

	ClientAccessTokenTypeTypeExtensionCallback ClientAccessTokenTypeType = "ExtensionCallback"

	ClientAccessTokenTypeTypeScopedToken ClientAccessTokenTypeType = "ScopedToken"

	ClientAccessTokenTypeTypeExtensionRestApiCallback ClientAccessTokenTypeType = "ExtensionRestApiCallback"

	ClientAccessTokenTypeTypeConnectors ClientAccessTokenTypeType = "Connectors"

	ClientAccessTokenTypeTypeLoki ClientAccessTokenTypeType = "Loki"

	ClientAccessTokenTypeTypeDesktopOutlook ClientAccessTokenTypeType = "DesktopOutlook"
)

type ResponseClassType string

const (
	ResponseClassTypeSuccess ResponseClassType = "Success"

	ResponseClassTypeWarning ResponseClassType = "Warning"

	ResponseClassTypeError ResponseClassType = "Error"
)

type SensitivityChoicesType string

const (
	SensitivityChoicesTypeNormal SensitivityChoicesType = "Normal"

	SensitivityChoicesTypePersonal SensitivityChoicesType = "Personal"

	SensitivityChoicesTypePrivate SensitivityChoicesType = "Private"

	SensitivityChoicesTypeConfidential SensitivityChoicesType = "Confidential"
)

type ImportanceChoicesType string

const (
	ImportanceChoicesTypeLow ImportanceChoicesType = "Low"

	ImportanceChoicesTypeNormal ImportanceChoicesType = "Normal"

	ImportanceChoicesTypeHigh ImportanceChoicesType = "High"
)

type BodyTypeType string

const (
	BodyTypeTypeHTML BodyTypeType = "HTML"

	BodyTypeTypeText BodyTypeType = "Text"
)

type FolderClassType string

// URIs for the distinguished folders accessible from a mailbox

type DistinguishedFolderIdNameType string

const (
	DistinguishedFolderIdNameTypeCalendar DistinguishedFolderIdNameType = "calendar"

	DistinguishedFolderIdNameTypeContacts DistinguishedFolderIdNameType = "contacts"

	DistinguishedFolderIdNameTypeDeleteditems DistinguishedFolderIdNameType = "deleteditems"

	DistinguishedFolderIdNameTypeDrafts DistinguishedFolderIdNameType = "drafts"

	DistinguishedFolderIdNameTypeInbox DistinguishedFolderIdNameType = "inbox"

	DistinguishedFolderIdNameTypeJournal DistinguishedFolderIdNameType = "journal"

	DistinguishedFolderIdNameTypeNotes DistinguishedFolderIdNameType = "notes"

	DistinguishedFolderIdNameTypeOutbox DistinguishedFolderIdNameType = "outbox"

	DistinguishedFolderIdNameTypeSentitems DistinguishedFolderIdNameType = "sentitems"

	DistinguishedFolderIdNameTypeTasks DistinguishedFolderIdNameType = "tasks"

	DistinguishedFolderIdNameTypeMsgfolderroot DistinguishedFolderIdNameType = "msgfolderroot"

	DistinguishedFolderIdNameTypePublicfoldersroot DistinguishedFolderIdNameType = "publicfoldersroot"

	DistinguishedFolderIdNameTypeRoot DistinguishedFolderIdNameType = "root"

	DistinguishedFolderIdNameTypeJunkemail DistinguishedFolderIdNameType = "junkemail"

	DistinguishedFolderIdNameTypeSearchfolders DistinguishedFolderIdNameType = "searchfolders"

	DistinguishedFolderIdNameTypeVoicemail DistinguishedFolderIdNameType = "voicemail"

	DistinguishedFolderIdNameTypeRecoverableitemsroot DistinguishedFolderIdNameType = "recoverableitemsroot"

	DistinguishedFolderIdNameTypeRecoverableitemsdeletions DistinguishedFolderIdNameType = "recoverableitemsdeletions"

	DistinguishedFolderIdNameTypeRecoverableitemsversions DistinguishedFolderIdNameType = "recoverableitemsversions"

	DistinguishedFolderIdNameTypeRecoverableitemspurges DistinguishedFolderIdNameType = "recoverableitemspurges"

	DistinguishedFolderIdNameTypeRecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "recoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeArchiveroot DistinguishedFolderIdNameType = "archiveroot"

	DistinguishedFolderIdNameTypeArchivemsgfolderroot DistinguishedFolderIdNameType = "archivemsgfolderroot"

	DistinguishedFolderIdNameTypeArchivedeleteditems DistinguishedFolderIdNameType = "archivedeleteditems"

	DistinguishedFolderIdNameTypeArchiveinbox DistinguishedFolderIdNameType = "archiveinbox"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsroot DistinguishedFolderIdNameType = "archiverecoverableitemsroot"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdeletions DistinguishedFolderIdNameType = "archiverecoverableitemsdeletions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsversions DistinguishedFolderIdNameType = "archiverecoverableitemsversions"

	DistinguishedFolderIdNameTypeArchiverecoverableitemspurges DistinguishedFolderIdNameType = "archiverecoverableitemspurges"

	DistinguishedFolderIdNameTypeArchiverecoverableitemsdiscoveryholds DistinguishedFolderIdNameType = "archiverecoverableitemsdiscoveryholds"

	DistinguishedFolderIdNameTypeSyncissues DistinguishedFolderIdNameType = "syncissues"

	DistinguishedFolderIdNameTypeConflicts DistinguishedFolderIdNameType = "conflicts"

	DistinguishedFolderIdNameTypeLocalfailures DistinguishedFolderIdNameType = "localfailures"

	DistinguishedFolderIdNameTypeServerfailures DistinguishedFolderIdNameType = "serverfailures"

	DistinguishedFolderIdNameTypeRecipientcache DistinguishedFolderIdNameType = "recipientcache"

	DistinguishedFolderIdNameTypeQuickcontacts DistinguishedFolderIdNameType = "quickcontacts"

	DistinguishedFolderIdNameTypeConversationhistory DistinguishedFolderIdNameType = "conversationhistory"

	DistinguishedFolderIdNameTypeAdminauditlogs DistinguishedFolderIdNameType = "adminauditlogs"

	DistinguishedFolderIdNameTypeTodosearch DistinguishedFolderIdNameType = "todosearch"

	DistinguishedFolderIdNameTypeMycontacts DistinguishedFolderIdNameType = "mycontacts"

	DistinguishedFolderIdNameTypeDirectory DistinguishedFolderIdNameType = "directory"

	DistinguishedFolderIdNameTypeImcontactlist DistinguishedFolderIdNameType = "imcontactlist"

	DistinguishedFolderIdNameTypePeopleconnect DistinguishedFolderIdNameType = "peopleconnect"

	DistinguishedFolderIdNameTypeFavorites DistinguishedFolderIdNameType = "favorites"

	DistinguishedFolderIdNameTypeMecontact DistinguishedFolderIdNameType = "mecontact"

	DistinguishedFolderIdNameTypePersonmetadata DistinguishedFolderIdNameType = "personmetadata"

	DistinguishedFolderIdNameTypeTeamspaceactivity DistinguishedFolderIdNameType = "teamspaceactivity"

	DistinguishedFolderIdNameTypeTeamspacemessaging DistinguishedFolderIdNameType = "teamspacemessaging"

	DistinguishedFolderIdNameTypeTeamspaceworkitems DistinguishedFolderIdNameType = "teamspaceworkitems"

	DistinguishedFolderIdNameTypeScheduled DistinguishedFolderIdNameType = "scheduled"

	DistinguishedFolderIdNameTypeOrionnotes DistinguishedFolderIdNameType = "orionnotes"

	DistinguishedFolderIdNameTypeTagitems DistinguishedFolderIdNameType = "tagitems"

	DistinguishedFolderIdNameTypeAlltaggeditems DistinguishedFolderIdNameType = "alltaggeditems"

	DistinguishedFolderIdNameTypeExternalcontacts DistinguishedFolderIdNameType = "externalcontacts"

	DistinguishedFolderIdNameTypeTeamchat DistinguishedFolderIdNameType = "teamchat"

	DistinguishedFolderIdNameTypeTeamchathistory DistinguishedFolderIdNameType = "teamchathistory"

	DistinguishedFolderIdNameTypeYammerroot DistinguishedFolderIdNameType = "yammerroot"

	DistinguishedFolderIdNameTypeYammerinbound DistinguishedFolderIdNameType = "yammerinbound"

	DistinguishedFolderIdNameTypeYammeroutbound DistinguishedFolderIdNameType = "yammeroutbound"

	DistinguishedFolderIdNameTypeYammerfeeds DistinguishedFolderIdNameType = "yammerfeeds"

	DistinguishedFolderIdNameTypeOnedriveroot DistinguishedFolderIdNameType = "onedriveroot"

	DistinguishedFolderIdNameTypeOnedriverecylebin DistinguishedFolderIdNameType = "onedriverecylebin"

	DistinguishedFolderIdNameTypeOnedrivesystem DistinguishedFolderIdNameType = "onedrivesystem"

	DistinguishedFolderIdNameTypeOnedrivevolume DistinguishedFolderIdNameType = "onedrivevolume"

	DistinguishedFolderIdNameTypeImportant DistinguishedFolderIdNameType = "important"

	DistinguishedFolderIdNameTypeStarred DistinguishedFolderIdNameType = "starred"

	DistinguishedFolderIdNameTypeArchive DistinguishedFolderIdNameType = "archive"
)

type CreateActionType string

const (
	CreateActionTypeCreateNew CreateActionType = "CreateNew"

	CreateActionTypeUpdate CreateActionType = "Update"

	CreateActionTypeUpdateOrCreate CreateActionType = "UpdateOrCreate"
)

type CompleteActionType string

const (
	CompleteActionTypeCommit CompleteActionType = "Commit"

	CompleteActionTypeAbandon CompleteActionType = "Abandon"
)

// Types of view filters for finding items/conversations

type ViewFilterType string

const (
	ViewFilterTypeAll ViewFilterType = "All"

	ViewFilterTypeFlagged ViewFilterType = "Flagged"

	ViewFilterTypeHasAttachment ViewFilterType = "HasAttachment"

	ViewFilterTypeToOrCcMe ViewFilterType = "ToOrCcMe"

	ViewFilterTypeUnread ViewFilterType = "Unread"

	ViewFilterTypeTaskActive ViewFilterType = "TaskActive"

	ViewFilterTypeTaskOverdue ViewFilterType = "TaskOverdue"

	ViewFilterTypeTaskCompleted ViewFilterType = "TaskCompleted"

	ViewFilterTypeNoClutter ViewFilterType = "NoClutter"

	ViewFilterTypeClutter ViewFilterType = "Clutter"
)

type ReminderActionType string

const (
	ReminderActionTypeDismiss ReminderActionType = "Dismiss"

	ReminderActionTypeSnooze ReminderActionType = "Snooze"
)

type DerivedItemIdType string

type ItemClassType string

type FlagStatusType string

const (
	FlagStatusTypeNotFlagged FlagStatusType = "NotFlagged"

	FlagStatusTypeFlagged FlagStatusType = "Flagged"

	FlagStatusTypeComplete FlagStatusType = "Complete"
)

type PredictedActionReasonType string

const (
	PredictedActionReasonTypeNone PredictedActionReasonType = "None"

	PredictedActionReasonTypeConversationStarterIsYou PredictedActionReasonType = "ConversationStarterIsYou"

	PredictedActionReasonTypeOnlyRecipient PredictedActionReasonType = "OnlyRecipient"

	PredictedActionReasonTypeConversationContributions PredictedActionReasonType = "ConversationContributions"

	PredictedActionReasonTypeMarkedImportantBySender PredictedActionReasonType = "MarkedImportantBySender"

	PredictedActionReasonTypeSenderIsManager PredictedActionReasonType = "SenderIsManager"

	PredictedActionReasonTypeSenderIsInManagementChain PredictedActionReasonType = "SenderIsInManagementChain"

	PredictedActionReasonTypeSenderIsDirectReport PredictedActionReasonType = "SenderIsDirectReport"

	PredictedActionReasonTypeActionBasedOnSender PredictedActionReasonType = "ActionBasedOnSender"

	PredictedActionReasonTypeNameOnToLine PredictedActionReasonType = "NameOnToLine"

	PredictedActionReasonTypeNameOnCcLine PredictedActionReasonType = "NameOnCcLine"

	PredictedActionReasonTypeManagerPosition PredictedActionReasonType = "ManagerPosition"

	PredictedActionReasonTypeReplyToAMessageFromMe PredictedActionReasonType = "ReplyToAMessageFromMe"

	PredictedActionReasonTypePreviouslyFlagged PredictedActionReasonType = "PreviouslyFlagged"

	PredictedActionReasonTypeActionBasedOnRecipients PredictedActionReasonType = "ActionBasedOnRecipients"

	PredictedActionReasonTypeActionBasedOnSubjectWords PredictedActionReasonType = "ActionBasedOnSubjectWords"

	PredictedActionReasonTypeActionBasedOnBasedOnBodyWords PredictedActionReasonType = "ActionBasedOnBasedOnBodyWords"
)

type EmailPositionType string

const (
	EmailPositionTypeLatestReply EmailPositionType = "LatestReply"

	EmailPositionTypeOther EmailPositionType = "Other"

	EmailPositionTypeSubject EmailPositionType = "Subject"

	EmailPositionTypeSignature EmailPositionType = "Signature"
)

type InferenceClassificationType string

const (
	InferenceClassificationTypeFocused InferenceClassificationType = "Focused"

	InferenceClassificationTypeOther InferenceClassificationType = "Other"
)

type ConversationActionTypeType string

const (
	ConversationActionTypeTypeAlwaysCategorize ConversationActionTypeType = "AlwaysCategorize"

	ConversationActionTypeTypeAlwaysDelete ConversationActionTypeType = "AlwaysDelete"

	ConversationActionTypeTypeAlwaysMove ConversationActionTypeType = "AlwaysMove"

	ConversationActionTypeTypeDelete ConversationActionTypeType = "Delete"

	ConversationActionTypeTypeMove ConversationActionTypeType = "Move"

	ConversationActionTypeTypeCopy ConversationActionTypeType = "Copy"

	ConversationActionTypeTypeSetReadState ConversationActionTypeType = "SetReadState"

	ConversationActionTypeTypeSetRetentionPolicy ConversationActionTypeType = "SetRetentionPolicy"

	ConversationActionTypeTypeFlag ConversationActionTypeType = "Flag"
)

type ConversationNodeSortOrder string

const (
	ConversationNodeSortOrderTreeOrderAscending ConversationNodeSortOrder = "TreeOrderAscending"

	ConversationNodeSortOrderTreeOrderDescending ConversationNodeSortOrder = "TreeOrderDescending"

	ConversationNodeSortOrderDateOrderAscending ConversationNodeSortOrder = "DateOrderAscending"

	ConversationNodeSortOrderDateOrderDescending ConversationNodeSortOrder = "DateOrderDescending"
)

type TokenSourceType string

const (
	TokenSourceTypeNone TokenSourceType = "None"

	TokenSourceTypeLinkedIn TokenSourceType = "LinkedIn"
)

type GroupMailboxConfigurationActionType interface{}

type InstantSearchItemType interface{}

type InstantSearchResultType interface{}

type QueryOptionsType interface{}

type OneDriveViewType interface{}

type DelveViewType interface{}

type GroupMemberIdentifierType string

const (
	GroupMemberIdentifierTypeExternalDirectoryObjectId GroupMemberIdentifierType = "ExternalDirectoryObjectId"

	GroupMemberIdentifierTypeLegacyExchangeDN GroupMemberIdentifierType = "LegacyExchangeDN"

	GroupMemberIdentifierTypeSmtpAddress GroupMemberIdentifierType = "SmtpAddress"
)

type ModernGroupTypeType string

const (
	ModernGroupTypeTypeNone ModernGroupTypeType = "None"

	ModernGroupTypeTypePrivate ModernGroupTypeType = "Private"

	ModernGroupTypeTypeSecret ModernGroupTypeType = "Secret"

	ModernGroupTypeTypePublic ModernGroupTypeType = "Public"
)

type MessageDispositionType string

const (
	MessageDispositionTypeSaveOnly MessageDispositionType = "SaveOnly"

	MessageDispositionTypeSendOnly MessageDispositionType = "SendOnly"

	MessageDispositionTypeSendAndSaveCopy MessageDispositionType = "SendAndSaveCopy"
)

type CalendarItemCreateOrDeleteOperationType string

const (
	CalendarItemCreateOrDeleteOperationTypeSendToNone CalendarItemCreateOrDeleteOperationType = "SendToNone"

	CalendarItemCreateOrDeleteOperationTypeSendOnlyToAll CalendarItemCreateOrDeleteOperationType = "SendOnlyToAll"

	CalendarItemCreateOrDeleteOperationTypeSendToAllAndSaveCopy CalendarItemCreateOrDeleteOperationType = "SendToAllAndSaveCopy"
)

type CalendarItemUpdateOperationType string

const (
	CalendarItemUpdateOperationTypeSendToNone CalendarItemUpdateOperationType = "SendToNone"

	CalendarItemUpdateOperationTypeSendOnlyToAll CalendarItemUpdateOperationType = "SendOnlyToAll"

	CalendarItemUpdateOperationTypeSendOnlyToChanged CalendarItemUpdateOperationType = "SendOnlyToChanged"

	CalendarItemUpdateOperationTypeSendToAllAndSaveCopy CalendarItemUpdateOperationType = "SendToAllAndSaveCopy"

	CalendarItemUpdateOperationTypeSendToChangedAndSaveCopy CalendarItemUpdateOperationType = "SendToChangedAndSaveCopy"
)

type AffectedTaskOccurrencesType string

const (
	AffectedTaskOccurrencesTypeAllOccurrences AffectedTaskOccurrencesType = "AllOccurrences"

	AffectedTaskOccurrencesTypeSpecifiedOccurrenceOnly AffectedTaskOccurrencesType = "SpecifiedOccurrenceOnly"
)

type TaskStatusType string

const (
	TaskStatusTypeNotStarted TaskStatusType = "NotStarted"

	TaskStatusTypeInProgress TaskStatusType = "InProgress"

	TaskStatusTypeCompleted TaskStatusType = "Completed"

	TaskStatusTypeWaitingOnOthers TaskStatusType = "WaitingOnOthers"

	TaskStatusTypeDeferred TaskStatusType = "Deferred"
)

type TaskDelegateStateType string

const (
	TaskDelegateStateTypeNoMatch TaskDelegateStateType = "NoMatch"

	TaskDelegateStateTypeOwnNew TaskDelegateStateType = "OwnNew"

	TaskDelegateStateTypeOwned TaskDelegateStateType = "Owned"

	TaskDelegateStateTypeAccepted TaskDelegateStateType = "Accepted"

	TaskDelegateStateTypeDeclined TaskDelegateStateType = "Declined"

	TaskDelegateStateTypeMax TaskDelegateStateType = "Max"
)

type SharingActionImportance string

const (
	SharingActionImportancePrimary SharingActionImportance = "Primary"

	SharingActionImportanceSecondary SharingActionImportance = "Secondary"
)

type SharingAction string

const (
	SharingActionAcceptAndViewCalendar SharingAction = "AcceptAndViewCalendar"

	SharingActionViewCalendar SharingAction = "ViewCalendar"

	SharingActionAddThisCalendar SharingAction = "AddThisCalendar"

	SharingActionAccept SharingAction = "Accept"
)

type SharingActionType string

const (
	SharingActionTypeAccept SharingActionType = "Accept"
)

type IndexBasePointType string

const (
	IndexBasePointTypeBeginning IndexBasePointType = "Beginning"

	IndexBasePointTypeEnd IndexBasePointType = "End"
)

type ResolveNamesSearchScopeType string

const (
	ResolveNamesSearchScopeTypeActiveDirectory ResolveNamesSearchScopeType = "ActiveDirectory"

	ResolveNamesSearchScopeTypeActiveDirectoryContacts ResolveNamesSearchScopeType = "ActiveDirectoryContacts"

	ResolveNamesSearchScopeTypeContacts ResolveNamesSearchScopeType = "Contacts"

	ResolveNamesSearchScopeTypeContactsActiveDirectory ResolveNamesSearchScopeType = "ContactsActiveDirectory"
)

type MeetingRequestTypeType string

const (
	MeetingRequestTypeTypeNone MeetingRequestTypeType = "None"

	MeetingRequestTypeTypeFullUpdate MeetingRequestTypeType = "FullUpdate"

	MeetingRequestTypeTypeInformationalUpdate MeetingRequestTypeType = "InformationalUpdate"

	MeetingRequestTypeTypeNewMeetingRequest MeetingRequestTypeType = "NewMeetingRequest"

	MeetingRequestTypeTypeOutdated MeetingRequestTypeType = "Outdated"

	MeetingRequestTypeTypeSilentUpdate MeetingRequestTypeType = "SilentUpdate"

	MeetingRequestTypeTypePrincipalWantsCopy MeetingRequestTypeType = "PrincipalWantsCopy"
)

type ReminderMinutesBeforeStartType string

type AvailabilityStatusType string

const (
	AvailabilityStatusTypeUnknown AvailabilityStatusType = "Unknown"

	AvailabilityStatusTypeFree AvailabilityStatusType = "Free"

	AvailabilityStatusTypeTentative AvailabilityStatusType = "Tentative"

	AvailabilityStatusTypeBusy AvailabilityStatusType = "Busy"

	AvailabilityStatusTypeOof AvailabilityStatusType = "Oof"

	AvailabilityStatusTypeWorkingElsewhere AvailabilityStatusType = "WorkingElsewhere"
)

type LegacyFreeBusyType string

const (
	LegacyFreeBusyTypeFree LegacyFreeBusyType = "Free"

	LegacyFreeBusyTypeTentative LegacyFreeBusyType = "Tentative"

	LegacyFreeBusyTypeBusy LegacyFreeBusyType = "Busy"

	LegacyFreeBusyTypeOOF LegacyFreeBusyType = "OOF"

	LegacyFreeBusyTypeWorkingElsewhere LegacyFreeBusyType = "WorkingElsewhere"

	LegacyFreeBusyTypeNoData LegacyFreeBusyType = "NoData"
)

type CalendarItemTypeType string

const (
	CalendarItemTypeTypeSingle CalendarItemTypeType = "Single"

	CalendarItemTypeTypeOccurrence CalendarItemTypeType = "Occurrence"

	CalendarItemTypeTypeException CalendarItemTypeType = "Exception"

	CalendarItemTypeTypeRecurringMaster CalendarItemTypeType = "RecurringMaster"
)

type ResponseTypeType string

const (
	ResponseTypeTypeUnknown ResponseTypeType = "Unknown"

	ResponseTypeTypeOrganizer ResponseTypeType = "Organizer"

	ResponseTypeTypeTentative ResponseTypeType = "Tentative"

	ResponseTypeTypeAccept ResponseTypeType = "Accept"

	ResponseTypeTypeDecline ResponseTypeType = "Decline"

	ResponseTypeTypeNoResponseReceived ResponseTypeType = "NoResponseReceived"
)

type LobbyBypassType string

const (
	LobbyBypassTypeDisabled LobbyBypassType = "Disabled"

	LobbyBypassTypeEnabledForGatewayParticipants LobbyBypassType = "EnabledForGatewayParticipants"
)

type OnlineMeetingAccessLevelType string

const (
	OnlineMeetingAccessLevelTypeLocked OnlineMeetingAccessLevelType = "Locked"

	OnlineMeetingAccessLevelTypeInvited OnlineMeetingAccessLevelType = "Invited"

	OnlineMeetingAccessLevelTypeInternal OnlineMeetingAccessLevelType = "Internal"

	OnlineMeetingAccessLevelTypeEveryone OnlineMeetingAccessLevelType = "Everyone"
)

type PresentersType string

const (
	PresentersTypeDisabled PresentersType = "Disabled"

	PresentersTypeInternal PresentersType = "Internal"

	PresentersTypeEveryone PresentersType = "Everyone"
)

type DayOfWeekType string

const (
	DayOfWeekTypeSunday DayOfWeekType = "Sunday"

	DayOfWeekTypeMonday DayOfWeekType = "Monday"

	DayOfWeekTypeTuesday DayOfWeekType = "Tuesday"

	DayOfWeekTypeWednesday DayOfWeekType = "Wednesday"

	DayOfWeekTypeThursday DayOfWeekType = "Thursday"

	DayOfWeekTypeFriday DayOfWeekType = "Friday"

	DayOfWeekTypeSaturday DayOfWeekType = "Saturday"

	DayOfWeekTypeDay DayOfWeekType = "Day"

	DayOfWeekTypeWeekday DayOfWeekType = "Weekday"

	DayOfWeekTypeWeekendDay DayOfWeekType = "WeekendDay"
)

type DaysOfWeekType []DayOfWeekType

type DayOfWeekIndexType string

const (
	DayOfWeekIndexTypeFirst DayOfWeekIndexType = "First"

	DayOfWeekIndexTypeSecond DayOfWeekIndexType = "Second"

	DayOfWeekIndexTypeThird DayOfWeekIndexType = "Third"

	DayOfWeekIndexTypeFourth DayOfWeekIndexType = "Fourth"

	DayOfWeekIndexTypeLast DayOfWeekIndexType = "Last"
)

type MonthNamesType string

const (
	MonthNamesTypeJanuary MonthNamesType = "January"

	MonthNamesTypeFebruary MonthNamesType = "February"

	MonthNamesTypeMarch MonthNamesType = "March"

	MonthNamesTypeApril MonthNamesType = "April"

	MonthNamesTypeMay MonthNamesType = "May"

	MonthNamesTypeJune MonthNamesType = "June"

	MonthNamesTypeJuly MonthNamesType = "July"

	MonthNamesTypeAugust MonthNamesType = "August"

	MonthNamesTypeSeptember MonthNamesType = "September"

	MonthNamesTypeOctober MonthNamesType = "October"

	MonthNamesTypeNovember MonthNamesType = "November"

	MonthNamesTypeDecember MonthNamesType = "December"
)

type LocationSourceType string

const (
	LocationSourceTypeNone LocationSourceType = "None"

	LocationSourceTypeLocationServices LocationSourceType = "LocationServices"

	LocationSourceTypePhonebookServices LocationSourceType = "PhonebookServices"

	LocationSourceTypeDevice LocationSourceType = "Device"

	LocationSourceTypeContact LocationSourceType = "Contact"

	LocationSourceTypeResource LocationSourceType = "Resource"
)

type TransitionTargetKindType string

const (
	TransitionTargetKindTypePeriod TransitionTargetKindType = "Period"

	TransitionTargetKindTypeGroup TransitionTargetKindType = "Group"
)

type RoleMemberTypeType string

const (
	RoleMemberTypeTypeNone RoleMemberTypeType = "None"

	RoleMemberTypeTypePassport RoleMemberTypeType = "Passport"

	RoleMemberTypeTypeEveryone RoleMemberTypeType = "Everyone"

	RoleMemberTypeTypeEmail RoleMemberTypeType = "Email"

	RoleMemberTypeTypePhone RoleMemberTypeType = "Phone"

	RoleMemberTypeTypeSkypeId RoleMemberTypeType = "SkypeId"

	RoleMemberTypeTypeExternalId RoleMemberTypeType = "ExternalId"

	RoleMemberTypeTypeGroup RoleMemberTypeType = "Group"

	RoleMemberTypeTypeGuid RoleMemberTypeType = "Guid"

	RoleMemberTypeTypeRole RoleMemberTypeType = "Role"

	RoleMemberTypeTypeService RoleMemberTypeType = "Service"

	RoleMemberTypeTypeCircle RoleMemberTypeType = "Circle"

	RoleMemberTypeTypeDomain RoleMemberTypeType = "Domain"

	RoleMemberTypeTypePartner RoleMemberTypeType = "Partner"
)

type ImAddressKeyType string

const (
	ImAddressKeyTypeImAddress1 ImAddressKeyType = "ImAddress1"

	ImAddressKeyTypeImAddress2 ImAddressKeyType = "ImAddress2"

	ImAddressKeyTypeImAddress3 ImAddressKeyType = "ImAddress3"
)

type EmailAddressKeyType string

const (
	EmailAddressKeyTypeEmailAddress1 EmailAddressKeyType = "EmailAddress1"

	EmailAddressKeyTypeEmailAddress2 EmailAddressKeyType = "EmailAddress2"

	EmailAddressKeyTypeEmailAddress3 EmailAddressKeyType = "EmailAddress3"
)

type AbchEmailAddressTypeType string

const (
	AbchEmailAddressTypeTypePersonal AbchEmailAddressTypeType = "Personal"

	AbchEmailAddressTypeTypeBusiness AbchEmailAddressTypeType = "Business"

	AbchEmailAddressTypeTypeOther AbchEmailAddressTypeType = "Other"

	AbchEmailAddressTypeTypePassport AbchEmailAddressTypeType = "Passport"
)

type ContactUrlKeyType string

const (
	ContactUrlKeyTypePersonal ContactUrlKeyType = "Personal"

	ContactUrlKeyTypeBusiness ContactUrlKeyType = "Business"

	ContactUrlKeyTypeAttachment ContactUrlKeyType = "Attachment"

	ContactUrlKeyTypeEbcDisplayDefinition ContactUrlKeyType = "EbcDisplayDefinition"

	ContactUrlKeyTypeEbcFinalImage ContactUrlKeyType = "EbcFinalImage"

	ContactUrlKeyTypeEbcLogo ContactUrlKeyType = "EbcLogo"

	ContactUrlKeyTypeFeed ContactUrlKeyType = "Feed"

	ContactUrlKeyTypeImage ContactUrlKeyType = "Image"

	ContactUrlKeyTypeInternalMarker ContactUrlKeyType = "InternalMarker"

	ContactUrlKeyTypeOther ContactUrlKeyType = "Other"
)

type PhoneNumberKeyType string

const (
	PhoneNumberKeyTypeAssistantPhone PhoneNumberKeyType = "AssistantPhone"

	PhoneNumberKeyTypeBusinessFax PhoneNumberKeyType = "BusinessFax"

	PhoneNumberKeyTypeBusinessPhone PhoneNumberKeyType = "BusinessPhone"

	PhoneNumberKeyTypeBusinessPhone2 PhoneNumberKeyType = "BusinessPhone2"

	PhoneNumberKeyTypeCallback PhoneNumberKeyType = "Callback"

	PhoneNumberKeyTypeCarPhone PhoneNumberKeyType = "CarPhone"

	PhoneNumberKeyTypeCompanyMainPhone PhoneNumberKeyType = "CompanyMainPhone"

	PhoneNumberKeyTypeHomeFax PhoneNumberKeyType = "HomeFax"

	PhoneNumberKeyTypeHomePhone PhoneNumberKeyType = "HomePhone"

	PhoneNumberKeyTypeHomePhone2 PhoneNumberKeyType = "HomePhone2"

	PhoneNumberKeyTypeIsdn PhoneNumberKeyType = "Isdn"

	PhoneNumberKeyTypeMobilePhone PhoneNumberKeyType = "MobilePhone"

	PhoneNumberKeyTypeOtherFax PhoneNumberKeyType = "OtherFax"

	PhoneNumberKeyTypeOtherTelephone PhoneNumberKeyType = "OtherTelephone"

	PhoneNumberKeyTypePager PhoneNumberKeyType = "Pager"

	PhoneNumberKeyTypePrimaryPhone PhoneNumberKeyType = "PrimaryPhone"

	PhoneNumberKeyTypeRadioPhone PhoneNumberKeyType = "RadioPhone"

	PhoneNumberKeyTypeTelex PhoneNumberKeyType = "Telex"

	PhoneNumberKeyTypeTtyTddPhone PhoneNumberKeyType = "TtyTddPhone"

	PhoneNumberKeyTypeBusinessMobile PhoneNumberKeyType = "BusinessMobile"

	PhoneNumberKeyTypeIPPhone PhoneNumberKeyType = "IPPhone"

	PhoneNumberKeyTypeMms PhoneNumberKeyType = "Mms"

	PhoneNumberKeyTypeMsn PhoneNumberKeyType = "Msn"
)

type PhysicalAddressIndexType string

const (
	PhysicalAddressIndexTypeNone PhysicalAddressIndexType = "None"

	PhysicalAddressIndexTypeHome PhysicalAddressIndexType = "Home"

	PhysicalAddressIndexTypeBusiness PhysicalAddressIndexType = "Business"

	PhysicalAddressIndexTypeOther PhysicalAddressIndexType = "Other"
)

type PhysicalAddressKeyType string

const (
	PhysicalAddressKeyTypeHome PhysicalAddressKeyType = "Home"

	PhysicalAddressKeyTypeBusiness PhysicalAddressKeyType = "Business"

	PhysicalAddressKeyTypeOther PhysicalAddressKeyType = "Other"
)

type FileAsMappingType string

const (
	FileAsMappingTypeNone FileAsMappingType = "None"

	FileAsMappingTypeLastCommaFirst FileAsMappingType = "LastCommaFirst"

	FileAsMappingTypeFirstSpaceLast FileAsMappingType = "FirstSpaceLast"

	FileAsMappingTypeCompany FileAsMappingType = "Company"

	FileAsMappingTypeLastCommaFirstCompany FileAsMappingType = "LastCommaFirstCompany"

	FileAsMappingTypeCompanyLastFirst FileAsMappingType = "CompanyLastFirst"

	FileAsMappingTypeLastFirst FileAsMappingType = "LastFirst"

	FileAsMappingTypeLastFirstCompany FileAsMappingType = "LastFirstCompany"

	FileAsMappingTypeCompanyLastCommaFirst FileAsMappingType = "CompanyLastCommaFirst"

	FileAsMappingTypeLastFirstSuffix FileAsMappingType = "LastFirstSuffix"

	FileAsMappingTypeLastSpaceFirstCompany FileAsMappingType = "LastSpaceFirstCompany"

	FileAsMappingTypeCompanyLastSpaceFirst FileAsMappingType = "CompanyLastSpaceFirst"

	FileAsMappingTypeLastSpaceFirst FileAsMappingType = "LastSpaceFirst"

	FileAsMappingTypeDisplayName FileAsMappingType = "DisplayName"

	FileAsMappingTypeFirstName FileAsMappingType = "FirstName"

	FileAsMappingTypeLastFirstMiddleSuffix FileAsMappingType = "LastFirstMiddleSuffix"

	FileAsMappingTypeLastName FileAsMappingType = "LastName"

	FileAsMappingTypeEmpty FileAsMappingType = "Empty"
)

type ContactSourceType string

const (
	ContactSourceTypeActiveDirectory ContactSourceType = "ActiveDirectory"

	ContactSourceTypeStore ContactSourceType = "Store"
)

type MemberStatusType string

const (
	MemberStatusTypeUnrecognized MemberStatusType = "Unrecognized"

	MemberStatusTypeNormal MemberStatusType = "Normal"

	MemberStatusTypeDemoted MemberStatusType = "Demoted"
)

// This max/min evaluation is applied to the field specified within the group by instance for EACH item within that group. This determines which item from each group is to
// be selected as the representative for that group.

type AggregateType string

const (
	AggregateTypeMinimum AggregateType = "Minimum"

	AggregateTypeMaximum AggregateType = "Maximum"
)

// Represents standard groupings for GroupBy queries.

type StandardGroupByType string

const (
	StandardGroupByTypeConversationTopic StandardGroupByType = "ConversationTopic"
)

type ExcludesAttributeType string

type ContainmentModeType string

const (
	ContainmentModeTypeFullString ContainmentModeType = "FullString"

	ContainmentModeTypePrefixed ContainmentModeType = "Prefixed"

	ContainmentModeTypeSubstring ContainmentModeType = "Substring"

	ContainmentModeTypePrefixOnWords ContainmentModeType = "PrefixOnWords"

	ContainmentModeTypeExactPhrase ContainmentModeType = "ExactPhrase"
)

type ContainmentComparisonType string

const (
	ContainmentComparisonTypeExact ContainmentComparisonType = "Exact"

	ContainmentComparisonTypeIgnoreCase ContainmentComparisonType = "IgnoreCase"

	ContainmentComparisonTypeIgnoreNonSpacingCharacters ContainmentComparisonType = "IgnoreNonSpacingCharacters"

	ContainmentComparisonTypeLoose ContainmentComparisonType = "Loose"

	ContainmentComparisonTypeIgnoreCaseAndNonSpacingCharacters ContainmentComparisonType = "IgnoreCaseAndNonSpacingCharacters"

	ContainmentComparisonTypeLooseAndIgnoreCase ContainmentComparisonType = "LooseAndIgnoreCase"

	ContainmentComparisonTypeLooseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreNonSpace"

	ContainmentComparisonTypeLooseAndIgnoreCaseAndIgnoreNonSpace ContainmentComparisonType = "LooseAndIgnoreCaseAndIgnoreNonSpace"
)

type SortDirectionType string

const (
	SortDirectionTypeAscending SortDirectionType = "Ascending"

	SortDirectionTypeDescending SortDirectionType = "Descending"
)

type WatermarkType NonEmptyStringType

type SubscriptionIdType NonEmptyStringType

type NotificationEventTypeType string

const (
	NotificationEventTypeTypeCopiedEvent NotificationEventTypeType = "CopiedEvent"

	NotificationEventTypeTypeCreatedEvent NotificationEventTypeType = "CreatedEvent"

	NotificationEventTypeTypeDeletedEvent NotificationEventTypeType = "DeletedEvent"

	NotificationEventTypeTypeModifiedEvent NotificationEventTypeType = "ModifiedEvent"

	NotificationEventTypeTypeMovedEvent NotificationEventTypeType = "MovedEvent"

	NotificationEventTypeTypeNewMailEvent NotificationEventTypeType = "NewMailEvent"

	NotificationEventTypeTypeFreeBusyChangedEvent NotificationEventTypeType = "FreeBusyChangedEvent"
)

type SubscriptionTimeoutType int32

type SubscriptionStatusFrequencyType int32

type SubscriptionStatusType string

const (
	SubscriptionStatusTypeOK SubscriptionStatusType = "OK"

	SubscriptionStatusTypeUnsubscribe SubscriptionStatusType = "Unsubscribe"
)

type StreamingSubscriptionConnectionTimeoutType int32

type ConnectionStatusType string

const (
	ConnectionStatusTypeOK ConnectionStatusType = "OK"

	ConnectionStatusTypeClosed ConnectionStatusType = "Closed"
)

type UnifiedGroupAccessType string

const (
	UnifiedGroupAccessTypeNone UnifiedGroupAccessType = "None"

	UnifiedGroupAccessTypePrivate UnifiedGroupAccessType = "Private"

	UnifiedGroupAccessTypeSecret UnifiedGroupAccessType = "Secret"

	UnifiedGroupAccessTypePublic UnifiedGroupAccessType = "Public"
)

type MaxSyncChangesReturnedType int32

type SyncFolderItemsScopeType string

const (
	SyncFolderItemsScopeTypeNormalItems SyncFolderItemsScopeType = "NormalItems"

	SyncFolderItemsScopeTypeNormalAndAssociatedItems SyncFolderItemsScopeType = "NormalAndAssociatedItems"
)

type AvailabilityProxyRequestType string

const (
	AvailabilityProxyRequestTypeCrossSite AvailabilityProxyRequestType = "CrossSite"

	AvailabilityProxyRequestTypeCrossForest AvailabilityProxyRequestType = "CrossForest"
)

type MeetingAttendeeType string

const (
	MeetingAttendeeTypeOrganizer MeetingAttendeeType = "Organizer"

	MeetingAttendeeTypeRequired MeetingAttendeeType = "Required"

	MeetingAttendeeTypeOptional MeetingAttendeeType = "Optional"

	MeetingAttendeeTypeRoom MeetingAttendeeType = "Room"

	MeetingAttendeeTypeResource MeetingAttendeeType = "Resource"
)

type FreeBusyViewType interface{}

type SuggestionQuality string

const (
	SuggestionQualityExcellent SuggestionQuality = "Excellent"

	SuggestionQualityGood SuggestionQuality = "Good"

	SuggestionQualityFair SuggestionQuality = "Fair"

	SuggestionQualityPoor SuggestionQuality = "Poor"
)

type OofState string

const (
	OofStateDisabled OofState = "Disabled"

	OofStateEnabled OofState = "Enabled"

	OofStateScheduled OofState = "Scheduled"
)

type ExternalAudience string

const (
	ExternalAudienceNone ExternalAudience = "None"

	ExternalAudienceKnown ExternalAudience = "Known"

	ExternalAudienceAll ExternalAudience = "All"
)

type SendPromptType string

const (
	SendPromptTypeNone SendPromptType = "None"

	SendPromptTypeSend SendPromptType = "Send"

	SendPromptTypeVotingOption SendPromptType = "VotingOption"
)

// Surfaces the various id types that are supported for conversion

type IdFormatType string

const (
	IdFormatTypeEwsLegacyId IdFormatType = "EwsLegacyId"

	IdFormatTypeEwsId IdFormatType = "EwsId"

	IdFormatTypeEntryId IdFormatType = "EntryId"

	IdFormatTypeHexEntryId IdFormatType = "HexEntryId"

	IdFormatTypeStoreId IdFormatType = "StoreId"

	IdFormatTypeOwaId IdFormatType = "OwaId"
)

type DistinguishedUserType string

const (
	DistinguishedUserTypeDefault DistinguishedUserType = "Default"

	DistinguishedUserTypeAnonymous DistinguishedUserType = "Anonymous"
)

type PermissionReadAccessType string

const (
	PermissionReadAccessTypeNone PermissionReadAccessType = "None"

	PermissionReadAccessTypeFullDetails PermissionReadAccessType = "FullDetails"
)

type CalendarPermissionReadAccessType string

const (
	CalendarPermissionReadAccessTypeNone CalendarPermissionReadAccessType = "None"

	CalendarPermissionReadAccessTypeTimeOnly CalendarPermissionReadAccessType = "TimeOnly"

	CalendarPermissionReadAccessTypeTimeAndSubjectAndLocation CalendarPermissionReadAccessType = "TimeAndSubjectAndLocation"

	CalendarPermissionReadAccessTypeFullDetails CalendarPermissionReadAccessType = "FullDetails"
)

type PermissionActionType string

const (
	PermissionActionTypeNone PermissionActionType = "None"

	PermissionActionTypeOwned PermissionActionType = "Owned"

	PermissionActionTypeAll PermissionActionType = "All"
)

type PermissionLevelType string

const (
	PermissionLevelTypeNone PermissionLevelType = "None"

	PermissionLevelTypeOwner PermissionLevelType = "Owner"

	PermissionLevelTypePublishingEditor PermissionLevelType = "PublishingEditor"

	PermissionLevelTypeEditor PermissionLevelType = "Editor"

	PermissionLevelTypePublishingAuthor PermissionLevelType = "PublishingAuthor"

	PermissionLevelTypeAuthor PermissionLevelType = "Author"

	PermissionLevelTypeNoneditingAuthor PermissionLevelType = "NoneditingAuthor"

	PermissionLevelTypeReviewer PermissionLevelType = "Reviewer"

	PermissionLevelTypeContributor PermissionLevelType = "Contributor"

	PermissionLevelTypeCustom PermissionLevelType = "Custom"
)

type CalendarPermissionLevelType string

const (
	CalendarPermissionLevelTypeNone CalendarPermissionLevelType = "None"

	CalendarPermissionLevelTypeOwner CalendarPermissionLevelType = "Owner"

	CalendarPermissionLevelTypePublishingEditor CalendarPermissionLevelType = "PublishingEditor"

	CalendarPermissionLevelTypeEditor CalendarPermissionLevelType = "Editor"

	CalendarPermissionLevelTypePublishingAuthor CalendarPermissionLevelType = "PublishingAuthor"

	CalendarPermissionLevelTypeAuthor CalendarPermissionLevelType = "Author"

	CalendarPermissionLevelTypeNoneditingAuthor CalendarPermissionLevelType = "NoneditingAuthor"

	CalendarPermissionLevelTypeReviewer CalendarPermissionLevelType = "Reviewer"

	CalendarPermissionLevelTypeContributor CalendarPermissionLevelType = "Contributor"

	CalendarPermissionLevelTypeFreeBusyTimeOnly CalendarPermissionLevelType = "FreeBusyTimeOnly"

	CalendarPermissionLevelTypeFreeBusyTimeAndSubjectAndLocation CalendarPermissionLevelType = "FreeBusyTimeAndSubjectAndLocation"

	CalendarPermissionLevelTypeCustom CalendarPermissionLevelType = "Custom"
)

type DeliverMeetingRequestsType string

const (
	DeliverMeetingRequestsTypeDelegatesOnly DeliverMeetingRequestsType = "DelegatesOnly"

	DeliverMeetingRequestsTypeDelegatesAndMe DeliverMeetingRequestsType = "DelegatesAndMe"

	DeliverMeetingRequestsTypeDelegatesAndSendInformationToMe DeliverMeetingRequestsType = "DelegatesAndSendInformationToMe"

	DeliverMeetingRequestsTypeNoForward DeliverMeetingRequestsType = "NoForward"
)

type DelegateFolderPermissionLevelType string

const (
	DelegateFolderPermissionLevelTypeNone DelegateFolderPermissionLevelType = "None"

	DelegateFolderPermissionLevelTypeEditor DelegateFolderPermissionLevelType = "Editor"

	DelegateFolderPermissionLevelTypeReviewer DelegateFolderPermissionLevelType = "Reviewer"

	DelegateFolderPermissionLevelTypeAuthor DelegateFolderPermissionLevelType = "Author"

	DelegateFolderPermissionLevelTypeCustom DelegateFolderPermissionLevelType = "Custom"
)

type MailTipTypes interface{}

type ServiceConfigurationType interface{}

// Represents the message keys that can be returned for invalid recipients

type InvalidRecipientResponseCodeType string

const (
	InvalidRecipientResponseCodeTypeOtherError InvalidRecipientResponseCodeType = "OtherError"

	InvalidRecipientResponseCodeTypeRecipientOrganizationNotFederated InvalidRecipientResponseCodeType = "RecipientOrganizationNotFederated"

	InvalidRecipientResponseCodeTypeCannotObtainTokenFromSTS InvalidRecipientResponseCodeType = "CannotObtainTokenFromSTS"

	InvalidRecipientResponseCodeTypeSystemPolicyBlocksSharingWithThisRecipient InvalidRecipientResponseCodeType = "SystemPolicyBlocksSharingWithThisRecipient"

	InvalidRecipientResponseCodeTypeRecipientOrganizationFederatedWithUnknownTokenIssuer InvalidRecipientResponseCodeType = "RecipientOrganizationFederatedWithUnknownTokenIssuer"
)

type SharingDataType string

const (
	SharingDataTypeCalendar SharingDataType = "Calendar"

	SharingDataTypeContacts SharingDataType = "Contacts"
)

type PhoneCallStateType string

const (
	PhoneCallStateTypeIdle PhoneCallStateType = "Idle"

	PhoneCallStateTypeConnecting PhoneCallStateType = "Connecting"

	PhoneCallStateTypeAlerted PhoneCallStateType = "Alerted"

	PhoneCallStateTypeConnected PhoneCallStateType = "Connected"

	PhoneCallStateTypeDisconnected PhoneCallStateType = "Disconnected"

	PhoneCallStateTypeIncoming PhoneCallStateType = "Incoming"

	PhoneCallStateTypeTransferring PhoneCallStateType = "Transferring"

	PhoneCallStateTypeForwarding PhoneCallStateType = "Forwarding"
)

type ConnectionFailureCauseType string

const (
	ConnectionFailureCauseTypeNone ConnectionFailureCauseType = "None"

	ConnectionFailureCauseTypeUserBusy ConnectionFailureCauseType = "UserBusy"

	ConnectionFailureCauseTypeNoAnswer ConnectionFailureCauseType = "NoAnswer"

	ConnectionFailureCauseTypeUnavailable ConnectionFailureCauseType = "Unavailable"

	ConnectionFailureCauseTypeOther ConnectionFailureCauseType = "Other"
)

type UserConfigurationDictionaryObjectTypesType string

const (
	UserConfigurationDictionaryObjectTypesTypeDateTime UserConfigurationDictionaryObjectTypesType = "DateTime"

	UserConfigurationDictionaryObjectTypesTypeBoolean UserConfigurationDictionaryObjectTypesType = "Boolean"

	UserConfigurationDictionaryObjectTypesTypeByte UserConfigurationDictionaryObjectTypesType = "Byte"

	UserConfigurationDictionaryObjectTypesTypeString UserConfigurationDictionaryObjectTypesType = "String"

	UserConfigurationDictionaryObjectTypesTypeInteger32 UserConfigurationDictionaryObjectTypesType = "Integer32"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger32 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger32"

	UserConfigurationDictionaryObjectTypesTypeInteger64 UserConfigurationDictionaryObjectTypesType = "Integer64"

	UserConfigurationDictionaryObjectTypesTypeUnsignedInteger64 UserConfigurationDictionaryObjectTypesType = "UnsignedInteger64"

	UserConfigurationDictionaryObjectTypesTypeStringArray UserConfigurationDictionaryObjectTypesType = "StringArray"

	UserConfigurationDictionaryObjectTypesTypeByteArray UserConfigurationDictionaryObjectTypesType = "ByteArray"
)

type UserConfigurationPropertyType interface{}

type ProtectionRuleTrueType string

type ProtectionRuleAllInternalType string

type ProtectionRuleValueType string

type ProtectionRuleActionKindType string

const (
	ProtectionRuleActionKindTypeRightsProtectMessage ProtectionRuleActionKindType = "RightsProtectMessage"
)

type TeamMailboxLifecycleStateType string

const (
	TeamMailboxLifecycleStateTypeActive TeamMailboxLifecycleStateType = "Active"

	TeamMailboxLifecycleStateTypeClosed TeamMailboxLifecycleStateType = "Closed"

	TeamMailboxLifecycleStateTypeUnlinked TeamMailboxLifecycleStateType = "Unlinked"

	TeamMailboxLifecycleStateTypePendingDelete TeamMailboxLifecycleStateType = "PendingDelete"
)

// Surfaces the various report message action types

type ReportMessageActionType string

const (
	ReportMessageActionTypeJunk ReportMessageActionType = "Junk"

	ReportMessageActionTypeNotJunk ReportMessageActionType = "NotJunk"

	ReportMessageActionTypePhish ReportMessageActionType = "Phish"

	ReportMessageActionTypeUnsubscribe ReportMessageActionType = "Unsubscribe"
)

type MessageTrackingReportTemplateType string

const (
	MessageTrackingReportTemplateTypeSummary MessageTrackingReportTemplateType = "Summary"

	MessageTrackingReportTemplateTypeRecipientPath MessageTrackingReportTemplateType = "RecipientPath"
)

// Flagged for action enumeration, currently used in FlaggedForAction rule predicate

type FlaggedForActionType string

const (
	FlaggedForActionTypeAny FlaggedForActionType = "Any"

	FlaggedForActionTypeCall FlaggedForActionType = "Call"

	FlaggedForActionTypeDoNotForward FlaggedForActionType = "DoNotForward"

	FlaggedForActionTypeFollowUp FlaggedForActionType = "FollowUp"

	FlaggedForActionTypeFYI FlaggedForActionType = "FYI"

	FlaggedForActionTypeForward FlaggedForActionType = "Forward"

	FlaggedForActionTypeNoResponseNecessary FlaggedForActionType = "NoResponseNecessary"

	FlaggedForActionTypeRead FlaggedForActionType = "Read"

	FlaggedForActionTypeReply FlaggedForActionType = "Reply"

	FlaggedForActionTypeReplyToAll FlaggedForActionType = "ReplyToAll"

	FlaggedForActionTypeReview FlaggedForActionType = "Review"
)

// Rule field URI enumerates all possible rule fields that could trigger validation error

type RuleFieldURIType string

const (
	RuleFieldURITypeRuleId RuleFieldURIType = "RuleId"

	RuleFieldURITypeDisplayName RuleFieldURIType = "DisplayName"

	RuleFieldURITypePriority RuleFieldURIType = "Priority"

	RuleFieldURITypeIsNotSupported RuleFieldURIType = "IsNotSupported"

	RuleFieldURITypeActions RuleFieldURIType = "Actions"

	RuleFieldURITypeConditionCategories RuleFieldURIType = "Condition:Categories"

	RuleFieldURITypeConditionContainsBodyStrings RuleFieldURIType = "Condition:ContainsBodyStrings"

	RuleFieldURITypeConditionContainsHeaderStrings RuleFieldURIType = "Condition:ContainsHeaderStrings"

	RuleFieldURITypeConditionContainsRecipientStrings RuleFieldURIType = "Condition:ContainsRecipientStrings"

	RuleFieldURITypeConditionContainsSenderStrings RuleFieldURIType = "Condition:ContainsSenderStrings"

	RuleFieldURITypeConditionContainsSubjectOrBodyStrings RuleFieldURIType = "Condition:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeConditionContainsSubjectStrings RuleFieldURIType = "Condition:ContainsSubjectStrings"

	RuleFieldURITypeConditionFlaggedForAction RuleFieldURIType = "Condition:FlaggedForAction"

	RuleFieldURITypeConditionFromAddresses RuleFieldURIType = "Condition:FromAddresses"

	RuleFieldURITypeConditionFromConnectedAccounts RuleFieldURIType = "Condition:FromConnectedAccounts"

	RuleFieldURITypeConditionHasAttachments RuleFieldURIType = "Condition:HasAttachments"

	RuleFieldURITypeConditionImportance RuleFieldURIType = "Condition:Importance"

	RuleFieldURITypeConditionIsApprovalRequest RuleFieldURIType = "Condition:IsApprovalRequest"

	RuleFieldURITypeConditionIsAutomaticForward RuleFieldURIType = "Condition:IsAutomaticForward"

	RuleFieldURITypeConditionIsAutomaticReply RuleFieldURIType = "Condition:IsAutomaticReply"

	RuleFieldURITypeConditionIsEncrypted RuleFieldURIType = "Condition:IsEncrypted"

	RuleFieldURITypeConditionIsMeetingRequest RuleFieldURIType = "Condition:IsMeetingRequest"

	RuleFieldURITypeConditionIsMeetingResponse RuleFieldURIType = "Condition:IsMeetingResponse"

	RuleFieldURITypeConditionIsNDR RuleFieldURIType = "Condition:IsNDR"

	RuleFieldURITypeConditionIsPermissionControlled RuleFieldURIType = "Condition:IsPermissionControlled"

	RuleFieldURITypeConditionIsReadReceipt RuleFieldURIType = "Condition:IsReadReceipt"

	RuleFieldURITypeConditionIsSigned RuleFieldURIType = "Condition:IsSigned"

	RuleFieldURITypeConditionIsVoicemail RuleFieldURIType = "Condition:IsVoicemail"

	RuleFieldURITypeConditionItemClasses RuleFieldURIType = "Condition:ItemClasses"

	RuleFieldURITypeConditionMessageClassifications RuleFieldURIType = "Condition:MessageClassifications"

	RuleFieldURITypeConditionNotSentToMe RuleFieldURIType = "Condition:NotSentToMe"

	RuleFieldURITypeConditionSentCcMe RuleFieldURIType = "Condition:SentCcMe"

	RuleFieldURITypeConditionSentOnlyToMe RuleFieldURIType = "Condition:SentOnlyToMe"

	RuleFieldURITypeConditionSentToAddresses RuleFieldURIType = "Condition:SentToAddresses"

	RuleFieldURITypeConditionSentToMe RuleFieldURIType = "Condition:SentToMe"

	RuleFieldURITypeConditionSentToOrCcMe RuleFieldURIType = "Condition:SentToOrCcMe"

	RuleFieldURITypeConditionSensitivity RuleFieldURIType = "Condition:Sensitivity"

	RuleFieldURITypeConditionWithinDateRange RuleFieldURIType = "Condition:WithinDateRange"

	RuleFieldURITypeConditionWithinSizeRange RuleFieldURIType = "Condition:WithinSizeRange"

	RuleFieldURITypeExceptionCategories RuleFieldURIType = "Exception:Categories"

	RuleFieldURITypeExceptionContainsBodyStrings RuleFieldURIType = "Exception:ContainsBodyStrings"

	RuleFieldURITypeExceptionContainsHeaderStrings RuleFieldURIType = "Exception:ContainsHeaderStrings"

	RuleFieldURITypeExceptionContainsRecipientStrings RuleFieldURIType = "Exception:ContainsRecipientStrings"

	RuleFieldURITypeExceptionContainsSenderStrings RuleFieldURIType = "Exception:ContainsSenderStrings"

	RuleFieldURITypeExceptionContainsSubjectOrBodyStrings RuleFieldURIType = "Exception:ContainsSubjectOrBodyStrings"

	RuleFieldURITypeExceptionContainsSubjectStrings RuleFieldURIType = "Exception:ContainsSubjectStrings"

	RuleFieldURITypeExceptionFlaggedForAction RuleFieldURIType = "Exception:FlaggedForAction"

	RuleFieldURITypeExceptionFromAddresses RuleFieldURIType = "Exception:FromAddresses"

	RuleFieldURITypeExceptionFromConnectedAccounts RuleFieldURIType = "Exception:FromConnectedAccounts"

	RuleFieldURITypeExceptionHasAttachments RuleFieldURIType = "Exception:HasAttachments"

	RuleFieldURITypeExceptionImportance RuleFieldURIType = "Exception:Importance"

	RuleFieldURITypeExceptionIsApprovalRequest RuleFieldURIType = "Exception:IsApprovalRequest"

	RuleFieldURITypeExceptionIsAutomaticForward RuleFieldURIType = "Exception:IsAutomaticForward"

	RuleFieldURITypeExceptionIsAutomaticReply RuleFieldURIType = "Exception:IsAutomaticReply"

	RuleFieldURITypeExceptionIsEncrypted RuleFieldURIType = "Exception:IsEncrypted"

	RuleFieldURITypeExceptionIsMeetingRequest RuleFieldURIType = "Exception:IsMeetingRequest"

	RuleFieldURITypeExceptionIsMeetingResponse RuleFieldURIType = "Exception:IsMeetingResponse"

	RuleFieldURITypeExceptionIsNDR RuleFieldURIType = "Exception:IsNDR"

	RuleFieldURITypeExceptionIsPermissionControlled RuleFieldURIType = "Exception:IsPermissionControlled"

	RuleFieldURITypeExceptionIsReadReceipt RuleFieldURIType = "Exception:IsReadReceipt"

	RuleFieldURITypeExceptionIsSigned RuleFieldURIType = "Exception:IsSigned"

	RuleFieldURITypeExceptionIsVoicemail RuleFieldURIType = "Exception:IsVoicemail"

	RuleFieldURITypeExceptionItemClasses RuleFieldURIType = "Exception:ItemClasses"

	RuleFieldURITypeExceptionMessageClassifications RuleFieldURIType = "Exception:MessageClassifications"

	RuleFieldURITypeExceptionNotSentToMe RuleFieldURIType = "Exception:NotSentToMe"

	RuleFieldURITypeExceptionSentCcMe RuleFieldURIType = "Exception:SentCcMe"

	RuleFieldURITypeExceptionSentOnlyToMe RuleFieldURIType = "Exception:SentOnlyToMe"

	RuleFieldURITypeExceptionSentToAddresses RuleFieldURIType = "Exception:SentToAddresses"

	RuleFieldURITypeExceptionSentToMe RuleFieldURIType = "Exception:SentToMe"

	RuleFieldURITypeExceptionSentToOrCcMe RuleFieldURIType = "Exception:SentToOrCcMe"

	RuleFieldURITypeExceptionSensitivity RuleFieldURIType = "Exception:Sensitivity"

	RuleFieldURITypeExceptionWithinDateRange RuleFieldURIType = "Exception:WithinDateRange"

	RuleFieldURITypeExceptionWithinSizeRange RuleFieldURIType = "Exception:WithinSizeRange"

	RuleFieldURITypeActionAssignCategories RuleFieldURIType = "Action:AssignCategories"

	RuleFieldURITypeActionCopyToFolder RuleFieldURIType = "Action:CopyToFolder"

	RuleFieldURITypeActionDelete RuleFieldURIType = "Action:Delete"

	RuleFieldURITypeActionForwardAsAttachmentToRecipients RuleFieldURIType = "Action:ForwardAsAttachmentToRecipients"

	RuleFieldURITypeActionForwardToRecipients RuleFieldURIType = "Action:ForwardToRecipients"

	RuleFieldURITypeActionMarkImportance RuleFieldURIType = "Action:MarkImportance"

	RuleFieldURITypeActionMarkAsRead RuleFieldURIType = "Action:MarkAsRead"

	RuleFieldURITypeActionMoveToFolder RuleFieldURIType = "Action:MoveToFolder"

	RuleFieldURITypeActionPermanentDelete RuleFieldURIType = "Action:PermanentDelete"

	RuleFieldURITypeActionRedirectToRecipients RuleFieldURIType = "Action:RedirectToRecipients"

	RuleFieldURITypeActionSendSMSAlertToRecipients RuleFieldURIType = "Action:SendSMSAlertToRecipients"

	RuleFieldURITypeActionServerReplyWithMessage RuleFieldURIType = "Action:ServerReplyWithMessage"

	RuleFieldURITypeActionStopProcessingRules RuleFieldURIType = "Action:StopProcessingRules"

	RuleFieldURITypeIsEnabled RuleFieldURIType = "IsEnabled"

	RuleFieldURITypeIsInError RuleFieldURIType = "IsInError"

	RuleFieldURITypeConditions RuleFieldURIType = "Conditions"

	RuleFieldURITypeExceptions RuleFieldURIType = "Exceptions"
)

// Rule validation error code describing what failed validation for each rule predicate or action.

type RuleValidationErrorCodeType string

const (
	RuleValidationErrorCodeTypeADOperationFailure RuleValidationErrorCodeType = "ADOperationFailure"

	RuleValidationErrorCodeTypeConnectedAccountNotFound RuleValidationErrorCodeType = "ConnectedAccountNotFound"

	RuleValidationErrorCodeTypeCreateWithRuleId RuleValidationErrorCodeType = "CreateWithRuleId"

	RuleValidationErrorCodeTypeEmptyValueFound RuleValidationErrorCodeType = "EmptyValueFound"

	RuleValidationErrorCodeTypeDuplicatedPriority RuleValidationErrorCodeType = "DuplicatedPriority"

	RuleValidationErrorCodeTypeDuplicatedOperationOnTheSameRule RuleValidationErrorCodeType = "DuplicatedOperationOnTheSameRule"

	RuleValidationErrorCodeTypeFolderDoesNotExist RuleValidationErrorCodeType = "FolderDoesNotExist"

	RuleValidationErrorCodeTypeInvalidAddress RuleValidationErrorCodeType = "InvalidAddress"

	RuleValidationErrorCodeTypeInvalidDateRange RuleValidationErrorCodeType = "InvalidDateRange"

	RuleValidationErrorCodeTypeInvalidFolderId RuleValidationErrorCodeType = "InvalidFolderId"

	RuleValidationErrorCodeTypeInvalidSizeRange RuleValidationErrorCodeType = "InvalidSizeRange"

	RuleValidationErrorCodeTypeInvalidValue RuleValidationErrorCodeType = "InvalidValue"

	RuleValidationErrorCodeTypeMessageClassificationNotFound RuleValidationErrorCodeType = "MessageClassificationNotFound"

	RuleValidationErrorCodeTypeMissingAction RuleValidationErrorCodeType = "MissingAction"

	RuleValidationErrorCodeTypeMissingParameter RuleValidationErrorCodeType = "MissingParameter"

	RuleValidationErrorCodeTypeMissingRangeValue RuleValidationErrorCodeType = "MissingRangeValue"

	RuleValidationErrorCodeTypeNotSettable RuleValidationErrorCodeType = "NotSettable"

	RuleValidationErrorCodeTypeRecipientDoesNotExist RuleValidationErrorCodeType = "RecipientDoesNotExist"

	RuleValidationErrorCodeTypeRuleNotFound RuleValidationErrorCodeType = "RuleNotFound"

	RuleValidationErrorCodeTypeSizeLessThanZero RuleValidationErrorCodeType = "SizeLessThanZero"

	RuleValidationErrorCodeTypeStringValueTooBig RuleValidationErrorCodeType = "StringValueTooBig"

	RuleValidationErrorCodeTypeUnsupportedAddress RuleValidationErrorCodeType = "UnsupportedAddress"

	RuleValidationErrorCodeTypeUnexpectedError RuleValidationErrorCodeType = "UnexpectedError"

	RuleValidationErrorCodeTypeUnsupportedRule RuleValidationErrorCodeType = "UnsupportedRule"
)

type SearchItemKindType string

const (
	SearchItemKindTypeEmail SearchItemKindType = "Email"

	SearchItemKindTypeMeetings SearchItemKindType = "Meetings"

	SearchItemKindTypeTasks SearchItemKindType = "Tasks"

	SearchItemKindTypeNotes SearchItemKindType = "Notes"

	SearchItemKindTypeDocs SearchItemKindType = "Docs"

	SearchItemKindTypeJournals SearchItemKindType = "Journals"

	SearchItemKindTypeContacts SearchItemKindType = "Contacts"

	SearchItemKindTypeIm SearchItemKindType = "Im"

	SearchItemKindTypeVoicemail SearchItemKindType = "Voicemail"

	SearchItemKindTypeFaxes SearchItemKindType = "Faxes"

	SearchItemKindTypePosts SearchItemKindType = "Posts"

	SearchItemKindTypeRssfeeds SearchItemKindType = "Rssfeeds"
)

type MailboxSearchLocationType string

const (
	MailboxSearchLocationTypePrimaryOnly MailboxSearchLocationType = "PrimaryOnly"

	MailboxSearchLocationTypeArchiveOnly MailboxSearchLocationType = "ArchiveOnly"

	MailboxSearchLocationTypeAll MailboxSearchLocationType = "All"
)

type SearchResultType string

const (
	SearchResultTypeStatisticsOnly SearchResultType = "StatisticsOnly"

	SearchResultTypePreviewOnly SearchResultType = "PreviewOnly"
)

type SearchPageDirectionType string

const (
	SearchPageDirectionTypePrevious SearchPageDirectionType = "Previous"

	SearchPageDirectionTypeNext SearchPageDirectionType = "Next"
)

type PreviewItemBaseShapeType string

const (
	PreviewItemBaseShapeTypeDefault PreviewItemBaseShapeType = "Default"

	PreviewItemBaseShapeTypeCompact PreviewItemBaseShapeType = "Compact"
)

type HoldActionType string

const (
	HoldActionTypeCreate HoldActionType = "Create"

	HoldActionTypeUpdate HoldActionType = "Update"

	HoldActionTypeRemove HoldActionType = "Remove"
)

type HoldStatusType string

const (
	HoldStatusTypeNotOnHold HoldStatusType = "NotOnHold"

	HoldStatusTypePending HoldStatusType = "Pending"

	HoldStatusTypeOnHold HoldStatusType = "OnHold"

	HoldStatusTypePartialHold HoldStatusType = "PartialHold"

	HoldStatusTypeFailed HoldStatusType = "Failed"
)

type ItemIndexErrorType string

const (
	ItemIndexErrorTypeNone ItemIndexErrorType = "None"

	ItemIndexErrorTypeGenericError ItemIndexErrorType = "GenericError"

	ItemIndexErrorTypeTimeout ItemIndexErrorType = "Timeout"

	ItemIndexErrorTypeStaleEvent ItemIndexErrorType = "StaleEvent"

	ItemIndexErrorTypeMailboxOffline ItemIndexErrorType = "MailboxOffline"

	ItemIndexErrorTypeAttachmentLimitReached ItemIndexErrorType = "AttachmentLimitReached"

	ItemIndexErrorTypeMarsWriterTruncation ItemIndexErrorType = "MarsWriterTruncation"

	ItemIndexErrorTypeDocumentParserFailure ItemIndexErrorType = "DocumentParserFailure"
)

type UserPhotoSizeType string

const (
	UserPhotoSizeTypeHR48x48 UserPhotoSizeType = "HR48x48"

	UserPhotoSizeTypeHR64x64 UserPhotoSizeType = "HR64x64"

	UserPhotoSizeTypeHR96x96 UserPhotoSizeType = "HR96x96"

	UserPhotoSizeTypeHR120x120 UserPhotoSizeType = "HR120x120"

	UserPhotoSizeTypeHR240x240 UserPhotoSizeType = "HR240x240"

	UserPhotoSizeTypeHR360x360 UserPhotoSizeType = "HR360x360"

	UserPhotoSizeTypeHR432x432 UserPhotoSizeType = "HR432x432"

	UserPhotoSizeTypeHR504x504 UserPhotoSizeType = "HR504x504"

	UserPhotoSizeTypeHR648x648 UserPhotoSizeType = "HR648x648"

	UserPhotoSizeTypeHR1024xN UserPhotoSizeType = "HR1024xN"

	UserPhotoSizeTypeHR1920xN UserPhotoSizeType = "HR1920xN"
)

type UserPhotoTypeType string

const (
	UserPhotoTypeTypeUserPhoto UserPhotoTypeType = "UserPhoto"

	UserPhotoTypeTypeProfileHeaderPhoto UserPhotoTypeType = "ProfileHeaderPhoto"
)

type ElcFolderType string

const (
	ElcFolderTypeCalendar ElcFolderType = "Calendar"

	ElcFolderTypeContacts ElcFolderType = "Contacts"

	ElcFolderTypeDeletedItems ElcFolderType = "DeletedItems"

	ElcFolderTypeDrafts ElcFolderType = "Drafts"

	ElcFolderTypeInbox ElcFolderType = "Inbox"

	ElcFolderTypeJunkEmail ElcFolderType = "JunkEmail"

	ElcFolderTypeJournal ElcFolderType = "Journal"

	ElcFolderTypeNotes ElcFolderType = "Notes"

	ElcFolderTypeOutbox ElcFolderType = "Outbox"

	ElcFolderTypeSentItems ElcFolderType = "SentItems"

	ElcFolderTypeTasks ElcFolderType = "Tasks"

	ElcFolderTypeAll ElcFolderType = "All"

	ElcFolderTypeManagedCustomFolder ElcFolderType = "ManagedCustomFolder"

	ElcFolderTypeRssSubscriptions ElcFolderType = "RssSubscriptions"

	ElcFolderTypeSyncIssues ElcFolderType = "SyncIssues"

	ElcFolderTypeConversationHistory ElcFolderType = "ConversationHistory"

	ElcFolderTypePersonal ElcFolderType = "Personal"

	ElcFolderTypeRecoverableItems ElcFolderType = "RecoverableItems"

	ElcFolderTypeNonIpmRoot ElcFolderType = "NonIpmRoot"
)

type RetentionActionType string

const (
	RetentionActionTypeNone RetentionActionType = "None"

	RetentionActionTypeMoveToDeletedItems RetentionActionType = "MoveToDeletedItems"

	RetentionActionTypeMoveToFolder RetentionActionType = "MoveToFolder"

	RetentionActionTypeDeleteAndAllowRecovery RetentionActionType = "DeleteAndAllowRecovery"

	RetentionActionTypePermanentlyDelete RetentionActionType = "PermanentlyDelete"

	RetentionActionTypeMarkAsPastRetentionLimit RetentionActionType = "MarkAsPastRetentionLimit"

	RetentionActionTypeMoveToArchive RetentionActionType = "MoveToArchive"
)

type RetentionType string

const (
	RetentionTypeDelete RetentionType = "Delete"

	RetentionTypeArchive RetentionType = "Archive"
)

type ClientExtensionProvidedToType string

const (
	ClientExtensionProvidedToTypeEveryone ClientExtensionProvidedToType = "Everyone"

	ClientExtensionProvidedToTypeSpecificUsers ClientExtensionProvidedToType = "SpecificUsers"
)

type ClientExtensionTypeType string

const (
	ClientExtensionTypeTypeDefault ClientExtensionTypeType = "Default"

	ClientExtensionTypeTypePrivate ClientExtensionTypeType = "Private"

	ClientExtensionTypeTypeMarketPlace ClientExtensionTypeType = "MarketPlace"

	ClientExtensionTypeTypePrivateCatalog ClientExtensionTypeType = "PrivateCatalog"

	ClientExtensionTypeTypeMarketplacePrivateCatalog ClientExtensionTypeType = "MarketplacePrivateCatalog"
)

type ClientExtensionScopeType string

const (
	ClientExtensionScopeTypeNone ClientExtensionScopeType = "None"

	ClientExtensionScopeTypeUser ClientExtensionScopeType = "User"

	ClientExtensionScopeTypeOrganization ClientExtensionScopeType = "Organization"

	ClientExtensionScopeTypeDefault ClientExtensionScopeType = "Default"
)

type ConsentStateType string

const (
	ConsentStateTypeNotResponded ConsentStateType = "NotResponded"

	ConsentStateTypeNotConsented ConsentStateType = "NotConsented"

	ConsentStateTypeConsented ConsentStateType = "Consented"
)

// List of possible reasons for disabling the client extension

type DisableReasonType string

const (
	DisableReasonTypeNoReason DisableReasonType = "NoReason"

	DisableReasonTypeOutlookClientPerformance DisableReasonType = "OutlookClientPerformance"

	DisableReasonTypeOWAClientPerformance DisableReasonType = "OWAClientPerformance"

	DisableReasonTypeMobileClientPerformance DisableReasonType = "MobileClientPerformance"
)

type IconIndexType string

const (
	IconIndexTypeDefault IconIndexType = "Default"

	IconIndexTypePostItem IconIndexType = "PostItem"

	IconIndexTypeMailRead IconIndexType = "MailRead"

	IconIndexTypeMailUnread IconIndexType = "MailUnread"

	IconIndexTypeMailReplied IconIndexType = "MailReplied"

	IconIndexTypeMailForwarded IconIndexType = "MailForwarded"

	IconIndexTypeMailEncrypted IconIndexType = "MailEncrypted"

	IconIndexTypeMailSmimeSigned IconIndexType = "MailSmimeSigned"

	IconIndexTypeMailEncryptedReplied IconIndexType = "MailEncryptedReplied"

	IconIndexTypeMailSmimeSignedReplied IconIndexType = "MailSmimeSignedReplied"

	IconIndexTypeMailEncryptedForwarded IconIndexType = "MailEncryptedForwarded"

	IconIndexTypeMailSmimeSignedForwarded IconIndexType = "MailSmimeSignedForwarded"

	IconIndexTypeMailEncryptedRead IconIndexType = "MailEncryptedRead"

	IconIndexTypeMailSmimeSignedRead IconIndexType = "MailSmimeSignedRead"

	IconIndexTypeMailIrm IconIndexType = "MailIrm"

	IconIndexTypeMailIrmForwarded IconIndexType = "MailIrmForwarded"

	IconIndexTypeMailIrmReplied IconIndexType = "MailIrmReplied"

	IconIndexTypeSmsSubmitted IconIndexType = "SmsSubmitted"

	IconIndexTypeSmsRoutedToDeliveryPoint IconIndexType = "SmsRoutedToDeliveryPoint"

	IconIndexTypeSmsRoutedToExternalMessagingSystem IconIndexType = "SmsRoutedToExternalMessagingSystem"

	IconIndexTypeSmsDelivered IconIndexType = "SmsDelivered"

	IconIndexTypeOutlookDefaultForContacts IconIndexType = "OutlookDefaultForContacts"

	IconIndexTypeAppointmentItem IconIndexType = "AppointmentItem"

	IconIndexTypeAppointmentRecur IconIndexType = "AppointmentRecur"

	IconIndexTypeAppointmentMeet IconIndexType = "AppointmentMeet"

	IconIndexTypeAppointmentMeetRecur IconIndexType = "AppointmentMeetRecur"

	IconIndexTypeAppointmentMeetNY IconIndexType = "AppointmentMeetNY"

	IconIndexTypeAppointmentMeetYes IconIndexType = "AppointmentMeetYes"

	IconIndexTypeAppointmentMeetNo IconIndexType = "AppointmentMeetNo"

	IconIndexTypeAppointmentMeetMaybe IconIndexType = "AppointmentMeetMaybe"

	IconIndexTypeAppointmentMeetCancel IconIndexType = "AppointmentMeetCancel"

	IconIndexTypeAppointmentMeetInfo IconIndexType = "AppointmentMeetInfo"

	IconIndexTypeTaskItem IconIndexType = "TaskItem"

	IconIndexTypeTaskRecur IconIndexType = "TaskRecur"

	IconIndexTypeTaskOwned IconIndexType = "TaskOwned"

	IconIndexTypeTaskDelegated IconIndexType = "TaskDelegated"
)

type MeetingSpaceTypeEnum string

const (
	MeetingSpaceTypeEnumPublic MeetingSpaceTypeEnum = "Public"

	MeetingSpaceTypeEnumPrivate MeetingSpaceTypeEnum = "Private"
)

type ParticipantActivityRole string

const (
	ParticipantActivityRoleOrganizer ParticipantActivityRole = "Organizer"

	ParticipantActivityRoleAttendee ParticipantActivityRole = "Attendee"

	ParticipantActivityRolePresenter ParticipantActivityRole = "Presenter"
)

type ParticipantActivityMediaType string

const (
	ParticipantActivityMediaTypeAppSharing ParticipantActivityMediaType = "AppSharing"

	ParticipantActivityMediaTypeAudioVideo ParticipantActivityMediaType = "AudioVideo"

	ParticipantActivityMediaTypeChat ParticipantActivityMediaType = "Chat"

	ParticipantActivityMediaTypeDataConf ParticipantActivityMediaType = "DataConf"

	ParticipantActivityMediaTypeMeeting ParticipantActivityMediaType = "Meeting"

	ParticipantActivityMediaTypeMeetingConf ParticipantActivityMediaType = "MeetingConf"

	ParticipantActivityMediaTypePhoneConf ParticipantActivityMediaType = "PhoneConf"

	ParticipantActivityMediaTypeFocus ParticipantActivityMediaType = "Focus"
)

type ContentActivityType string

const (
	ContentActivityTypePoll ContentActivityType = "Poll"

	ContentActivityTypeWhiteBoard ContentActivityType = "WhiteBoard"

	ContentActivityTypeQAndA ContentActivityType = "QAndA"

	ContentActivityTypeChat ContentActivityType = "Chat"

	ContentActivityTypeMeeting ContentActivityType = "Meeting"

	ContentActivityTypeAnnotations ContentActivityType = "Annotations"

	ContentActivityTypeSharedNotes ContentActivityType = "SharedNotes"
)

type ContentActivityMediaType string

const (
	ContentActivityMediaTypeAppSharing ContentActivityMediaType = "AppSharing"

	ContentActivityMediaTypeAudioVideo ContentActivityMediaType = "AudioVideo"

	ContentActivityMediaTypeChat ContentActivityMediaType = "Chat"

	ContentActivityMediaTypeDataConf ContentActivityMediaType = "DataConf"

	ContentActivityMediaTypeMeeting ContentActivityMediaType = "Meeting"

	ContentActivityMediaTypeMeetingConf ContentActivityMediaType = "MeetingConf"

	ContentActivityMediaTypePhoneConf ContentActivityMediaType = "PhoneConf"
)

type ContentActivityAcl string

const (
	ContentActivityAclOrganizer ContentActivityAcl = "Organizer"

	ContentActivityAclPresenter ContentActivityAcl = "Presenter"

	ContentActivityAclEveryone ContentActivityAcl = "Everyone"
)

type WarmupOptionsType interface{}

type SearchApplicationIdType string

const (
	SearchApplicationIdTypeOutlook SearchApplicationIdType = "Outlook"

	SearchApplicationIdTypeOwa SearchApplicationIdType = "Owa"

	SearchApplicationIdTypePaw SearchApplicationIdType = "Paw"

	SearchApplicationIdTypeTeamspace SearchApplicationIdType = "Teamspace"

	SearchApplicationIdTypeOneDrive SearchApplicationIdType = "OneDrive"

	SearchApplicationIdTypeOther SearchApplicationIdType = "Other"
)

type ItemTypesFilterType interface{}

type SuggestionKindType interface{}

type RefinerTypeType string

const (
	RefinerTypeTypeNone RefinerTypeType = "None"

	RefinerTypeTypeTo RefinerTypeType = "To"

	RefinerTypeTypeFrom RefinerTypeType = "From"

	RefinerTypeTypeFolder RefinerTypeType = "Folder"

	RefinerTypeTypeHasAttachment RefinerTypeType = "HasAttachment"

	RefinerTypeTypeMailboxSource RefinerTypeType = "MailboxSource"
)

type SearchResultsPropertySetNameType string

const (
	SearchResultsPropertySetNameTypeDefault SearchResultsPropertySetNameType = "Default"

	SearchResultsPropertySetNameTypeOwa16 SearchResultsPropertySetNameType = "Owa16"

	SearchResultsPropertySetNameTypeOutlook16 SearchResultsPropertySetNameType = "Outlook16"
)

type SearchScopeGroupsType interface{}

type SearchScopeArchivesType interface{}

type ExecuteSearchSortOrderType string

const (
	ExecuteSearchSortOrderTypeDateTime ExecuteSearchSortOrderType = "DateTime"

	ExecuteSearchSortOrderTypeRelevance ExecuteSearchSortOrderType = "Relevance"
)

type MatchOptionsType string

const (
	MatchOptionsTypeFullString MatchOptionsType = "FullString"

	MatchOptionsTypePrefix MatchOptionsType = "Prefix"
)

type PeopleSuggestionPersonType string

const (
	PeopleSuggestionPersonTypeUnknown PeopleSuggestionPersonType = "Unknown"

	PeopleSuggestionPersonTypePerson PeopleSuggestionPersonType = "Person"

	PeopleSuggestionPersonTypeDistributionList PeopleSuggestionPersonType = "DistributionList"

	PeopleSuggestionPersonTypeRoom PeopleSuggestionPersonType = "Room"

	PeopleSuggestionPersonTypePlace PeopleSuggestionPersonType = "Place"

	PeopleSuggestionPersonTypeModernGroup PeopleSuggestionPersonType = "ModernGroup"
)

type ClientIdType string

const (
	ClientIdTypeWeb ClientIdType = "Web"

	ClientIdTypeMobile ClientIdType = "Mobile"

	ClientIdTypeTablet ClientIdType = "Tablet"

	ClientIdTypeDesktop ClientIdType = "Desktop"

	ClientIdTypeExchange ClientIdType = "Exchange"

	ClientIdTypeOutlook ClientIdType = "Outlook"

	ClientIdTypeMacOutlook ClientIdType = "MacOutlook"

	ClientIdTypePOP3 ClientIdType = "POP3"

	ClientIdTypeIMAP4 ClientIdType = "IMAP4"

	ClientIdTypeOther ClientIdType = "Other"

	ClientIdTypeLync ClientIdType = "Lync"

	ClientIdTypeOutlookService ClientIdType = "OutlookService"

	ClientIdTypeMacMail ClientIdType = "MacMail"
)

type EntityFeedbackEntityAddSourceType string

const (
	EntityFeedbackEntityAddSourceTypeNone EntityFeedbackEntityAddSourceType = "None"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApi EntityFeedbackEntityAddSourceType = "EntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeEntityRelevanceApiCache EntityFeedbackEntityAddSourceType = "EntityRelevanceApiCache"

	EntityFeedbackEntityAddSourceTypeActiveDirectory EntityFeedbackEntityAddSourceType = "ActiveDirectory"

	EntityFeedbackEntityAddSourceTypeExplicitTyping EntityFeedbackEntityAddSourceType = "ExplicitTyping"

	EntityFeedbackEntityAddSourceTypePaste EntityFeedbackEntityAddSourceType = "Paste"

	EntityFeedbackEntityAddSourceTypeLocalCacheAndEntityRelevanceApi EntityFeedbackEntityAddSourceType = "LocalCacheAndEntityRelevanceApi"

	EntityFeedbackEntityAddSourceTypeLocalCache EntityFeedbackEntityAddSourceType = "LocalCache"

	EntityFeedbackEntityAddSourceTypeOther EntityFeedbackEntityAddSourceType = "Other"
)

type SystemDayOfWeek string

const (
	SystemDayOfWeekSunday SystemDayOfWeek = "Sunday"

	SystemDayOfWeekMonday SystemDayOfWeek = "Monday"

	SystemDayOfWeekTuesday SystemDayOfWeek = "Tuesday"

	SystemDayOfWeekWednesday SystemDayOfWeek = "Wednesday"

	SystemDayOfWeekThursday SystemDayOfWeek = "Thursday"

	SystemDayOfWeekFriday SystemDayOfWeek = "Friday"

	SystemDayOfWeekSaturday SystemDayOfWeek = "Saturday"
)

type EmailReminderChangeType string

const (
	EmailReminderChangeTypeNone EmailReminderChangeType = "None"

	EmailReminderChangeTypeAdded EmailReminderChangeType = "Added"

	EmailReminderChangeTypeOverride EmailReminderChangeType = "Override"

	EmailReminderChangeTypeDeleted EmailReminderChangeType = "Deleted"
)

type EmailReminderSendOption string

const (
	EmailReminderSendOptionNotSet EmailReminderSendOption = "NotSet"

	EmailReminderSendOptionUser EmailReminderSendOption = "User"

	EmailReminderSendOptionAllAttendees EmailReminderSendOption = "AllAttendees"

	EmailReminderSendOptionStaff EmailReminderSendOption = "Staff"

	EmailReminderSendOptionCustomer EmailReminderSendOption = "Customer"
)

type InsightStatusType string

const (
	InsightStatusTypeCreated InsightStatusType = "Created"

	InsightStatusTypeActive InsightStatusType = "Active"

	InsightStatusTypeDismissed InsightStatusType = "Dismissed"

	InsightStatusTypeInvalid InsightStatusType = "Invalid"
)

// Reasons no suggestions are returned by FindMeetingTimeCandidates

type EmptySuggestionReason string

const (
	EmptySuggestionReasonUnknown EmptySuggestionReason = "Unknown"

	EmptySuggestionReasonAttendeesUnavailable EmptySuggestionReason = "AttendeesUnavailable"

	EmptySuggestionReasonLocationsUnavailable EmptySuggestionReason = "LocationsUnavailable"

	EmptySuggestionReasonOrganizerUnavailable EmptySuggestionReason = "OrganizerUnavailable"

	EmptySuggestionReasonAttendeesUnavailableOrUnknown EmptySuggestionReason = "AttendeesUnavailableOrUnknown"
)

type AddInStateType string

const (
	AddInStateTypeFlagged AddInStateType = "Flagged"

	AddInStateTypeOK AddInStateType = "OK"

	AddInStateTypeRemoved AddInStateType = "Removed"

	AddInStateTypeUndefined AddInStateType = "Undefined"

	AddInStateTypeWithdrawingSoon AddInStateType = "WithdrawingSoon"

	AddInStateTypeWithdrawn AddInStateType = "Withdrawn"
)

type OfficeClientCodeType string

type VersionType string

type MailboxCulture MailboxCultureType

type ManagementRole ManagementRoleType

type SerializedSecurityContext SerializedSecurityContextType

type ExchangeImpersonation ExchangeImpersonationType

type OpenAsAdminOrSystemService OpenAsAdminOrSystemServiceType

type SharingSecurity EncryptedDataContainerType

type ProxySecurityContext ProxySecurityContextType

type ProxySuggesterSid ProxySecurityContextType

type ProxyPartnerToken ProxySecurityContextType

type ServerVersionInfo struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerVersionInfo"`

	MajorVersion int32 `xml:"MajorVersion,attr,omitempty" json:"MajorVersion,omitempty"`

	MinorVersion int32 `xml:"MinorVersion,attr,omitempty" json:"MinorVersion,omitempty"`

	MajorBuildNumber int32 `xml:"MajorBuildNumber,attr,omitempty" json:"MajorBuildNumber,omitempty"`

	MinorBuildNumber int32 `xml:"MinorBuildNumber,attr,omitempty" json:"MinorBuildNumber,omitempty"`

	Version string `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type RequestServerVersion struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequestServerVersion"`

	Version *ExchangeVersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type DateTimePrecision DateTimePrecisionType

type Path BasePathToElementType

type FieldURI PathToUnindexedFieldType

type IndexedFieldURI PathToIndexedFieldType

type ExtendedFieldURI PathToExtendedFieldType

type ExceptionFieldURI PathToExceptionFieldType

type BaseItemId BaseItemIdType

type TimeZoneContext TimeZoneContextType

type Transition TransitionType

type AbsoluteDateTransition AbsoluteDateTransitionType

type RecurringDayTransition RecurringDayTransitionType

type RecurringDateTransition RecurringDateTransitionType

type SearchExpression SearchExpressionType

type Exists ExistsType

type Excludes ExcludesType

type IsEqualTo IsEqualToType

type IsNotEqualTo IsNotEqualToType

type IsGreaterThan IsGreaterThanType

type IsGreaterThanOrEqualTo IsGreaterThanOrEqualToType

type IsLessThan IsLessThanType

type IsLessThanOrEqualTo IsLessThanOrEqualToType

type Contains ContainsExpressionType

type Not NotType

type And AndType

type Or OrType

type Near NearType

type Mailbox EmailAddress

type FreeBusyViewOptions FreeBusyViewOptionsType

type TimeZone SerializableTimeZone

type SuggestionsViewOptions SuggestionsViewOptionsType

type OofSettings UserOofSettings

type MeetingSpace MeetingSpaceType

type MeetingInstance MeetingInstanceType

type NonNegativeInteger struct {
	Value *NonNegativeInteger `xml:",chardata" json:"-,"`
}

type Language string

type MailboxCultureType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxCulture"`

	Value *Language `xml:",chardata" json:"-,"`
}

type InstalledAppType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	MarketplaceAssetId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	Enabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Enabled,omitempty" json:"Enabled,omitempty"`

	ConsentState string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConsentState,omitempty" json:"ConsentState,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	LicenseStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	ProviderName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProviderName,omitempty" json:"ProviderName,omitempty"`

	IconUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types IconUrl,omitempty" json:"IconUrl,omitempty"`

	HighResolutionIconUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HighResolutionIconUrl,omitempty" json:"HighResolutionIconUrl,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	Description string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Description,omitempty" json:"Description,omitempty"`

	Requirements string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Requirements,omitempty" json:"Requirements,omitempty"`

	Version string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,omitempty" json:"Version,omitempty"`
}

type NonEmptyArrayOfRoleType struct {
	Role []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Role,omitempty" json:"Role,omitempty"`
}

type ManagementRoleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagementRole"`

	UserRoles *NonEmptyArrayOfRoleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserRoles,omitempty" json:"UserRoles,omitempty"`

	ApplicationRoles *NonEmptyArrayOfRoleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApplicationRoles,omitempty" json:"ApplicationRoles,omitempty"`
}

type SidAndAttributesType struct {
	SecurityIdentifier string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SecurityIdentifier,omitempty" json:"SecurityIdentifier,omitempty"`

	Attributes uint32 `xml:"Attributes,attr,omitempty" json:"Attributes,omitempty"`
}

type NonEmptyArrayOfGroupIdentifiersType struct {
	GroupIdentifier []*SidAndAttributesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupIdentifier,omitempty" json:"GroupIdentifier,omitempty"`
}

type NonEmptyArrayOfRestrictedGroupIdentifiersType struct {
	RestrictedGroupIdentifier []*SidAndAttributesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RestrictedGroupIdentifier,omitempty" json:"RestrictedGroupIdentifier,omitempty"`
}

type SerializedSecurityContextType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SerializedSecurityContext"`

	UserSid string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserSid,omitempty" json:"UserSid,omitempty"`

	GroupSids *NonEmptyArrayOfGroupIdentifiersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSids,omitempty" json:"GroupSids,omitempty"`

	RestrictedGroupSids *NonEmptyArrayOfRestrictedGroupIdentifiersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RestrictedGroupSids,omitempty" json:"RestrictedGroupSids,omitempty"`

	PrimarySmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type ConnectingSIDType struct {
	PrincipalName *PrincipalNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrincipalName,omitempty" json:"PrincipalName,omitempty"`

	SID *SIDType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress *PrimarySmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type PrincipalNameType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrincipalName"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SIDType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SID"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type PrimarySmtpAddressType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress"`

	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type SmtpAddressType struct {
	Value *NonEmptyStringType `xml:",chardata" json:"-,"`
}

type ExchangeImpersonationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExchangeImpersonation"`

	ConnectingSID *ConnectingSIDType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`
}

type OpenAsAdminOrSystemServiceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OpenAsAdminOrSystemService"`

	ConnectingSID *ConnectingSIDType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConnectingSID,omitempty" json:"ConnectingSID,omitempty"`

	LogonType *SpecialLogonTypeType `xml:"LogonType,attr,omitempty" json:"LogonType,omitempty"`

	BudgetType int32 `xml:"BudgetType,attr,omitempty" json:"BudgetType,omitempty"`
}

type ProxySecurityContextType struct {
	Value []byte `xml:",chardata" json:"-,"`
}

type BaseEmailAddressType struct {
}

type EmailAddressType struct {
	*BaseEmailAddressType

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	EmailAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	RoutingType *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoutingType,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxType,omitempty" json:"MailboxType,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	OriginalDisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalDisplayName,omitempty" json:"OriginalDisplayName,omitempty"`
}

type EmailAddressExtendedType struct {
	*EmailAddressType

	ExternalObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalObjectId,omitempty" json:"ExternalObjectId,omitempty"`

	PrimaryEmailAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimaryEmailAddress,omitempty" json:"PrimaryEmailAddress,omitempty"`
}

type ArrayOfEmailAddressesType struct {
	Address []*EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`
}

type DirectoryEntryType struct {
	Id *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`
}

type RoomType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Room"`

	*DirectoryEntryType
}

type ArrayOfRoomsType struct {
	Room []*RoomType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Room,omitempty" json:"Room,omitempty"`
}

type TimeSlot struct {
	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	DurationInMinutes float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types DurationInMinutes,omitempty" json:"DurationInMinutes,omitempty"`
}

type MeetingLocation struct {
	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type ReminderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Reminder"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	ReminderTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderTime,omitempty" json:"ReminderTime,omitempty"`

	StartDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDate,omitempty" json:"StartDate,omitempty"`

	EndDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndDate,omitempty" json:"EndDate,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	RecurringMasterItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	ReminderGroup *ReminderGroupType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderGroup,omitempty" json:"ReminderGroup,omitempty"`

	UID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UID,omitempty" json:"UID,omitempty"`
}

type ArrayOfRemindersType struct {
	Reminder []*ReminderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Reminder,omitempty" json:"Reminder,omitempty"`
}

type ArrayOfRecipientsType struct {
	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type SingleRecipientType struct {
	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type BasePathToElementType struct {
}

type PathToUnindexedFieldType struct {
	*BasePathToElementType

	FieldURI *UnindexedFieldURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToIndexedFieldType struct {
	*BasePathToElementType

	FieldURI *DictionaryURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`

	FieldIndex string `xml:"FieldIndex,attr,omitempty" json:"FieldIndex,omitempty"`
}

type PathToExceptionFieldType struct {
	*BasePathToElementType

	FieldURI *ExceptionPropertyURIType `xml:"FieldURI,attr,omitempty" json:"FieldURI,omitempty"`
}

type PathToExtendedFieldType struct {
	*BasePathToElementType

	DistinguishedPropertySetId *DistinguishedPropertySetType `xml:"DistinguishedPropertySetId,attr,omitempty" json:"DistinguishedPropertySetId,omitempty"`

	PropertySetId *GuidType `xml:"PropertySetId,attr,omitempty" json:"PropertySetId,omitempty"`

	PropertyTag *PropertyTagType `xml:"PropertyTag,attr,omitempty" json:"PropertyTag,omitempty"`

	PropertyName string `xml:"PropertyName,attr,omitempty" json:"PropertyName,omitempty"`

	PropertyId int32 `xml:"PropertyId,attr,omitempty" json:"PropertyId,omitempty"`

	PropertyType *MapiPropertyTypeType `xml:"PropertyType,attr,omitempty" json:"PropertyType,omitempty"`
}

type NonEmptyArrayOfPathsToElementType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type NonEmptyArrayOfPropertyValuesType struct {
	Value []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type NonEmptyArrayOfExtendedPropertyType struct {
	ExtendedProperty []*ExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type ExtendedPropertyType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Values *NonEmptyArrayOfPropertyValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Values,omitempty" json:"Values,omitempty"`
}

type FolderResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ItemResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	IncludeMimeContent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyType,omitempty" json:"BodyType,omitempty"`

	UniqueBodyType *BodyTypeResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueBodyType,omitempty" json:"UniqueBodyType,omitempty"`

	NormalizedBodyType *BodyTypeResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NormalizedBodyType,omitempty" json:"NormalizedBodyType,omitempty"`

	FilterHtmlContent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	ConvertHtmlCodePageToUTF8 bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConvertHtmlCodePageToUTF8,omitempty" json:"ConvertHtmlCodePageToUTF8,omitempty"`

	InlineImageUrlTemplate string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InlineImageUrlTemplate,omitempty" json:"InlineImageUrlTemplate,omitempty"`

	BlockExternalImages bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types BlockExternalImages,omitempty" json:"BlockExternalImages,omitempty"`

	AddBlankTargetToLinks bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddBlankTargetToLinks,omitempty" json:"AddBlankTargetToLinks,omitempty"`

	MaximumBodySize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaximumBodySize,omitempty" json:"MaximumBodySize,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type AttachmentResponseShapeType struct {
	IncludeMimeContent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IncludeMimeContent,omitempty" json:"IncludeMimeContent,omitempty"`

	BodyType *BodyTypeResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyType,omitempty" json:"BodyType,omitempty"`

	FilterHtmlContent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types FilterHtmlContent,omitempty" json:"FilterHtmlContent,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type ConversationResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonaResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type NonEmptyArrayOfClientAccessTokenRequestsType struct {
	TokenRequest []*ClientAccessTokenRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenRequest,omitempty" json:"TokenRequest,omitempty"`
}

type ClientAccessTokenRequestType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenType,omitempty" json:"TokenType,omitempty"`

	Scope string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Scope,omitempty" json:"Scope,omitempty"`

	ResourceUri string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResourceUri,omitempty" json:"ResourceUri,omitempty"`
}

type ClientAccessTokenType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	TokenType *ClientAccessTokenTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenType,omitempty" json:"TokenType,omitempty"`

	TokenValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenValue,omitempty" json:"TokenValue,omitempty"`

	TTL int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TTL,omitempty" json:"TTL,omitempty"`
}

type ChangeDescriptionType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type ItemChangeDescriptionType struct {
	*ChangeDescriptionType
}

type FolderChangeDescriptionType struct {
	*ChangeDescriptionType
}

type SetItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetItemField"`

	*ItemChangeDescriptionType

	FieldURI *FieldURI `xml:"FieldURI,omitempty" json:"FieldURI,omitempty"`

	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type SetFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type DeleteItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteItemField"`

	*ItemChangeDescriptionType
}

type DeleteFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFolderField"`

	*FolderChangeDescriptionType
}

type AppendToItemFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToItemField"`

	*ItemChangeDescriptionType

	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type AppendToFolderFieldType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToFolderField"`

	*FolderChangeDescriptionType

	Folder *FolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type NonEmptyArrayOfItemChangeDescriptionsType struct {
	AppendToItemField *AppendToItemFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToItemField,omitempty" json:"AppendToItemField,omitempty"`

	SetItemField *SetItemFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetItemField,omitempty" json:"SetItemField,omitempty"`

	DeleteItemField *DeleteItemFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteItemField,omitempty" json:"DeleteItemField,omitempty"`
}

type NonEmptyArrayOfFolderChangeDescriptionsType struct {
	AppendToFolderField *AppendToFolderFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppendToFolderField,omitempty" json:"AppendToFolderField,omitempty"`

	SetFolderField *SetFolderFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetFolderField,omitempty" json:"SetFolderField,omitempty"`

	DeleteFolderField *DeleteFolderFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFolderField,omitempty" json:"DeleteFolderField,omitempty"`
}

type ItemChangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemChange"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Updates,omitempty" json:"Updates,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`
}

type NonEmptyArrayOfItemChangesType struct {
	ItemChange []*ItemChangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemChange,omitempty" json:"ItemChange,omitempty"`
}

type InternetHeaderType struct {
	Value string `xml:",chardata" json:"-,"`

	HeaderName string `xml:"HeaderName,attr,omitempty" json:"HeaderName,omitempty"`
}

type NonEmptyArrayOfInternetHeadersType struct {
	InternetMessageHeader []*InternetHeaderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageHeader,omitempty" json:"InternetMessageHeader,omitempty"`
}

type NonEmptyArrayOfPredictedActionReasonType struct {
	PredictedActionReason []*PredictedActionReasonType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PredictedActionReason,omitempty" json:"PredictedActionReason,omitempty"`
}

type RequestAttachmentIdType struct {
	*BaseItemIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type AttachmentIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId"`

	*RequestAttachmentIdType

	RootItemId string `xml:"RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type RootItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootItemId"`

	*BaseItemIdType

	RootItemId string `xml:"RootItemId,attr,omitempty" json:"RootItemId,omitempty"`

	RootItemChangeKey string `xml:"RootItemChangeKey,attr,omitempty" json:"RootItemChangeKey,omitempty"`
}

type NonEmptyArrayOfRequestAttachmentIdsType struct {
	AttachmentId *RequestAttachmentIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type AttachmentType struct {
	AttachmentId *AttachmentIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId,omitempty" json:"AttachmentId,omitempty"`

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	ContentType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentType,omitempty" json:"ContentType,omitempty"`

	ContentId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentId,omitempty" json:"ContentId,omitempty"`

	ContentLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	AttachmentOriginalUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentOriginalUrl,omitempty" json:"AttachmentOriginalUrl,omitempty"`

	Size int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsInline bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsInline,omitempty" json:"IsInline,omitempty"`
}

type ItemAttachmentType struct {
	*AttachmentType

	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type SyncFolderItemsCreateOrUpdateType struct {
	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type FileAttachmentType struct {
	*AttachmentType

	IsContactPhoto bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsContactPhoto,omitempty" json:"IsContactPhoto,omitempty"`

	Content []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Content,omitempty" json:"Content,omitempty"`
}

type ReferenceAttachmentType struct {
	*AttachmentType

	AttachLongPathName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachLongPathName,omitempty" json:"AttachLongPathName,omitempty"`

	ProviderType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProviderType,omitempty" json:"ProviderType,omitempty"`

	ProviderEndpointUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProviderEndpointUrl,omitempty" json:"ProviderEndpointUrl,omitempty"`

	AttachmentThumbnailUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentThumbnailUrl,omitempty" json:"AttachmentThumbnailUrl,omitempty"`

	AttachmentPreviewUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentPreviewUrl,omitempty" json:"AttachmentPreviewUrl,omitempty"`

	PermissionType int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionType,omitempty" json:"PermissionType,omitempty"`

	OriginalPermissionType int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalPermissionType,omitempty" json:"OriginalPermissionType,omitempty"`

	AttachmentIsFolder bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentIsFolder,omitempty" json:"AttachmentIsFolder,omitempty"`
}

type ArrayOfAttachmentsType struct {
	ItemAttachment *ItemAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type NonEmptyArrayOfAttachmentsType struct {
	ItemAttachment *ItemAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemAttachment,omitempty" json:"ItemAttachment,omitempty"`

	FileAttachment *FileAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAttachment,omitempty" json:"FileAttachment,omitempty"`

	ReferenceAttachment *ReferenceAttachmentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceAttachment,omitempty" json:"ReferenceAttachment,omitempty"`
}

type BodyType struct {
	Value string `xml:",chardata" json:"-,"`

	BodyType *BodyTypeType `xml:"BodyType,attr,omitempty" json:"BodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type UniqueBodyType struct {
	Value string `xml:",chardata" json:"-,"`

	UniqueBodyType *BodyTypeType `xml:"UniqueBodyType,attr,omitempty" json:"UniqueBodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type NormalizedBodyType struct {
	Value string `xml:",chardata" json:"-,"`

	NormalizedBodyType *BodyTypeType `xml:"NormalizedBodyType,attr,omitempty" json:"NormalizedBodyType,omitempty"`

	IsTruncated bool `xml:"IsTruncated,attr,omitempty" json:"IsTruncated,omitempty"`
}

type BaseFolderIdType struct {
}

type DistinguishedFolderIdType struct {
	*BaseFolderIdType

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	Id *DistinguishedFolderIdNameType `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type FolderIdType struct {
	*BaseFolderIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type AddressListIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressListId"`

	*BaseFolderIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfDistinguishedFolderIdType struct {
	DistinguishedFolderId *DistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfBaseFolderIdsType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type TargetFolderIdType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	AddressListId *AddressListIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressListId,omitempty" json:"AddressListId,omitempty"`
}

type NonEmptyArrayOfUploadItemsType struct {
	Item []*UploadItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type UploadItemType struct {
	ParentFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	Data []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Data,omitempty" json:"Data,omitempty"`

	CreateAction *CreateActionType `xml:"CreateAction,attr,omitempty" json:"CreateAction,omitempty"`

	IsAssociated bool `xml:"IsAssociated,attr,omitempty" json:"IsAssociated,omitempty"`
}

type FindFolderParentType struct {
	Folders *ArrayOfFoldersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folders,omitempty" json:"Folders,omitempty"`
}

type BaseFolderType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	ParentFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderClass string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderClass,omitempty" json:"FolderClass,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	TotalCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TotalCount,omitempty" json:"TotalCount,omitempty"`

	ChildFolderCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChildFolderCount,omitempty" json:"ChildFolderCount,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	ManagedFolderInformation *ManagedFolderInformationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagedFolderInformation,omitempty" json:"ManagedFolderInformation,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`

	PolicyTag *RetentionTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	ReplicaList *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplicaList,omitempty" json:"ReplicaList,omitempty"`
}

type ManagedFolderInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagedFolderInformation"`

	CanDelete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanDelete,omitempty" json:"CanDelete,omitempty"`

	CanRenameOrMove bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanRenameOrMove,omitempty" json:"CanRenameOrMove,omitempty"`

	MustDisplayComment bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MustDisplayComment,omitempty" json:"MustDisplayComment,omitempty"`

	HasQuota bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasQuota,omitempty" json:"HasQuota,omitempty"`

	IsManagedFoldersRoot bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsManagedFoldersRoot,omitempty" json:"IsManagedFoldersRoot,omitempty"`

	ManagedFolderId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagedFolderId,omitempty" json:"ManagedFolderId,omitempty"`

	Comment string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Comment,omitempty" json:"Comment,omitempty"`

	StorageQuota int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StorageQuota,omitempty" json:"StorageQuota,omitempty"`

	FolderSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderSize,omitempty" json:"FolderSize,omitempty"`

	HomePage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomePage,omitempty" json:"HomePage,omitempty"`
}

type FolderType struct {
	*BaseFolderType

	PermissionSet *PermissionSetType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	UnreadCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type CalendarFolderType struct {
	*BaseFolderType

	SharingEffectiveRights *CalendarPermissionReadAccessType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *CalendarPermissionSetType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionSet,omitempty" json:"PermissionSet,omitempty"`
}

type ReminderItemActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderItemAction"`

	ActionType *ReminderActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActionType,omitempty" json:"ActionType,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	NewReminderTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types NewReminderTime,omitempty" json:"NewReminderTime,omitempty"`
}

type NonEmptyArrayOfReminderItemActionType struct {
	ReminderItemAction []*ReminderItemActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderItemAction,omitempty" json:"ReminderItemAction,omitempty"`
}

type ContactsFolderType struct {
	*BaseFolderType

	SharingEffectiveRights *PermissionReadAccessType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingEffectiveRights,omitempty" json:"SharingEffectiveRights,omitempty"`

	PermissionSet *PermissionSetType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionSet,omitempty" json:"PermissionSet,omitempty"`

	SourceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceId,omitempty" json:"SourceId,omitempty"`

	AccountName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AccountName,omitempty" json:"AccountName,omitempty"`
}

type SearchFolderType struct {
	*FolderType

	SearchParameters *SearchParametersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchParameters,omitempty" json:"SearchParameters,omitempty"`
}

type TasksFolderType struct {
	*FolderType
}

type NonEmptyArrayOfFoldersType struct {
	Folder *FolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type ArrayOfFoldersType struct {
	Folder *FolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type BaseItemIdType struct {
}

type ItemIdType struct {
	*BaseItemIdType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type NonEmptyArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	OccurrenceItemId *OccurrenceItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceItemId,omitempty" json:"OccurrenceItemId,omitempty"`

	RecurringMasterItemId *RecurringMasterItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemId,omitempty" json:"RecurringMasterItemId,omitempty"`

	RecurringMasterItemIdRanges *RecurringMasterItemIdRangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemIdRanges,omitempty" json:"RecurringMasterItemIdRanges,omitempty"`
}

type ArrayOfBaseItemIdsType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`
}

type ArrayOfItemIdsType struct {
	ItemId []*ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`
}

type ResponseObjectCoreType struct {
	*MessageType

	ReferenceItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceItemId,omitempty" json:"ReferenceItemId,omitempty"`
}

type ResponseObjectType struct {
	*ResponseObjectCoreType

	// The name of this reply object class as an English string. The client application is required to translate it if it's running in a different locale

	ObjectName string `xml:"ObjectName,attr,omitempty" json:"ObjectName,omitempty"`
}

type NonEmptyArrayOfResponseObjectsType struct {
	AcceptItem *AcceptItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	AddItemToMyCalendar *AddItemToMyCalendarType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddItemToMyCalendar,omitempty" json:"AddItemToMyCalendar,omitempty"`

	ProposeNewTime *ProposeNewTimeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposeNewTime,omitempty" json:"ProposeNewTime,omitempty"`
}

type FolderChangeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderChange"`

	Updates *NonEmptyArrayOfFolderChangeDescriptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Updates,omitempty" json:"Updates,omitempty"`

	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	DistinguishedFolderId *DistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedFolderId,omitempty" json:"DistinguishedFolderId,omitempty"`
}

type NonEmptyArrayOfFolderChangesType struct {
	FolderChange []*FolderChangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderChange,omitempty" json:"FolderChange,omitempty"`
}

type WellKnownResponseObjectType struct {
}

type SmartResponseBaseType struct {
}

type SmartResponseType struct {
	*SmartResponseBaseType

	NewBodyContent *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type ReplyToItemType struct {
	*SmartResponseType
}

type ReplyAllToItemType struct {
	*SmartResponseType

	IsSpecificMessageReply bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsSpecificMessageReply,omitempty" json:"IsSpecificMessageReply,omitempty"`
}

type ForwardItemType struct {
	*SmartResponseType
}

type CancelCalendarItemType struct {
	*SmartResponseType
}

type ReferenceItemResponseType struct {
}

type SuppressReadReceiptType struct {
	*ReferenceItemResponseType
}

type FindItemParentType struct {
	Items *ArrayOfRealItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`

	Groups *ArrayOfGroupedItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Groups,omitempty" json:"Groups,omitempty"`
}

type ItemType struct {
	MimeContent *MimeContentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MimeContent,omitempty" json:"MimeContent,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	ParentFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemClass *ItemClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemClass,omitempty" json:"ItemClass,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	Body *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Body,omitempty" json:"Body,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attachments,omitempty" json:"Attachments,omitempty"`

	DateTimeReceived xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeReceived,omitempty" json:"DateTimeReceived,omitempty"`

	Size int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`

	Categories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Categories,omitempty" json:"Categories,omitempty"`

	Importance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Importance,omitempty" json:"Importance,omitempty"`

	InReplyTo string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InReplyTo,omitempty" json:"InReplyTo,omitempty"`

	IsSubmitted bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsSubmitted,omitempty" json:"IsSubmitted,omitempty"`

	IsDraft bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDraft,omitempty" json:"IsDraft,omitempty"`

	IsFromMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsFromMe,omitempty" json:"IsFromMe,omitempty"`

	IsResend bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsResend,omitempty" json:"IsResend,omitempty"`

	IsUnmodified bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsUnmodified,omitempty" json:"IsUnmodified,omitempty"`

	InternetMessageHeaders *NonEmptyArrayOfInternetHeadersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageHeaders,omitempty" json:"InternetMessageHeaders,omitempty"`

	DateTimeSent xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeSent,omitempty" json:"DateTimeSent,omitempty"`

	DateTimeCreated xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	ResponseObjects *NonEmptyArrayOfResponseObjectsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseObjects,omitempty" json:"ResponseObjects,omitempty"`

	ReminderDueBy xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderDueBy,omitempty" json:"ReminderDueBy,omitempty"`

	ReminderIsSet bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderIsSet,omitempty" json:"ReminderIsSet,omitempty"`

	ReminderNextTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderNextTime,omitempty" json:"ReminderNextTime,omitempty"`

	ReminderMinutesBeforeStart *ReminderMinutesBeforeStartType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderMinutesBeforeStart,omitempty" json:"ReminderMinutesBeforeStart,omitempty"`

	DisplayCc string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayCc,omitempty" json:"DisplayCc,omitempty"`

	DisplayTo string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayTo,omitempty" json:"DisplayTo,omitempty"`

	DisplayBcc string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayBcc,omitempty" json:"DisplayBcc,omitempty"`

	HasAttachments bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	ExtendedProperty []*ExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`

	Culture *Language `xml:"http://schemas.microsoft.com/exchange/services/2006/types Culture,omitempty" json:"Culture,omitempty"`

	EffectiveRights *EffectiveRightsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EffectiveRights,omitempty" json:"EffectiveRights,omitempty"`

	LastModifiedName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedName,omitempty" json:"LastModifiedName,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	IsAssociated bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAssociated,omitempty" json:"IsAssociated,omitempty"`

	WebClientReadFormQueryString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WebClientReadFormQueryString,omitempty" json:"WebClientReadFormQueryString,omitempty"`

	WebClientEditFormQueryString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WebClientEditFormQueryString,omitempty" json:"WebClientEditFormQueryString,omitempty"`

	ConversationId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationId,omitempty" json:"ConversationId,omitempty"`

	UniqueBody *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueBody,omitempty" json:"UniqueBody,omitempty"`

	Flag *FlagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flag,omitempty" json:"Flag,omitempty"`

	StoreEntryId []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types StoreEntryId,omitempty" json:"StoreEntryId,omitempty"`

	InstanceKey []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	NormalizedBody *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NormalizedBody,omitempty" json:"NormalizedBody,omitempty"`

	EntityExtractionResult *EntityExtractionResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityExtractionResult,omitempty" json:"EntityExtractionResult,omitempty"`

	PolicyTag *RetentionTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PolicyTag,omitempty" json:"PolicyTag,omitempty"`

	ArchiveTag *RetentionTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ArchiveTag,omitempty" json:"ArchiveTag,omitempty"`

	RetentionDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionDate,omitempty" json:"RetentionDate,omitempty"`

	Preview string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Preview,omitempty" json:"Preview,omitempty"`

	RightsManagementLicenseData *RightsManagementLicenseDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RightsManagementLicenseData,omitempty" json:"RightsManagementLicenseData,omitempty"`

	PredictedActionReasons *NonEmptyArrayOfPredictedActionReasonType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PredictedActionReasons,omitempty" json:"PredictedActionReasons,omitempty"`

	IsClutter bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsClutter,omitempty" json:"IsClutter,omitempty"`

	BlockStatus bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types BlockStatus,omitempty" json:"BlockStatus,omitempty"`

	HasBlockedImages bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasBlockedImages,omitempty" json:"HasBlockedImages,omitempty"`

	TextBody *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TextBody,omitempty" json:"TextBody,omitempty"`

	IconIndex *IconIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IconIndex,omitempty" json:"IconIndex,omitempty"`

	SearchKey []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchKey,omitempty" json:"SearchKey,omitempty"`

	SortKey int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types SortKey,omitempty" json:"SortKey,omitempty"`

	Hashtags *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Hashtags,omitempty" json:"Hashtags,omitempty"`

	Mentions *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mentions,omitempty" json:"Mentions,omitempty"`

	MentionedMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	MentionsPreview *MentionsPreviewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionsPreview,omitempty" json:"MentionsPreview,omitempty"`

	MentionsEx *NonEmptyArrayOfMentionActionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionsEx,omitempty" json:"MentionsEx,omitempty"`

	AppliedHashtags *NonEmptyArrayOfAppliedHashtagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtags,omitempty" json:"AppliedHashtags,omitempty"`

	AppliedHashtagsPreview *AppliedHashtagsPreviewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtagsPreview,omitempty" json:"AppliedHashtagsPreview,omitempty"`

	Likes *NonEmptyArrayOfLikeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Likes,omitempty" json:"Likes,omitempty"`

	LikesPreview *LikesPreviewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LikesPreview,omitempty" json:"LikesPreview,omitempty"`

	PendingSocialActivityTagIds *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PendingSocialActivityTagIds,omitempty" json:"PendingSocialActivityTagIds,omitempty"`

	AtAllMention bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	CanDelete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanDelete,omitempty" json:"CanDelete,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`
}

type ArrayOfItemClassType struct {
	ItemClass *ItemClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemClass,omitempty" json:"ItemClass,omitempty"`
}

type FlagType struct {
	FlagStatus *FlagStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	StartDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDate,omitempty" json:"StartDate,omitempty"`

	DueDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DueDate,omitempty" json:"DueDate,omitempty"`

	CompleteDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompleteDate,omitempty" json:"CompleteDate,omitempty"`
}

type EntityType struct {
	Position []*EmailPositionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Position,omitempty" json:"Position,omitempty"`
}

type ArrayOfAddressesType struct {
	Address []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfAddressEntitiesType struct {
	AddressEntity []*AddressEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressEntity,omitempty" json:"AddressEntity,omitempty"`
}

type AddressEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressEntity"`

	*EntityType

	Address string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`
}

type ArrayOfEmailAddressEntitiesType struct {
	EmailAddressEntity []*EmailAddressEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressEntity,omitempty" json:"EmailAddressEntity,omitempty"`
}

type EmailAddressEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressEntity"`

	*EntityType

	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ArrayOfUrlEntitiesType struct {
	UrlEntity []*UrlEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UrlEntity,omitempty" json:"UrlEntity,omitempty"`
}

type UrlEntityType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types UrlEntity"`

	*EntityType

	Url string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfMeetingSuggestionsType struct {
	MeetingSuggestion []*MeetingSuggestionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSuggestion,omitempty" json:"MeetingSuggestion,omitempty"`
}

type MeetingSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSuggestion"`

	*EntityType

	Attendees *ArrayOfEmailUsersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attendees,omitempty" json:"Attendees,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	MeetingString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingString,omitempty" json:"MeetingString,omitempty"`

	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`
}

type ArrayOfTaskSuggestionsType struct {
	TaskSuggestion []*TaskSuggestionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskSuggestion,omitempty" json:"TaskSuggestion,omitempty"`
}

type ArrayOfContactsType struct {
	Contact []*ContactType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`
}

type ContactType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact"`

	*EntityType

	PersonName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonName,omitempty" json:"PersonName,omitempty"`

	BusinessName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessName,omitempty" json:"BusinessName,omitempty"`

	PhoneNumbers *ArrayOfPhonesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	Urls *ArrayOfUrlsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls,omitempty" json:"Urls,omitempty"`

	EmailAddresses *ArrayOfExtractedEmailAddresses `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Addresses *ArrayOfAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Addresses,omitempty" json:"Addresses,omitempty"`

	ContactString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactString,omitempty" json:"ContactString,omitempty"`
}

type ArrayOfUrlsType struct {
	Url []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Url,omitempty" json:"Url,omitempty"`
}

type ArrayOfPhonesType struct {
	Phone []*PhoneType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Phone"`

	OriginalPhoneString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfPhoneEntitiesType struct {
	Phone []*PhoneEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Phone,omitempty" json:"Phone,omitempty"`
}

type PhoneEntityType struct {
	*EntityType

	OriginalPhoneString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalPhoneString,omitempty" json:"OriginalPhoneString,omitempty"`

	PhoneString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneString,omitempty" json:"PhoneString,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`
}

type ArrayOfEmailUsersType struct {
	EmailUser []*EmailUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailUser,omitempty" json:"EmailUser,omitempty"`
}

type EmailUserType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailUser"`

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	UserId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserId,omitempty" json:"UserId,omitempty"`
}

type TaskSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskSuggestion"`

	*EntityType

	TaskString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskString,omitempty" json:"TaskString,omitempty"`

	Assignees *ArrayOfEmailUsersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Assignees,omitempty" json:"Assignees,omitempty"`
}

type ArrayOfExtractedEmailAddresses struct {
	EmailAddress []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ParcelDeliveryEntityType struct {
	Carrier string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Carrier,omitempty" json:"Carrier,omitempty"`

	TrackingNumber string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrackingNumber,omitempty" json:"TrackingNumber,omitempty"`

	TrackingUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrackingUrl,omitempty" json:"TrackingUrl,omitempty"`

	ExpectedArrivalFrom string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExpectedArrivalFrom,omitempty" json:"ExpectedArrivalFrom,omitempty"`

	ExpectedArrivalUntil string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExpectedArrivalUntil,omitempty" json:"ExpectedArrivalUntil,omitempty"`

	Product string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Product,omitempty" json:"Product,omitempty"`

	ProductUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductUrl,omitempty" json:"ProductUrl,omitempty"`

	ProductImage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductImage,omitempty" json:"ProductImage,omitempty"`

	ProductSku string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductSku,omitempty" json:"ProductSku,omitempty"`

	ProductDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductDescription,omitempty" json:"ProductDescription,omitempty"`

	ProductBrand string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductBrand,omitempty" json:"ProductBrand,omitempty"`

	ProductColor string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductColor,omitempty" json:"ProductColor,omitempty"`

	OrderNumber string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OrderNumber,omitempty" json:"OrderNumber,omitempty"`

	Seller string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Seller,omitempty" json:"Seller,omitempty"`

	OrderStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OrderStatus,omitempty" json:"OrderStatus,omitempty"`

	AddressName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressName,omitempty" json:"AddressName,omitempty"`

	StreetAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StreetAddress,omitempty" json:"StreetAddress,omitempty"`

	AddressLocality string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressLocality,omitempty" json:"AddressLocality,omitempty"`

	AddressRegion string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressRegion,omitempty" json:"AddressRegion,omitempty"`

	AddressCountry string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddressCountry,omitempty" json:"AddressCountry,omitempty"`

	PostalCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalCode,omitempty" json:"PostalCode,omitempty"`
}

type InferenceClassificationOverrideType struct {
	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	SenderSmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type ArrayOfInferenceClassificationOverridesType struct {
	Override []*InferenceClassificationOverrideType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Override,omitempty" json:"Override,omitempty"`
}

type ArrayOfParcelDeliveryEntitiesType struct {
	ParcelDelivery []*ParcelDeliveryEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParcelDelivery,omitempty" json:"ParcelDelivery,omitempty"`
}

type FlightEntityType struct {
	FlightNumber string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlightNumber,omitempty" json:"FlightNumber,omitempty"`

	AirlineIataCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AirlineIataCode,omitempty" json:"AirlineIataCode,omitempty"`

	DepartureTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DepartureTime,omitempty" json:"DepartureTime,omitempty"`

	WindowsTimeZoneName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WindowsTimeZoneName,omitempty" json:"WindowsTimeZoneName,omitempty"`

	DepartureAirportIataCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DepartureAirportIataCode,omitempty" json:"DepartureAirportIataCode,omitempty"`

	ArrivalAirportIataCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ArrivalAirportIataCode,omitempty" json:"ArrivalAirportIataCode,omitempty"`
}

type ArrayOfFlightsType struct {
	Flight []*FlightEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flight,omitempty" json:"Flight,omitempty"`
}

type FlightReservationEntityType struct {
	ReservationId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReservationId,omitempty" json:"ReservationId,omitempty"`

	ReservationStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReservationStatus,omitempty" json:"ReservationStatus,omitempty"`

	UnderName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnderName,omitempty" json:"UnderName,omitempty"`

	BrokerName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types BrokerName,omitempty" json:"BrokerName,omitempty"`

	BrokerPhone string `xml:"http://schemas.microsoft.com/exchange/services/2006/types BrokerPhone,omitempty" json:"BrokerPhone,omitempty"`

	Flights *ArrayOfFlightsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flights,omitempty" json:"Flights,omitempty"`
}

type ArrayOfFlightReservationsType struct {
	FlightReservation []*FlightReservationEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlightReservation,omitempty" json:"FlightReservation,omitempty"`
}

type SenderAddInEntityType struct {
	ExtensionId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtensionId,omitempty" json:"ExtensionId,omitempty"`
}

type ArrayOfSenderAddInsType struct {
	Microsoft_OutlookServices_SenderApp []*SenderAddInEntityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Microsoft.OutlookServices.SenderApp,omitempty" json:"Microsoft.OutlookServices.SenderApp,omitempty"`
}

type EntityExtractionResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityExtractionResult"`

	Addresses *ArrayOfAddressEntitiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Addresses,omitempty" json:"Addresses,omitempty"`

	MeetingSuggestions *ArrayOfMeetingSuggestionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingSuggestions,omitempty" json:"MeetingSuggestions,omitempty"`

	TaskSuggestions *ArrayOfTaskSuggestionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TaskSuggestions,omitempty" json:"TaskSuggestions,omitempty"`

	EmailAddresses *ArrayOfEmailAddressEntitiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	Contacts *ArrayOfContactsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contacts,omitempty" json:"Contacts,omitempty"`

	Urls *ArrayOfUrlEntitiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls,omitempty" json:"Urls,omitempty"`

	PhoneNumbers *ArrayOfPhoneEntitiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	ParcelDeliveries *ArrayOfParcelDeliveryEntitiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParcelDeliveries,omitempty" json:"ParcelDeliveries,omitempty"`

	FlightReservations *ArrayOfFlightReservationsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlightReservations,omitempty" json:"FlightReservations,omitempty"`

	SenderAddIns *ArrayOfSenderAddInsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderAddIns,omitempty" json:"SenderAddIns,omitempty"`
}

type RightsManagementLicenseDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RightsManagementLicenseData"`

	RightsManagedMessageDecryptionStatus int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types RightsManagedMessageDecryptionStatus,omitempty" json:"RightsManagedMessageDecryptionStatus,omitempty"`

	RmsTemplateId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RmsTemplateId,omitempty" json:"RmsTemplateId,omitempty"`

	TemplateName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TemplateName,omitempty" json:"TemplateName,omitempty"`

	TemplateDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TemplateDescription,omitempty" json:"TemplateDescription,omitempty"`

	EditAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types EditAllowed,omitempty" json:"EditAllowed,omitempty"`

	ReplyAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyAllowed,omitempty" json:"ReplyAllowed,omitempty"`

	ReplyAllAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyAllAllowed,omitempty" json:"ReplyAllAllowed,omitempty"`

	ForwardAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardAllowed,omitempty" json:"ForwardAllowed,omitempty"`

	ModifyRecipientsAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifyRecipientsAllowed,omitempty" json:"ModifyRecipientsAllowed,omitempty"`

	ExtractAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtractAllowed,omitempty" json:"ExtractAllowed,omitempty"`

	PrintAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrintAllowed,omitempty" json:"PrintAllowed,omitempty"`

	ExportAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExportAllowed,omitempty" json:"ExportAllowed,omitempty"`

	ProgrammaticAccessAllowed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProgrammaticAccessAllowed,omitempty" json:"ProgrammaticAccessAllowed,omitempty"`

	IsOwner bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOwner,omitempty" json:"IsOwner,omitempty"`

	ContentOwner string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentOwner,omitempty" json:"ContentOwner,omitempty"`

	ContentExpiryDate string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentExpiryDate,omitempty" json:"ContentExpiryDate,omitempty"`
}

type ConversationActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationAction"`

	Action *ConversationActionTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Action,omitempty" json:"Action,omitempty"`

	ConversationId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationId,omitempty" json:"ConversationId,omitempty"`

	ContextFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContextFolderId,omitempty" json:"ContextFolderId,omitempty"`

	ConversationLastSyncTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationLastSyncTime,omitempty" json:"ConversationLastSyncTime,omitempty"`

	ProcessRightAway bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProcessRightAway,omitempty" json:"ProcessRightAway,omitempty"`

	DestinationFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DestinationFolderId,omitempty" json:"DestinationFolderId,omitempty"`

	Categories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Categories,omitempty" json:"Categories,omitempty"`

	EnableAlwaysDelete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnableAlwaysDelete,omitempty" json:"EnableAlwaysDelete,omitempty"`

	IsRead bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRead,omitempty" json:"IsRead,omitempty"`

	DeleteType *DisposalType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteType,omitempty" json:"DeleteType,omitempty"`

	RetentionPolicyType *RetentionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyType,omitempty" json:"RetentionPolicyType,omitempty"`

	RetentionPolicyTagId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyTagId,omitempty" json:"RetentionPolicyTagId,omitempty"`

	Flag *FlagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Flag,omitempty" json:"Flag,omitempty"`

	SuppressReadReceipts bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type NonEmptyArrayOfApplyConversationActionType struct {
	ConversationAction []*ConversationActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationAction,omitempty" json:"ConversationAction,omitempty"`
}

type ConversationType struct {
	ConversationId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationId,omitempty" json:"ConversationId,omitempty"`

	ConversationTopic string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	UniqueRecipients *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueRecipients,omitempty" json:"UniqueRecipients,omitempty"`

	GlobalUniqueRecipients *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalUniqueRecipients,omitempty" json:"GlobalUniqueRecipients,omitempty"`

	UniqueUnreadSenders *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueUnreadSenders,omitempty" json:"UniqueUnreadSenders,omitempty"`

	GlobalUniqueUnreadSenders *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalUniqueUnreadSenders,omitempty" json:"GlobalUniqueUnreadSenders,omitempty"`

	UniqueSenders *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueSenders,omitempty" json:"UniqueSenders,omitempty"`

	GlobalUniqueSenders *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalUniqueSenders,omitempty" json:"GlobalUniqueSenders,omitempty"`

	LastDeliveryTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastDeliveryTime,omitempty" json:"LastDeliveryTime,omitempty"`

	GlobalLastDeliveryTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalLastDeliveryTime,omitempty" json:"GlobalLastDeliveryTime,omitempty"`

	Categories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Categories,omitempty" json:"Categories,omitempty"`

	GlobalCategories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalCategories,omitempty" json:"GlobalCategories,omitempty"`

	FlagStatus *FlagStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlagStatus,omitempty" json:"FlagStatus,omitempty"`

	GlobalFlagStatus *FlagStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalFlagStatus,omitempty" json:"GlobalFlagStatus,omitempty"`

	HasAttachments bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	GlobalHasAttachments bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalHasAttachments,omitempty" json:"GlobalHasAttachments,omitempty"`

	MessageCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageCount,omitempty" json:"MessageCount,omitempty"`

	GlobalMessageCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalMessageCount,omitempty" json:"GlobalMessageCount,omitempty"`

	UnreadCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	GlobalUnreadCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalUnreadCount,omitempty" json:"GlobalUnreadCount,omitempty"`

	Size int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`

	GlobalSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalSize,omitempty" json:"GlobalSize,omitempty"`

	ItemClasses *ArrayOfItemClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	GlobalItemClasses *ArrayOfItemClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalItemClasses,omitempty" json:"GlobalItemClasses,omitempty"`

	Importance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Importance,omitempty" json:"Importance,omitempty"`

	GlobalImportance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalImportance,omitempty" json:"GlobalImportance,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemIds,omitempty" json:"ItemIds,omitempty"`

	GlobalItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalItemIds,omitempty" json:"GlobalItemIds,omitempty"`

	LastModifiedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	InstanceKey []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	Preview string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Preview,omitempty" json:"Preview,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	IconIndex *IconIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IconIndex,omitempty" json:"IconIndex,omitempty"`

	GlobalIconIndex *IconIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalIconIndex,omitempty" json:"GlobalIconIndex,omitempty"`

	DraftItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DraftItemIds,omitempty" json:"DraftItemIds,omitempty"`

	HasIrm bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasIrm,omitempty" json:"HasIrm,omitempty"`

	GlobalHasIrm bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalHasIrm,omitempty" json:"GlobalHasIrm,omitempty"`

	InferenceClassification *InferenceClassificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InferenceClassification,omitempty" json:"InferenceClassification,omitempty"`

	SortKey int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types SortKey,omitempty" json:"SortKey,omitempty"`

	MentionedMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionedMe,omitempty" json:"MentionedMe,omitempty"`

	GlobalMentionedMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalMentionedMe,omitempty" json:"GlobalMentionedMe,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	From *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types From,omitempty" json:"From,omitempty"`

	AtAllMention bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AtAllMention,omitempty" json:"AtAllMention,omitempty"`

	GlobalAtAllMention bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalAtAllMention,omitempty" json:"GlobalAtAllMention,omitempty"`
}

type HighlightTermType struct {
	Scope string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Scope,omitempty" json:"Scope,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfConversationsType struct {
	Conversation *ConversationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationRequestType struct {
	ConversationId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types SyncState,omitempty" json:"SyncState,omitempty"`
}

type ArrayOfConversationRequestsType struct {
	Conversation *ConversationRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation,omitempty" json:"Conversation,omitempty"`
}

type ConversationNodeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationNode"`

	InternetMessageId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	ParentInternetMessageId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentInternetMessageId,omitempty" json:"ParentInternetMessageId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`
}

type ArrayOfConversationNodesType struct {
	ConversationNode *ConversationNodeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationNode,omitempty" json:"ConversationNode,omitempty"`
}

type ConversationResponseType struct {
	ConversationId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationId,omitempty" json:"ConversationId,omitempty"`

	SyncState []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types SyncState,omitempty" json:"SyncState,omitempty"`

	ConversationNodes *ArrayOfConversationNodesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationNodes,omitempty" json:"ConversationNodes,omitempty"`

	CanDelete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanDelete,omitempty" json:"CanDelete,omitempty"`
}

type ArrayOfHighlightTermsType struct {
	Term []*HighlightTermType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Term,omitempty" json:"Term,omitempty"`
}

type PersonaAttributionType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	SourceId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceId,omitempty" json:"SourceId,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsWritable bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsWritable,omitempty" json:"IsWritable,omitempty"`

	IsQuickContact bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsQuickContact,omitempty" json:"IsQuickContact,omitempty"`

	IsHidden bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsHidden,omitempty" json:"IsHidden,omitempty"`

	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`
}

type ArrayOfPersonaAttributionsType struct {
	Attribution []*PersonaAttributionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfValueAttributionsType struct {
	Attribution []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attribution,omitempty" json:"Attribution,omitempty"`
}

type ArrayOfStringValueType struct {
	Value []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type StringAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringAttributedValue"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type BodyContentType struct {
	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	BodyType *BodyTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyType,omitempty" json:"BodyType,omitempty"`
}

type BodyContentAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyContentAttributedValue"`

	Value *BodyContentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type StringArrayAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringArrayAttributedValue"`

	Values *ArrayOfStringValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Values,omitempty" json:"Values,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type EmailAddressAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressAttributedValue"`

	Value *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPhoneNumberType struct {
	Number string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Number,omitempty" json:"Number,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`
}

type PhoneNumberAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumberAttributedValue"`

	Value *PersonaPhoneNumberType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type PersonaPostalAddressType struct {
	Street string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Street,omitempty" json:"Street,omitempty"`

	City string `xml:"http://schemas.microsoft.com/exchange/services/2006/types City,omitempty" json:"City,omitempty"`

	State string `xml:"http://schemas.microsoft.com/exchange/services/2006/types State,omitempty" json:"State,omitempty"`

	Country string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Country,omitempty" json:"Country,omitempty"`

	PostalCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalCode,omitempty" json:"PostalCode,omitempty"`

	PostOfficeBox string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostOfficeBox,omitempty" json:"PostOfficeBox,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	Latitude float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Latitude,omitempty" json:"Latitude,omitempty"`

	Longitude float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Longitude,omitempty" json:"Longitude,omitempty"`

	Accuracy float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Accuracy,omitempty" json:"Accuracy,omitempty"`

	Altitude float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Altitude,omitempty" json:"Altitude,omitempty"`

	AltitudeAccuracy float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AltitudeAccuracy,omitempty" json:"AltitudeAccuracy,omitempty"`

	FormattedAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FormattedAddress,omitempty" json:"FormattedAddress,omitempty"`

	LocationUri string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationUri,omitempty" json:"LocationUri,omitempty"`

	LocationSource *LocationSourceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationSource,omitempty" json:"LocationSource,omitempty"`
}

type PostalAddressAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalAddressAttributedValue"`

	Value *PersonaPostalAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type ExtendedPropertyAttributedValueType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedPropertyAttributedValue"`

	Value *ExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Attributions *ArrayOfValueAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`
}

type ArrayOfStringAttributedValuesType struct {
	StringAttributedValue []*StringAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringAttributedValue,omitempty" json:"StringAttributedValue,omitempty"`
}

type ArrayOfStringArrayAttributedValuesType struct {
	StringArrayAttributedValue []*StringArrayAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StringArrayAttributedValue,omitempty" json:"StringArrayAttributedValue,omitempty"`
}

type ArrayOfBodyContentAttributedValuesType struct {
	BodyContentAttributedValue []*BodyContentAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BodyContentAttributedValue,omitempty" json:"BodyContentAttributedValue,omitempty"`
}

type ArrayOfEmailAddressAttributedValuesType struct {
	EmailAddressAttributedValue []*EmailAddressAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddressAttributedValue,omitempty" json:"EmailAddressAttributedValue,omitempty"`
}

type ArrayOfPhoneNumberAttributedValuesType struct {
	PhoneNumberAttributedValue []*PhoneNumberAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumberAttributedValue,omitempty" json:"PhoneNumberAttributedValue,omitempty"`
}

type ArrayOfPostalAddressAttributedValuesType struct {
	PostalAddressAttributedValue []*PostalAddressAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalAddressAttributedValue,omitempty" json:"PostalAddressAttributedValue,omitempty"`
}

type ArrayOfExtendedPropertyAttributedValueType struct {
	ExtendedPropertyAttributedValue []*ExtendedPropertyAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedPropertyAttributedValue,omitempty" json:"ExtendedPropertyAttributedValue,omitempty"`
}

type InsightFiltersType struct {
	Count int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Count,omitempty" json:"Count,omitempty"`

	Types *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Types,omitempty" json:"Types,omitempty"`

	KeyInsightsOnly bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types KeyInsightsOnly,omitempty" json:"KeyInsightsOnly,omitempty"`
}

type InsightValue struct {
	InsightSource string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InsightSource,omitempty" json:"InsightSource,omitempty"`

	UpdatedUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types UpdatedUtcTicks,omitempty" json:"UpdatedUtcTicks,omitempty"`
}

type StringInsightValue struct {
	*InsightValue

	Data string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Data,omitempty" json:"Data,omitempty"`
}

type DelveDocument struct {
	*InsightValue

	Rank float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rank,omitempty" json:"Rank,omitempty"`

	Author string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Author,omitempty" json:"Author,omitempty"`

	Created string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Created,omitempty" json:"Created,omitempty"`

	LastModifiedTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedTime,omitempty" json:"LastModifiedTime,omitempty"`

	DefaultEncodingURL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DefaultEncodingURL,omitempty" json:"DefaultEncodingURL,omitempty"`

	FileType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileType,omitempty" json:"FileType,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	DocumentId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DocumentId,omitempty" json:"DocumentId,omitempty"`

	PreviewURL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreviewURL,omitempty" json:"PreviewURL,omitempty"`

	LastEditor string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastEditor,omitempty" json:"LastEditor,omitempty"`
}

type ProfileInsightValue struct {
	*InsightValue

	FullName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FullName,omitempty" json:"FullName,omitempty"`

	FirstName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstName,omitempty" json:"FirstName,omitempty"`

	LastName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastName,omitempty" json:"LastName,omitempty"`

	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Avatar string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Avatar,omitempty" json:"Avatar,omitempty"`

	JoinedUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types JoinedUtcTicks,omitempty" json:"JoinedUtcTicks,omitempty"`

	ProfilePicture *UserProfilePicture `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProfilePicture,omitempty" json:"ProfilePicture,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`
}

type OutOfOfficeInsightValue struct {
	*InsightValue

	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`

	Message string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	Culture string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Culture,omitempty" json:"Culture,omitempty"`
}

type JobInsightValue struct {
	*InsightValue

	Company string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Company,omitempty" json:"Company,omitempty"`

	CompanyDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyDescription,omitempty" json:"CompanyDescription,omitempty"`

	CompanyTicker string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyTicker,omitempty" json:"CompanyTicker,omitempty"`

	CompanyLogoUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyLogoUrl,omitempty" json:"CompanyLogoUrl,omitempty"`

	CompanyWebsiteUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyWebsiteUrl,omitempty" json:"CompanyWebsiteUrl,omitempty"`

	CompanyLinkedInUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyLinkedInUrl,omitempty" json:"CompanyLinkedInUrl,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	StartUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type CompanyInsightValue struct {
	*InsightValue

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	SatoriId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SatoriId,omitempty" json:"SatoriId,omitempty"`

	Description string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Description,omitempty" json:"Description,omitempty"`

	DescriptionAttribution string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DescriptionAttribution,omitempty" json:"DescriptionAttribution,omitempty"`

	ImageUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImageUrl,omitempty" json:"ImageUrl,omitempty"`

	ImageUrlAttribution string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImageUrlAttribution,omitempty" json:"ImageUrlAttribution,omitempty"`

	YearFound string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YearFound,omitempty" json:"YearFound,omitempty"`

	FinanceSymbol string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FinanceSymbol,omitempty" json:"FinanceSymbol,omitempty"`

	WebsiteUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WebsiteUrl,omitempty" json:"WebsiteUrl,omitempty"`
}

type UserProfilePicture struct {
	*InsightValue

	Blob string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Blob,omitempty" json:"Blob,omitempty"`

	PhotoSize string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhotoSize,omitempty" json:"PhotoSize,omitempty"`

	Url string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Url,omitempty" json:"Url,omitempty"`

	ImageType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImageType,omitempty" json:"ImageType,omitempty"`
}

type EducationInsightValue struct {
	*InsightValue

	Institute string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Institute,omitempty" json:"Institute,omitempty"`

	Degree string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Degree,omitempty" json:"Degree,omitempty"`

	StartUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`
}

type SkillInsightValue struct {
	*InsightValue

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Strength int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Strength,omitempty" json:"Strength,omitempty"`
}

type MeetingInsightValue struct {
	*InsightValue

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	StartUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartUtcTicks,omitempty" json:"StartUtcTicks,omitempty"`

	EndUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndUtcTicks,omitempty" json:"EndUtcTicks,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	Organizer *ProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Organizer,omitempty" json:"Organizer,omitempty"`

	Attendees *ArrayOfProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attendees,omitempty" json:"Attendees,omitempty"`
}

type EmailInsightValue struct {
	*InsightValue

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	ThreadId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ThreadId,omitempty" json:"ThreadId,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	LastEmailDateUtcTicks int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastEmailDateUtcTicks,omitempty" json:"LastEmailDateUtcTicks,omitempty"`

	Body string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Body,omitempty" json:"Body,omitempty"`

	LastEmailSender *ProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastEmailSender,omitempty" json:"LastEmailSender,omitempty"`

	EmailsCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailsCount,omitempty" json:"EmailsCount,omitempty"`
}

type ArrayOfInsightValue struct {
	Item []*InsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfSkillInsightValue struct {
	Item []*SkillInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfProfileInsightValue struct {
	Item []*ProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfJobInsightValue struct {
	Item []*JobInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCompanyInsightValue struct {
	Item []*CompanyInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type InsightContent struct {
}

type SingleValueInsightContent struct {
	*InsightContent

	Item *InsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type MultiValueInsightContent struct {
	*InsightContent

	ItemList *ArrayOfInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemList,omitempty" json:"ItemList,omitempty"`
}

type Insight struct {
	InsightType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InsightType,omitempty" json:"InsightType,omitempty"`

	Rank float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rank,omitempty" json:"Rank,omitempty"`

	Content *InsightContent `xml:"http://schemas.microsoft.com/exchange/services/2006/types Content,omitempty" json:"Content,omitempty"`

	Text string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Text,omitempty" json:"Text,omitempty"`

	ItemList *ArrayOfInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemList,omitempty" json:"ItemList,omitempty"`

	RequiresToken bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequiresToken,omitempty" json:"RequiresToken,omitempty"`
}

type ComputedInsightValueProperty struct {
	Key string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfComputedInsightValueProperty struct {
	Property []*ComputedInsightValueProperty `xml:"http://schemas.microsoft.com/exchange/services/2006/types Property,omitempty" json:"Property,omitempty"`
}

type ComputedInsightValue struct {
	*InsightValue

	Properties *ArrayOfComputedInsightValueProperty `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfInsight struct {
	Insight []*Insight `xml:"http://schemas.microsoft.com/exchange/services/2006/types Insight,omitempty" json:"Insight,omitempty"`
}

type PersonResponseShapeType struct {
	BaseShape *DefaultShapeNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type PersonType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person"`

	FullName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FullName,omitempty" json:"FullName,omitempty"`

	GivenName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GivenName,omitempty" json:"GivenName,omitempty"`

	Surname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Surname,omitempty" json:"Surname,omitempty"`

	PhoneNumber string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	SMSNumber string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SMSNumber,omitempty" json:"SMSNumber,omitempty"`

	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Alias string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Alias,omitempty" json:"Alias,omitempty"`

	Department string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Department,omitempty" json:"Department,omitempty"`

	LinkedInProfileLink string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LinkedInProfileLink,omitempty" json:"LinkedInProfileLink,omitempty"`

	Skills *ArrayOfSkillInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Skills,omitempty" json:"Skills,omitempty"`

	ProfessionalBiography string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProfessionalBiography,omitempty" json:"ProfessionalBiography,omitempty"`

	ManagementChain *ArrayOfProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagementChain,omitempty" json:"ManagementChain,omitempty"`

	DirectReports *ArrayOfProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types DirectReports,omitempty" json:"DirectReports,omitempty"`

	Peers *ArrayOfProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types Peers,omitempty" json:"Peers,omitempty"`

	TeamSize string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TeamSize,omitempty" json:"TeamSize,omitempty"`

	CurrentJob *ArrayOfJobInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types CurrentJob,omitempty" json:"CurrentJob,omitempty"`

	Birthday string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Birthday,omitempty" json:"Birthday,omitempty"`

	Hometown string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Hometown,omitempty" json:"Hometown,omitempty"`

	CurrentLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CurrentLocation,omitempty" json:"CurrentLocation,omitempty"`

	CompanyProfile *ArrayOfCompanyInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyProfile,omitempty" json:"CompanyProfile,omitempty"`

	Office string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Office,omitempty" json:"Office,omitempty"`

	Headline string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Headline,omitempty" json:"Headline,omitempty"`

	MutualConnections *ArrayOfProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types MutualConnections,omitempty" json:"MutualConnections,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	MutualManager *ProfileInsightValue `xml:"http://schemas.microsoft.com/exchange/services/2006/types MutualManager,omitempty" json:"MutualManager,omitempty"`

	Insights *ArrayOfInsight `xml:"http://schemas.microsoft.com/exchange/services/2006/types Insights,omitempty" json:"Insights,omitempty"`

	UserProfilePicture *UserProfilePicture `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserProfilePicture,omitempty" json:"UserProfilePicture,omitempty"`
}

type ArrayOfPersonType struct {
	Person *PersonType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type PeopleTokenType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PeopleToken"`

	TokenSource *TokenSourceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenSource,omitempty" json:"TokenSource,omitempty"`

	ExpirationDateTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExpirationDateTime,omitempty" json:"ExpirationDateTime,omitempty"`

	TokenValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenValue,omitempty" json:"TokenValue,omitempty"`
}

type NonEmptyArrayOfPeopleTokenType struct {
	PeopleToken []*PeopleTokenType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PeopleToken,omitempty" json:"PeopleToken,omitempty"`
}

type PersonaType struct {
	PersonaId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonaId,omitempty" json:"PersonaId,omitempty"`

	PersonaType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonaType,omitempty" json:"PersonaType,omitempty"`

	PersonaObjectStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonaObjectStatus,omitempty" json:"PersonaObjectStatus,omitempty"`

	CreationTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreationTime,omitempty" json:"CreationTime,omitempty"`

	Bodies *ArrayOfBodyContentAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bodies,omitempty" json:"Bodies,omitempty"`

	DisplayNameFirstLastSortKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameFirstLastSortKey,omitempty" json:"DisplayNameFirstLastSortKey,omitempty"`

	DisplayNameLastFirstSortKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameLastFirstSortKey,omitempty" json:"DisplayNameLastFirstSortKey,omitempty"`

	CompanyNameSortKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyNameSortKey,omitempty" json:"CompanyNameSortKey,omitempty"`

	HomeCitySortKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomeCitySortKey,omitempty" json:"HomeCitySortKey,omitempty"`

	WorkCitySortKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkCitySortKey,omitempty" json:"WorkCitySortKey,omitempty"`

	DisplayNameFirstLastHeader string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameFirstLastHeader,omitempty" json:"DisplayNameFirstLastHeader,omitempty"`

	DisplayNameLastFirstHeader string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameLastFirstHeader,omitempty" json:"DisplayNameLastFirstHeader,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	DisplayNameFirstLast string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameFirstLast,omitempty" json:"DisplayNameFirstLast,omitempty"`

	DisplayNameLastFirst string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNameLastFirst,omitempty" json:"DisplayNameLastFirst,omitempty"`

	FileAs string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAsId,omitempty" json:"FileAsId,omitempty"`

	DisplayNamePrefix string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNamePrefix,omitempty" json:"DisplayNamePrefix,omitempty"`

	GivenName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GivenName,omitempty" json:"GivenName,omitempty"`

	MiddleName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MiddleName,omitempty" json:"MiddleName,omitempty"`

	Surname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Surname,omitempty" json:"Surname,omitempty"`

	Generation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Generation,omitempty" json:"Generation,omitempty"`

	Nickname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Nickname,omitempty" json:"Nickname,omitempty"`

	YomiCompanyName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiCompanyName,omitempty" json:"YomiCompanyName,omitempty"`

	YomiFirstName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiLastName,omitempty" json:"YomiLastName,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	Department string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Department,omitempty" json:"Department,omitempty"`

	CompanyName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyName,omitempty" json:"CompanyName,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	EmailAddress *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	EmailAddresses *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	PhoneNumber *PersonaPhoneNumberType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumber,omitempty" json:"PhoneNumber,omitempty"`

	ImAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddress,omitempty" json:"ImAddress,omitempty"`

	HomeCity string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomeCity,omitempty" json:"HomeCity,omitempty"`

	WorkCity string `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkCity,omitempty" json:"WorkCity,omitempty"`

	RelevanceScore int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types RelevanceScore,omitempty" json:"RelevanceScore,omitempty"`

	FolderIds *ArrayOfFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderIds,omitempty" json:"FolderIds,omitempty"`

	Attributions *ArrayOfPersonaAttributionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attributions,omitempty" json:"Attributions,omitempty"`

	DisplayNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNames,omitempty" json:"DisplayNames,omitempty"`

	FileAses *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAses,omitempty" json:"FileAses,omitempty"`

	FileAsIds *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAsIds,omitempty" json:"FileAsIds,omitempty"`

	DisplayNamePrefixes *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayNamePrefixes,omitempty" json:"DisplayNamePrefixes,omitempty"`

	GivenNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GivenNames,omitempty" json:"GivenNames,omitempty"`

	MiddleNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MiddleNames,omitempty" json:"MiddleNames,omitempty"`

	Surnames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Surnames,omitempty" json:"Surnames,omitempty"`

	Generations *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Generations,omitempty" json:"Generations,omitempty"`

	Nicknames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Nicknames,omitempty" json:"Nicknames,omitempty"`

	Initials *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Initials,omitempty" json:"Initials,omitempty"`

	YomiCompanyNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiCompanyNames,omitempty" json:"YomiCompanyNames,omitempty"`

	YomiFirstNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiFirstNames,omitempty" json:"YomiFirstNames,omitempty"`

	YomiLastNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiLastNames,omitempty" json:"YomiLastNames,omitempty"`

	BusinessPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessPhoneNumbers,omitempty" json:"BusinessPhoneNumbers,omitempty"`

	BusinessPhoneNumbers2 *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessPhoneNumbers2,omitempty" json:"BusinessPhoneNumbers2,omitempty"`

	HomePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomePhones,omitempty" json:"HomePhones,omitempty"`

	HomePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomePhones2,omitempty" json:"HomePhones2,omitempty"`

	MobilePhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MobilePhones,omitempty" json:"MobilePhones,omitempty"`

	MobilePhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MobilePhones2,omitempty" json:"MobilePhones2,omitempty"`

	AssistantPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssistantPhoneNumbers,omitempty" json:"AssistantPhoneNumbers,omitempty"`

	CallbackPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CallbackPhones,omitempty" json:"CallbackPhones,omitempty"`

	CarPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CarPhones,omitempty" json:"CarPhones,omitempty"`

	HomeFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomeFaxes,omitempty" json:"HomeFaxes,omitempty"`

	OrganizationMainPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OrganizationMainPhones,omitempty" json:"OrganizationMainPhones,omitempty"`

	OtherFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OtherFaxes,omitempty" json:"OtherFaxes,omitempty"`

	OtherTelephones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OtherTelephones,omitempty" json:"OtherTelephones,omitempty"`

	OtherPhones2 *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OtherPhones2,omitempty" json:"OtherPhones2,omitempty"`

	Pagers *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Pagers,omitempty" json:"Pagers,omitempty"`

	RadioPhones *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RadioPhones,omitempty" json:"RadioPhones,omitempty"`

	TelexNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TelexNumbers,omitempty" json:"TelexNumbers,omitempty"`

	TTYTDDPhoneNumbers *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TTYTDDPhoneNumbers,omitempty" json:"TTYTDDPhoneNumbers,omitempty"`

	WorkFaxes *ArrayOfPhoneNumberAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkFaxes,omitempty" json:"WorkFaxes,omitempty"`

	Emails1 *ArrayOfEmailAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Emails1,omitempty" json:"Emails1,omitempty"`

	Emails2 *ArrayOfEmailAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Emails2,omitempty" json:"Emails2,omitempty"`

	Emails3 *ArrayOfEmailAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Emails3,omitempty" json:"Emails3,omitempty"`

	BusinessHomePages *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessHomePages,omitempty" json:"BusinessHomePages,omitempty"`

	PersonalHomePages *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonalHomePages,omitempty" json:"PersonalHomePages,omitempty"`

	OfficeLocations *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OfficeLocations,omitempty" json:"OfficeLocations,omitempty"`

	ImAddresses *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	ImAddresses2 *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddresses2,omitempty" json:"ImAddresses2,omitempty"`

	ImAddresses3 *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddresses3,omitempty" json:"ImAddresses3,omitempty"`

	BusinessAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessAddresses,omitempty" json:"BusinessAddresses,omitempty"`

	HomeAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types HomeAddresses,omitempty" json:"HomeAddresses,omitempty"`

	OtherAddresses *ArrayOfPostalAddressAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OtherAddresses,omitempty" json:"OtherAddresses,omitempty"`

	Titles *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Titles,omitempty" json:"Titles,omitempty"`

	Departments *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Departments,omitempty" json:"Departments,omitempty"`

	CompanyNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyNames,omitempty" json:"CompanyNames,omitempty"`

	Managers *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Managers,omitempty" json:"Managers,omitempty"`

	AssistantNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssistantNames,omitempty" json:"AssistantNames,omitempty"`

	Professions *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Professions,omitempty" json:"Professions,omitempty"`

	SpouseNames *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SpouseNames,omitempty" json:"SpouseNames,omitempty"`

	Children *ArrayOfStringArrayAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Children,omitempty" json:"Children,omitempty"`

	Schools *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Schools,omitempty" json:"Schools,omitempty"`

	Hobbies *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Hobbies,omitempty" json:"Hobbies,omitempty"`

	WeddingAnniversaries *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WeddingAnniversaries,omitempty" json:"WeddingAnniversaries,omitempty"`

	Birthdays *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Birthdays,omitempty" json:"Birthdays,omitempty"`

	Locations *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Locations,omitempty" json:"Locations,omitempty"`

	InlineLinks *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InlineLinks,omitempty" json:"InlineLinks,omitempty"`

	ItemLinkIds *ArrayOfStringArrayAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemLinkIds,omitempty" json:"ItemLinkIds,omitempty"`

	HasActiveDeals string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasActiveDeals,omitempty" json:"HasActiveDeals,omitempty"`

	IsBusinessContact string `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsBusinessContact,omitempty" json:"IsBusinessContact,omitempty"`

	AttributedHasActiveDeals *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttributedHasActiveDeals,omitempty" json:"AttributedHasActiveDeals,omitempty"`

	AttributedIsBusinessContact *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttributedIsBusinessContact,omitempty" json:"AttributedIsBusinessContact,omitempty"`

	SourceMailboxGuids *ArrayOfStringAttributedValuesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceMailboxGuids,omitempty" json:"SourceMailboxGuids,omitempty"`

	LastContactedDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastContactedDate,omitempty" json:"LastContactedDate,omitempty"`

	ExtendedProperties *ArrayOfExtendedPropertyAttributedValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	ExternalDirectoryObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	MapiEntryId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiEntryId,omitempty" json:"MapiEntryId,omitempty"`

	MapiEmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiEmailAddress,omitempty" json:"MapiEmailAddress,omitempty"`

	MapiAddressType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiAddressType,omitempty" json:"MapiAddressType,omitempty"`

	MapiSearchKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiSearchKey,omitempty" json:"MapiSearchKey,omitempty"`

	MapiTransmittableDisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiTransmittableDisplayName,omitempty" json:"MapiTransmittableDisplayName,omitempty"`

	MapiSendRichInfo bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MapiSendRichInfo,omitempty" json:"MapiSendRichInfo,omitempty"`
}

type ArrayOfPeopleType struct {
	Persona *PersonaType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Persona,omitempty" json:"Persona,omitempty"`
}

type MailboxLocatorType struct {
	ExternalDirectoryObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalDirectoryObjectId,omitempty" json:"ExternalDirectoryObjectId,omitempty"`

	LegacyDn string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LegacyDn,omitempty" json:"LegacyDn,omitempty"`
}

type GroupLocatorType struct {
	*MailboxLocatorType
}

type UserLocatorType struct {
	*MailboxLocatorType
}

type ArrayOfItemsType struct {
	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
}

type ArrayOfCalendarItemsType struct {
	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`
}

type InstantSearchPayloadType struct {
	SearchSessionId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchRequestId int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	ResultType *InstantSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResultType,omitempty" json:"ResultType,omitempty"`

	Items *ArrayOfItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`

	Conversations *ArrayOfConversationsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversations,omitempty" json:"Conversations,omitempty"`

	CalendarItems *ArrayOfCalendarItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItems,omitempty" json:"CalendarItems,omitempty"`
}

type ArrayOfStringsType struct {
	String []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types String,omitempty" json:"String,omitempty"`
}

type ArrayOfRealItemsType struct {
	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type NonEmptyArrayOfAllItemsType struct {
	Item *ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`

	Message *MessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	SharingMessage *SharingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessage,omitempty" json:"SharingMessage,omitempty"`

	CalendarItem *CalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItem,omitempty" json:"CalendarItem,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`

	DistributionList *DistributionListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistributionList,omitempty" json:"DistributionList,omitempty"`

	MeetingMessage *MeetingMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingMessage,omitempty" json:"MeetingMessage,omitempty"`

	MeetingRequest *MeetingRequestMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequest,omitempty" json:"MeetingRequest,omitempty"`

	MeetingResponse *MeetingResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingResponse,omitempty" json:"MeetingResponse,omitempty"`

	MeetingCancellation *MeetingCancellationMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingCancellation,omitempty" json:"MeetingCancellation,omitempty"`

	Task *TaskType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Task,omitempty" json:"Task,omitempty"`

	PostItem *PostItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostItem,omitempty" json:"PostItem,omitempty"`

	ReplyToItem *ReplyToItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyToItem,omitempty" json:"ReplyToItem,omitempty"`

	ForwardItem *ForwardItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardItem,omitempty" json:"ForwardItem,omitempty"`

	ReplyAllToItem *ReplyAllToItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyAllToItem,omitempty" json:"ReplyAllToItem,omitempty"`

	AcceptItem *AcceptItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptItem,omitempty" json:"AcceptItem,omitempty"`

	TentativelyAcceptItem *TentativelyAcceptItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TentativelyAcceptItem,omitempty" json:"TentativelyAcceptItem,omitempty"`

	DeclineItem *DeclineItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineItem,omitempty" json:"DeclineItem,omitempty"`

	CancelCalendarItem *CancelCalendarItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CancelCalendarItem,omitempty" json:"CancelCalendarItem,omitempty"`

	RemoveItem *RemoveItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RemoveItem,omitempty" json:"RemoveItem,omitempty"`

	SuppressReadReceipt *SuppressReadReceiptType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuppressReadReceipt,omitempty" json:"SuppressReadReceipt,omitempty"`

	PostReplyItem *PostReplyItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostReplyItem,omitempty" json:"PostReplyItem,omitempty"`

	AcceptSharingInvitation *AcceptSharingInvitationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AcceptSharingInvitation,omitempty" json:"AcceptSharingInvitation,omitempty"`

	RoleMember *RoleMemberItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoleMember,omitempty" json:"RoleMember,omitempty"`

	Network *NetworkItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Network,omitempty" json:"Network,omitempty"`

	Person *AbchPersonItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Person,omitempty" json:"Person,omitempty"`
}

type MeetingRegistrationResponseObjectType struct {
	*WellKnownResponseObjectType

	ProposedStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type AcceptItemType struct {
	*MeetingRegistrationResponseObjectType
}

type TentativelyAcceptItemType struct {
	*MeetingRegistrationResponseObjectType
}

type DeclineItemType struct {
	*MeetingRegistrationResponseObjectType
}

type ProposeNewTimeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposeNewTime"`

	*ResponseObjectType
}

type RemoveItemType struct {
	*ResponseObjectType
}

type AddItemToMyCalendarType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AddItemToMyCalendar"`

	*ResponseObjectType
}

type PostReplyItemBaseType struct {
}

type PostReplyItemType struct {
	*PostReplyItemBaseType

	NewBodyContent *BodyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NewBodyContent,omitempty" json:"NewBodyContent,omitempty"`
}

type MimeContentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MimeContent"`

	Value string `xml:",chardata" json:"-,"`

	CharacterSet string `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MimeContentUTF8Type struct {
	Value string `xml:",chardata" json:"-,"`

	CharacterSet string `xml:"CharacterSet,attr,omitempty" json:"CharacterSet,omitempty"`
}

type MessageType struct {
	*ItemType

	Sender *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	IsReadReceiptRequested bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsReadReceiptRequested,omitempty" json:"IsReadReceiptRequested,omitempty"`

	IsDeliveryReceiptRequested bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDeliveryReceiptRequested,omitempty" json:"IsDeliveryReceiptRequested,omitempty"`

	ConversationIndex []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types From,omitempty" json:"From,omitempty"`

	InternetMessageId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRead,omitempty" json:"IsRead,omitempty"`

	IsResponseRequested bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	References string `xml:"http://schemas.microsoft.com/exchange/services/2006/types References,omitempty" json:"References,omitempty"`

	ReplyTo *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyTo,omitempty" json:"ReplyTo,omitempty"`

	ReceivedBy *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReceivedBy,omitempty" json:"ReceivedBy,omitempty"`

	ReceivedRepresenting *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReceivedRepresenting,omitempty" json:"ReceivedRepresenting,omitempty"`

	ApprovalRequestData *ApprovalRequestDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalRequestData,omitempty" json:"ApprovalRequestData,omitempty"`

	VotingInformation *VotingInformationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingInformation,omitempty" json:"VotingInformation,omitempty"`

	ReminderMessageData *ReminderMessageDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderMessageData,omitempty" json:"ReminderMessageData,omitempty"`

	MessageSafety *MessageSafetyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageSafety,omitempty" json:"MessageSafety,omitempty"`

	SenderSMTPAddress *SmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderSMTPAddress,omitempty" json:"SenderSMTPAddress,omitempty"`

	MailboxGuids struct {
		MailboxGuid []*GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`
	} `MailboxGuids,omitempty" json:"MailboxGuids,omitempty"`

	PublishedCalendarItemIcs string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PublishedCalendarItemIcs,omitempty" json:"PublishedCalendarItemIcs,omitempty"`

	PublishedCalendarItemName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PublishedCalendarItemName,omitempty" json:"PublishedCalendarItemName,omitempty"`
}

type TaskType struct {
	*ItemType

	ActualWork int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActualWork,omitempty" json:"ActualWork,omitempty"`

	AssignedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssignedTime,omitempty" json:"AssignedTime,omitempty"`

	BillingInformation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types BillingInformation,omitempty" json:"BillingInformation,omitempty"`

	ChangeCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeCount,omitempty" json:"ChangeCount,omitempty"`

	Companies *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Companies,omitempty" json:"Companies,omitempty"`

	CompleteDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompleteDate,omitempty" json:"CompleteDate,omitempty"`

	Contacts *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contacts,omitempty" json:"Contacts,omitempty"`

	DelegationState *TaskDelegateStateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegationState,omitempty" json:"DelegationState,omitempty"`

	Delegator string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delegator,omitempty" json:"Delegator,omitempty"`

	DueDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DueDate,omitempty" json:"DueDate,omitempty"`

	IsAssignmentEditable int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAssignmentEditable,omitempty" json:"IsAssignmentEditable,omitempty"`

	IsComplete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsComplete,omitempty" json:"IsComplete,omitempty"`

	IsRecurring bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsTeamTask bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsTeamTask,omitempty" json:"IsTeamTask,omitempty"`

	Mileage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mileage,omitempty" json:"Mileage,omitempty"`

	Owner string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Owner,omitempty" json:"Owner,omitempty"`

	PercentComplete float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PercentComplete,omitempty" json:"PercentComplete,omitempty"`

	Recurrence *TaskRecurrenceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence,omitempty" json:"Recurrence,omitempty"`

	StartDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDate,omitempty" json:"StartDate,omitempty"`

	Status *TaskStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Status,omitempty" json:"Status,omitempty"`

	StatusDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StatusDescription,omitempty" json:"StatusDescription,omitempty"`

	TotalWork int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TotalWork,omitempty" json:"TotalWork,omitempty"`
}

type PostItemType struct {
	*ItemType

	ConversationIndex []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationIndex,omitempty" json:"ConversationIndex,omitempty"`

	ConversationTopic string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationTopic,omitempty" json:"ConversationTopic,omitempty"`

	From *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types From,omitempty" json:"From,omitempty"`

	InternetMessageId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternetMessageId,omitempty" json:"InternetMessageId,omitempty"`

	IsRead bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRead,omitempty" json:"IsRead,omitempty"`

	PostedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostedTime,omitempty" json:"PostedTime,omitempty"`

	References string `xml:"http://schemas.microsoft.com/exchange/services/2006/types References,omitempty" json:"References,omitempty"`

	Sender *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`
}

type SharingMessageType struct {
	*MessageType

	SharingMessageAction *SharingMessageActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`

	SharingMessageActions *ArrayOfSharingMessageActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessageActions,omitempty" json:"SharingMessageActions,omitempty"`
}

type ArrayOfSharingMessageActionType struct {
	SharingMessageAction *SharingMessageActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharingMessageAction,omitempty" json:"SharingMessageAction,omitempty"`
}

type SharingMessageActionType struct {
	Importance *SharingActionImportance `xml:"http://schemas.microsoft.com/exchange/services/2006/types Importance,omitempty" json:"Importance,omitempty"`

	ActionType *SharingActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActionType,omitempty" json:"ActionType,omitempty"`

	Action *SharingAction `xml:"http://schemas.microsoft.com/exchange/services/2006/types Action,omitempty" json:"Action,omitempty"`
}

type BasePagingType struct {
	MaxEntriesReturned int32 `xml:"MaxEntriesReturned,attr,omitempty" json:"MaxEntriesReturned,omitempty"`
}

type IndexedPageViewType struct {
	*BasePagingType

	Offset int32 `xml:"Offset,attr,omitempty" json:"Offset,omitempty"`

	BasePoint *IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type FractionalPageViewType struct {
	*BasePagingType

	Numerator int32 `xml:"Numerator,attr,omitempty" json:"Numerator,omitempty"`

	Denominator int32 `xml:"Denominator,attr,omitempty" json:"Denominator,omitempty"`
}

type SeekToConditionPageViewType struct {
	*BasePagingType

	Condition *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Condition,omitempty" json:"Condition,omitempty"`

	BasePoint *IndexBasePointType `xml:"BasePoint,attr,omitempty" json:"BasePoint,omitempty"`
}

type CalendarViewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarView"`

	*BasePagingType

	StartDate xsd.DateTime `xml:"StartDate,attr,omitempty" json:"StartDate,omitempty"`

	EndDate xsd.DateTime `xml:"EndDate,attr,omitempty" json:"EndDate,omitempty"`
}

type ContactsViewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsView"`

	*BasePagingType

	InitialName string `xml:"InitialName,attr,omitempty" json:"InitialName,omitempty"`

	FinalName string `xml:"FinalName,attr,omitempty" json:"FinalName,omitempty"`
}

type ResolutionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Resolution"`

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	Contact *ContactItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Contact,omitempty" json:"Contact,omitempty"`
}

type ArrayOfResolutionType struct {
	Resolution *ResolutionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Resolution,omitempty" json:"Resolution,omitempty"`
}

type ArrayOfDLExpansionType struct {
	Mailbox []*EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type NonEmptyArrayOfTimeZoneIdType struct {
	Id []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`
}

type ArrayOfTimeZoneDefinitionType struct {
	TimeZoneDefinition *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type OnlineMeetingSettingsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OnlineMeetingSettings"`

	LobbyBypass *LobbyBypassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LobbyBypass,omitempty" json:"LobbyBypass,omitempty"`

	AccessLevel *OnlineMeetingAccessLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AccessLevel,omitempty" json:"AccessLevel,omitempty"`

	Presenters *PresentersType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Presenters,omitempty" json:"Presenters,omitempty"`
}

type AttendeeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attendee"`

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	ResponseType *ResponseTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseType,omitempty" json:"ResponseType,omitempty"`

	LastResponseTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastResponseTime,omitempty" json:"LastResponseTime,omitempty"`

	ProposedStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`
}

type NonEmptyArrayOfAttendeesType struct {
	Attendee []*AttendeeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Attendee,omitempty" json:"Attendee,omitempty"`
}

type OccurrenceItemIdType struct {
	*BaseItemIdType

	RecurringMasterId *DerivedItemIdType `xml:"RecurringMasterId,attr,omitempty" json:"RecurringMasterId,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`

	InstanceIndex int32 `xml:"InstanceIndex,attr,omitempty" json:"InstanceIndex,omitempty"`
}

type RecurringMasterItemIdType struct {
	*BaseItemIdType

	OccurrenceId *DerivedItemIdType `xml:"OccurrenceId,attr,omitempty" json:"OccurrenceId,omitempty"`

	ChangeKey string `xml:"ChangeKey,attr,omitempty" json:"ChangeKey,omitempty"`
}

type RecurringMasterItemIdRangesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringMasterItemIdRanges"`

	*ItemIdType

	Ranges *ArrayOfOccurrenceRangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Ranges,omitempty" json:"Ranges,omitempty"`
}

type ArrayOfOccurrenceRangesType struct {
	Range []*OccurrencesRangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Range,omitempty" json:"Range,omitempty"`
}

type OccurrencesRangeType struct {
	Start xsd.DateTime `xml:"Start,attr,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"End,attr,omitempty" json:"End,omitempty"`

	Count int32 `xml:"Count,attr,omitempty" json:"Count,omitempty"`

	CompareOriginalStartTime bool `xml:"CompareOriginalStartTime,attr,omitempty" json:"CompareOriginalStartTime,omitempty"`
}

type RecurrencePatternBaseType struct {
}

type IntervalRecurrencePatternBaseType struct {
	*RecurrencePatternBaseType

	Interval int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Interval,omitempty" json:"Interval,omitempty"`
}

type RegeneratingPatternBaseType struct {
	*IntervalRecurrencePatternBaseType
}

type DailyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type WeeklyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type MonthlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type YearlyRegeneratingPatternType struct {
	*RegeneratingPatternBaseType
}

type RelativeYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`

	Month *MonthNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Month,omitempty" json:"Month,omitempty"`
}

type AbsoluteYearlyRecurrencePatternType struct {
	*RecurrencePatternBaseType

	DayOfMonth int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`

	Month *MonthNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Month,omitempty" json:"Month,omitempty"`
}

type RelativeMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DayOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	DayOfWeekIndex *DayOfWeekIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfWeekIndex,omitempty" json:"DayOfWeekIndex,omitempty"`
}

type AbsoluteMonthlyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DayOfMonth int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfMonth,omitempty" json:"DayOfMonth,omitempty"`
}

type WeeklyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType

	DaysOfWeek *DaysOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DaysOfWeek,omitempty" json:"DaysOfWeek,omitempty"`

	FirstDayOfWeek *DayOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstDayOfWeek,omitempty" json:"FirstDayOfWeek,omitempty"`
}

type DailyRecurrencePatternType struct {
	*IntervalRecurrencePatternBaseType
}

type EnhancedLocationType struct {
	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	Annotation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Annotation,omitempty" json:"Annotation,omitempty"`

	PostalAddress *PersonaPostalAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalAddress,omitempty" json:"PostalAddress,omitempty"`
}

type TimeChangeType struct {
	Offset *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types Offset,omitempty" json:"Offset,omitempty"`

	Time xsd.Time `xml:"http://schemas.microsoft.com/exchange/services/2006/types Time,omitempty" json:"Time,omitempty"`

	TimeZoneName string `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneType struct {
	BaseOffset *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseOffset,omitempty" json:"BaseOffset,omitempty"`

	TimeZoneName string `xml:"TimeZoneName,attr,omitempty" json:"TimeZoneName,omitempty"`
}

type TimeZoneContextType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneContext"`

	TimeZoneDefinition *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZoneDefinition,omitempty" json:"TimeZoneDefinition,omitempty"`
}

type TransitionTargetType struct {
	Value string `xml:",chardata" json:"-,"`

	Kind *TransitionTargetKindType `xml:"Kind,attr,omitempty" json:"Kind,omitempty"`
}

type TransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Transition"`

	To *TransitionTargetType `xml:"http://schemas.microsoft.com/exchange/services/2006/types To,omitempty" json:"To,omitempty"`
}

type AbsoluteDateTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AbsoluteDateTransition"`

	*TransitionType

	DateTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTime,omitempty" json:"DateTime,omitempty"`
}

type RecurringTimeTransitionType struct {
	*TransitionType

	TimeOffset *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeOffset,omitempty" json:"TimeOffset,omitempty"`

	Month int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Month,omitempty" json:"Month,omitempty"`
}

type RecurringDateTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringDateTransition"`

	*RecurringTimeTransitionType

	Day int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Day,omitempty" json:"Day,omitempty"`
}

type RecurringDayTransitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurringDayTransition"`

	*RecurringTimeTransitionType

	DayOfWeek *DayOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Occurrence int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type TimeZoneDefinitionType struct {
	Periods *NonEmptyArrayOfPeriodsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Periods,omitempty" json:"Periods,omitempty"`

	TransitionsGroups *ArrayOfTransitionsGroupsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TransitionsGroups,omitempty" json:"TransitionsGroups,omitempty"`

	Transitions *ArrayOfTransitionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Transitions,omitempty" json:"Transitions,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type NonEmptyArrayOfPeriodsType struct {
	Period []*PeriodType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Period,omitempty" json:"Period,omitempty"`
}

type PeriodType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Period"`

	Bias *Duration `xml:"Bias,attr,omitempty" json:"Bias,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type ArrayOfTransitionsGroupsType struct {
	TransitionsGroup []*ArrayOfTransitionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TransitionsGroup,omitempty" json:"TransitionsGroup,omitempty"`
}

type ArrayOfTransitionsType struct {
	Transition []*Transition `xml:"Transition,omitempty" json:"Transition,omitempty"`

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type RecurrenceRangeBaseType struct {
	StartDate xsd.Date `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDate,omitempty" json:"StartDate,omitempty"`
}

type NoEndRecurrenceRangeType struct {
	*RecurrenceRangeBaseType
}

type EndDateRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	EndDate xsd.Date `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndDate,omitempty" json:"EndDate,omitempty"`
}

type NumberedRecurrenceRangeType struct {
	*RecurrenceRangeBaseType

	NumberOfOccurrences int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types NumberOfOccurrences,omitempty" json:"NumberOfOccurrences,omitempty"`
}

type RecurrenceType struct {
}

type TaskRecurrenceType struct {
}

type OccurrenceInfoType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalStart,omitempty" json:"OriginalStart,omitempty"`
}

type NonEmptyArrayOfOccurrenceInfoType struct {
	Occurrence []*OccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Occurrence,omitempty" json:"Occurrence,omitempty"`
}

type DeletedOccurrenceInfoType struct {
	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`
}

type NonEmptyArrayOfDeletedOccurrencesType struct {
	DeletedOccurrence []*DeletedOccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrence,omitempty" json:"DeletedOccurrence,omitempty"`
}

type CalendarItemType struct {
	*ItemType

	UID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UID,omitempty" json:"UID,omitempty"`

	RecurrenceId xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	When string `xml:"http://schemas.microsoft.com/exchange/services/2006/types When,omitempty" json:"When,omitempty"`

	IsMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	IsResponseRequested bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsResponseRequested,omitempty" json:"IsResponseRequested,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Resources,omitempty" json:"Resources,omitempty"`

	InboxReminders *ArrayOfInboxReminderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxReminders,omitempty" json:"InboxReminders,omitempty"`

	ConflictingMeetingCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Duration,omitempty" json:"Duration,omitempty"`

	TimeZone string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	StartWallClock xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	JoinOnlineMeetingUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types JoinOnlineMeetingUrl,omitempty" json:"JoinOnlineMeetingUrl,omitempty"`

	OnlineMeetingSettings *OnlineMeetingSettingsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OnlineMeetingSettings,omitempty" json:"OnlineMeetingSettings,omitempty"`

	IsOrganizer bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`

	CalendarActivityData *CalendarActivityDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarActivityData,omitempty" json:"CalendarActivityData,omitempty"`

	DoNotForwardMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingMessageType struct {
	*MessageType

	AssociatedCalendarItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`

	IsDelegated bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDelegated,omitempty" json:"IsDelegated,omitempty"`

	IsOutOfDate bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOutOfDate,omitempty" json:"IsOutOfDate,omitempty"`

	HasBeenProcessed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasBeenProcessed,omitempty" json:"HasBeenProcessed,omitempty"`

	ResponseType *ResponseTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseType,omitempty" json:"ResponseType,omitempty"`

	UID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UID,omitempty" json:"UID,omitempty"`

	RecurrenceId xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecurrenceId,omitempty" json:"RecurrenceId,omitempty"`

	DateTimeStamp xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeStamp,omitempty" json:"DateTimeStamp,omitempty"`

	IsOrganizer bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOrganizer,omitempty" json:"IsOrganizer,omitempty"`
}

type ChangeHighlightsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeHighlights"`

	HasLocationChanged bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasLocationChanged,omitempty" json:"HasLocationChanged,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	HasStartTimeChanged bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasStartTimeChanged,omitempty" json:"HasStartTimeChanged,omitempty"`

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	HasEndTimeChanged bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasEndTimeChanged,omitempty" json:"HasEndTimeChanged,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`
}

type MeetingRequestMessageType struct {
	*MeetingMessageType

	MeetingRequestType *MeetingRequestTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequestType,omitempty" json:"MeetingRequestType,omitempty"`

	IntendedFreeBusyStatus *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IntendedFreeBusyStatus,omitempty" json:"IntendedFreeBusyStatus,omitempty"`

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`

	OriginalStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalStart,omitempty" json:"OriginalStart,omitempty"`

	IsAllDayEvent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAllDayEvent,omitempty" json:"IsAllDayEvent,omitempty"`

	LegacyFreeBusyStatus *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LegacyFreeBusyStatus,omitempty" json:"LegacyFreeBusyStatus,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	When string `xml:"http://schemas.microsoft.com/exchange/services/2006/types When,omitempty" json:"When,omitempty"`

	IsMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsCancelled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsCancelled,omitempty" json:"IsCancelled,omitempty"`

	IsRecurring bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	MeetingRequestWasSent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingRequestWasSent,omitempty" json:"MeetingRequestWasSent,omitempty"`

	CalendarItemType *CalendarItemTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	MyResponseType *ResponseTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MyResponseType,omitempty" json:"MyResponseType,omitempty"`

	Organizer *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Organizer,omitempty" json:"Organizer,omitempty"`

	RequiredAttendees *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequiredAttendees,omitempty" json:"RequiredAttendees,omitempty"`

	OptionalAttendees *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OptionalAttendees,omitempty" json:"OptionalAttendees,omitempty"`

	Resources *NonEmptyArrayOfAttendeesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Resources,omitempty" json:"Resources,omitempty"`

	ConflictingMeetingCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConflictingMeetingCount,omitempty" json:"ConflictingMeetingCount,omitempty"`

	AdjacentMeetingCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdjacentMeetingCount,omitempty" json:"AdjacentMeetingCount,omitempty"`

	ConflictingMeetings *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConflictingMeetings,omitempty" json:"ConflictingMeetings,omitempty"`

	AdjacentMeetings *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdjacentMeetings,omitempty" json:"AdjacentMeetings,omitempty"`

	Duration string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Duration,omitempty" json:"Duration,omitempty"`

	TimeZone string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZone,omitempty" json:"TimeZone,omitempty"`

	AppointmentReplyTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentReplyTime,omitempty" json:"AppointmentReplyTime,omitempty"`

	AppointmentSequenceNumber int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentSequenceNumber,omitempty" json:"AppointmentSequenceNumber,omitempty"`

	AppointmentState int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppointmentState,omitempty" json:"AppointmentState,omitempty"`

	Recurrence *RecurrenceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence,omitempty" json:"Recurrence,omitempty"`

	FirstOccurrence *OccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstOccurrence,omitempty" json:"FirstOccurrence,omitempty"`

	LastOccurrence *OccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastOccurrence,omitempty" json:"LastOccurrence,omitempty"`

	ModifiedOccurrences *NonEmptyArrayOfOccurrenceInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedOccurrences,omitempty" json:"ModifiedOccurrences,omitempty"`

	DeletedOccurrences *NonEmptyArrayOfDeletedOccurrencesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrences,omitempty" json:"DeletedOccurrences,omitempty"`

	MeetingTimeZone *TimeZoneType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeZone,omitempty" json:"MeetingTimeZone,omitempty"`

	StartTimeZone *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeZone,omitempty" json:"StartTimeZone,omitempty"`

	EndTimeZone *TimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeZone,omitempty" json:"EndTimeZone,omitempty"`

	ConferenceType int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConferenceType,omitempty" json:"ConferenceType,omitempty"`

	AllowNewTimeProposal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AllowNewTimeProposal,omitempty" json:"AllowNewTimeProposal,omitempty"`

	IsOnlineMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOnlineMeeting,omitempty" json:"IsOnlineMeeting,omitempty"`

	MeetingWorkspaceUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingWorkspaceUrl,omitempty" json:"MeetingWorkspaceUrl,omitempty"`

	NetShowUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types NetShowUrl,omitempty" json:"NetShowUrl,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	ChangeHighlights *ChangeHighlightsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeHighlights,omitempty" json:"ChangeHighlights,omitempty"`

	StartWallClock xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartWallClock,omitempty" json:"StartWallClock,omitempty"`

	EndWallClock xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndWallClock,omitempty" json:"EndWallClock,omitempty"`

	StartTimeZoneId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeZoneId,omitempty" json:"StartTimeZoneId,omitempty"`

	EndTimeZoneId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeZoneId,omitempty" json:"EndTimeZoneId,omitempty"`

	DoNotForwardMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type MeetingResponseMessageType struct {
	*MeetingMessageType

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	ProposedStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedStart,omitempty" json:"ProposedStart,omitempty"`

	ProposedEnd xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProposedEnd,omitempty" json:"ProposedEnd,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`
}

type MeetingCancellationMessageType struct {
	*MeetingMessageType

	Start xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Start,omitempty" json:"Start,omitempty"`

	End xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types End,omitempty" json:"End,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	Recurrence *RecurrenceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recurrence,omitempty" json:"Recurrence,omitempty"`

	CalendarItemType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarItemType,omitempty" json:"CalendarItemType,omitempty"`

	EnhancedLocation *EnhancedLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnhancedLocation,omitempty" json:"EnhancedLocation,omitempty"`

	DoNotForwardMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DoNotForwardMeeting,omitempty" json:"DoNotForwardMeeting,omitempty"`
}

type CompleteNameType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompleteName"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	FirstName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstName,omitempty" json:"FirstName,omitempty"`

	MiddleName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MiddleName,omitempty" json:"MiddleName,omitempty"`

	LastName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastName,omitempty" json:"LastName,omitempty"`

	Suffix string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Suffix,omitempty" json:"Suffix,omitempty"`

	Initials string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Initials,omitempty" json:"Initials,omitempty"`

	FullName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FullName,omitempty" json:"FullName,omitempty"`

	Nickname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Nickname,omitempty" json:"Nickname,omitempty"`

	YomiFirstName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiFirstName,omitempty" json:"YomiFirstName,omitempty"`

	YomiLastName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiLastName,omitempty" json:"YomiLastName,omitempty"`
}

type ImAddressDictionaryEntryType struct {
	Value string `xml:",chardata" json:"-,"`

	Key *ImAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryEntryType struct {
	Type *ContactUrlKeyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Address string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`
}

type AbchEmailAddressDictionaryEntryType struct {
	Type *AbchEmailAddressTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	Address string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`

	IsMessengerEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Capabilities int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Capabilities,omitempty" json:"Capabilities,omitempty"`
}

type EmailAddressDictionaryEntryType struct {
	Value string `xml:",chardata" json:"-,"`

	Key *EmailAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	RoutingType string `xml:"RoutingType,attr,omitempty" json:"RoutingType,omitempty"`

	MailboxType *MailboxTypeType `xml:"MailboxType,attr,omitempty" json:"MailboxType,omitempty"`
}

type PhoneNumberDictionaryEntryType struct {
	Value string `xml:",chardata" json:"-,"`

	Key *PhoneNumberKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type PhysicalAddressDictionaryEntryType struct {
	Street string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Street,omitempty" json:"Street,omitempty"`

	City string `xml:"http://schemas.microsoft.com/exchange/services/2006/types City,omitempty" json:"City,omitempty"`

	State string `xml:"http://schemas.microsoft.com/exchange/services/2006/types State,omitempty" json:"State,omitempty"`

	CountryOrRegion string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CountryOrRegion,omitempty" json:"CountryOrRegion,omitempty"`

	PostalCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalCode,omitempty" json:"PostalCode,omitempty"`

	Key *PhysicalAddressKeyType `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type ContactUrlDictionaryType struct {
	Url []*ContactUrlDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Url,omitempty" json:"Url,omitempty"`
}

type AbchEmailAddressDictionaryType struct {
	Email []*AbchEmailAddressDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Email,omitempty" json:"Email,omitempty"`
}

type ImAddressDictionaryType struct {
	Entry []*ImAddressDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry,omitempty" json:"Entry,omitempty"`
}

type EmailAddressDictionaryType struct {
	Entry []*EmailAddressDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry,omitempty" json:"Entry,omitempty"`
}

type PhoneNumberDictionaryType struct {
	Entry []*PhoneNumberDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry,omitempty" json:"Entry,omitempty"`
}

type PhysicalAddressDictionaryType struct {
	Entry []*PhysicalAddressDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry,omitempty" json:"Entry,omitempty"`
}

type MembersListType struct {
	Member []*MemberType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Member,omitempty" json:"Member,omitempty"`
}

type MemberType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Member"`

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *MemberStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Status,omitempty" json:"Status,omitempty"`

	Key string `xml:"Key,attr,omitempty" json:"Key,omitempty"`
}

type RoleMemberItemType struct {
	*ItemType

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	Type *RoleMemberTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	MemberId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MemberId,omitempty" json:"MemberId,omitempty"`
}

type NetworkItemType struct {
	*ItemType

	DomainId int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types DomainId,omitempty" json:"DomainId,omitempty"`

	DomainTag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DomainTag,omitempty" json:"DomainTag,omitempty"`

	UserTileUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserTileUrl,omitempty" json:"UserTileUrl,omitempty"`

	ProfileUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProfileUrl,omitempty" json:"ProfileUrl,omitempty"`

	Settings int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Settings,omitempty" json:"Settings,omitempty"`

	IsDefault bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDefault,omitempty" json:"IsDefault,omitempty"`

	AutoLinkError string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AutoLinkError,omitempty" json:"AutoLinkError,omitempty"`

	AutoLinkSuccess string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AutoLinkSuccess,omitempty" json:"AutoLinkSuccess,omitempty"`

	UserEmail string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserEmail,omitempty" json:"UserEmail,omitempty"`

	ClientPublishSecret string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientPublishSecret,omitempty" json:"ClientPublishSecret,omitempty"`

	ClientToken string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientToken,omitempty" json:"ClientToken,omitempty"`

	ClientToken2 string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientToken2,omitempty" json:"ClientToken2,omitempty"`

	ContactSyncError string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactSyncError,omitempty" json:"ContactSyncError,omitempty"`

	ContactSyncSuccess string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactSyncSuccess,omitempty" json:"ContactSyncSuccess,omitempty"`

	ErrorOffers int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorOffers,omitempty" json:"ErrorOffers,omitempty"`

	FirstAuthErrorDates string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstAuthErrorDates,omitempty" json:"FirstAuthErrorDates,omitempty"`

	LastVersionSaved int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastVersionSaved,omitempty" json:"LastVersionSaved,omitempty"`

	LastWelcomeContact string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastWelcomeContact,omitempty" json:"LastWelcomeContact,omitempty"`

	Offers int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Offers,omitempty" json:"Offers,omitempty"`

	PsaLastChanged xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types PsaLastChanged,omitempty" json:"PsaLastChanged,omitempty"`

	RefreshToken2 string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefreshToken2,omitempty" json:"RefreshToken2,omitempty"`

	RefreshTokenExpiry2 string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefreshTokenExpiry2,omitempty" json:"RefreshTokenExpiry2,omitempty"`

	SessionHandle string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SessionHandle,omitempty" json:"SessionHandle,omitempty"`

	RejectedOffers int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types RejectedOffers,omitempty" json:"RejectedOffers,omitempty"`

	SyncEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SyncEnabled,omitempty" json:"SyncEnabled,omitempty"`

	TokenRefreshLastAttempted xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenRefreshLastAttempted,omitempty" json:"TokenRefreshLastAttempted,omitempty"`

	TokenRefreshLastCompleted xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types TokenRefreshLastCompleted,omitempty" json:"TokenRefreshLastCompleted,omitempty"`

	PsaState string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PsaState,omitempty" json:"PsaState,omitempty"`

	SourceEntryID []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceEntryID,omitempty" json:"SourceEntryID,omitempty"`

	AccountName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AccountName,omitempty" json:"AccountName,omitempty"`

	LastSync xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastSync,omitempty" json:"LastSync,omitempty"`
}

type AbchPersonItemType struct {
	*ItemType

	AntiLinkInfo string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AntiLinkInfo,omitempty" json:"AntiLinkInfo,omitempty"`

	PersonId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonId,omitempty" json:"PersonId,omitempty"`

	ContactHandles *ArrayOfAbchPersonContactHandlesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactHandles,omitempty" json:"ContactHandles,omitempty"`

	ContactCategories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactCategories,omitempty" json:"ContactCategories,omitempty"`

	RelevanceOrder1 string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RelevanceOrder1,omitempty" json:"RelevanceOrder1,omitempty"`

	RelevanceOrder2 string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RelevanceOrder2,omitempty" json:"RelevanceOrder2,omitempty"`

	TrustLevel int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	FavoriteOrder int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types FavoriteOrder,omitempty" json:"FavoriteOrder,omitempty"`

	ExchangePersonIdGuid *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExchangePersonIdGuid,omitempty" json:"ExchangePersonIdGuid,omitempty"`
}

type ArrayOfAbchPersonContactHandlesType struct {
	ContactHandle []*AbchPersonContactHandle `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactHandle,omitempty" json:"ContactHandle,omitempty"`
}

type AbchPersonContactHandle struct {
	SourceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceId,omitempty" json:"SourceId,omitempty"`

	ObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ObjectId,omitempty" json:"ObjectId,omitempty"`

	AccountName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AccountName,omitempty" json:"AccountName,omitempty"`
}

type ArrayOfGuidType struct {
	Guid []*GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Guid,omitempty" json:"Guid,omitempty"`
}

type ContactItemType struct {
	*ItemType

	FileAs string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAs,omitempty" json:"FileAs,omitempty"`

	FileAsMapping *FileAsMappingType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAsMapping,omitempty" json:"FileAsMapping,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	GivenName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GivenName,omitempty" json:"GivenName,omitempty"`

	Initials string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Initials,omitempty" json:"Initials,omitempty"`

	MiddleName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MiddleName,omitempty" json:"MiddleName,omitempty"`

	Nickname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Nickname,omitempty" json:"Nickname,omitempty"`

	CompleteName *CompleteNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompleteName,omitempty" json:"CompleteName,omitempty"`

	CompanyName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CompanyName,omitempty" json:"CompanyName,omitempty"`

	EmailAddresses *EmailAddressDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddresses,omitempty" json:"EmailAddresses,omitempty"`

	AbchEmailAddresses *AbchEmailAddressDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AbchEmailAddresses,omitempty" json:"AbchEmailAddresses,omitempty"`

	PhysicalAddresses *PhysicalAddressDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhysicalAddresses,omitempty" json:"PhysicalAddresses,omitempty"`

	PhoneNumbers *PhoneNumberDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneNumbers,omitempty" json:"PhoneNumbers,omitempty"`

	AssistantName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssistantName,omitempty" json:"AssistantName,omitempty"`

	Birthday xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Birthday,omitempty" json:"Birthday,omitempty"`

	BusinessHomePage AnyURI `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusinessHomePage,omitempty" json:"BusinessHomePage,omitempty"`

	Children *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Children,omitempty" json:"Children,omitempty"`

	Companies *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Companies,omitempty" json:"Companies,omitempty"`

	ContactSource *ContactSourceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactSource,omitempty" json:"ContactSource,omitempty"`

	Department string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Department,omitempty" json:"Department,omitempty"`

	Generation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Generation,omitempty" json:"Generation,omitempty"`

	ImAddresses *ImAddressDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImAddresses,omitempty" json:"ImAddresses,omitempty"`

	JobTitle string `xml:"http://schemas.microsoft.com/exchange/services/2006/types JobTitle,omitempty" json:"JobTitle,omitempty"`

	Manager string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Manager,omitempty" json:"Manager,omitempty"`

	Mileage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mileage,omitempty" json:"Mileage,omitempty"`

	OfficeLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OfficeLocation,omitempty" json:"OfficeLocation,omitempty"`

	PostalAddressIndex *PhysicalAddressIndexType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PostalAddressIndex,omitempty" json:"PostalAddressIndex,omitempty"`

	Profession string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Profession,omitempty" json:"Profession,omitempty"`

	SpouseName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SpouseName,omitempty" json:"SpouseName,omitempty"`

	Surname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Surname,omitempty" json:"Surname,omitempty"`

	WeddingAnniversary xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types WeddingAnniversary,omitempty" json:"WeddingAnniversary,omitempty"`

	HasPicture bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasPicture,omitempty" json:"HasPicture,omitempty"`

	PhoneticFullName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneticFullName,omitempty" json:"PhoneticFullName,omitempty"`

	PhoneticFirstName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneticFirstName,omitempty" json:"PhoneticFirstName,omitempty"`

	PhoneticLastName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneticLastName,omitempty" json:"PhoneticLastName,omitempty"`

	Alias string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Alias,omitempty" json:"Alias,omitempty"`

	Notes string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Notes,omitempty" json:"Notes,omitempty"`

	Photo []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Photo,omitempty" json:"Photo,omitempty"`

	UserSMIMECertificate *ArrayOfBinaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserSMIMECertificate,omitempty" json:"UserSMIMECertificate,omitempty"`

	MSExchangeCertificate *ArrayOfBinaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MSExchangeCertificate,omitempty" json:"MSExchangeCertificate,omitempty"`

	DirectoryId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DirectoryId,omitempty" json:"DirectoryId,omitempty"`

	ManagerMailbox *SingleRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagerMailbox,omitempty" json:"ManagerMailbox,omitempty"`

	DirectReports *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DirectReports,omitempty" json:"DirectReports,omitempty"`

	AccountName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AccountName,omitempty" json:"AccountName,omitempty"`

	IsAutoUpdateDisabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAutoUpdateDisabled,omitempty" json:"IsAutoUpdateDisabled,omitempty"`

	IsMessengerEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMessengerEnabled,omitempty" json:"IsMessengerEnabled,omitempty"`

	Comment string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Comment,omitempty" json:"Comment,omitempty"`

	ContactShortId int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactShortId,omitempty" json:"ContactShortId,omitempty"`

	ContactType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactType,omitempty" json:"ContactType,omitempty"`

	Gender string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Gender,omitempty" json:"Gender,omitempty"`

	IsHidden bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsHidden,omitempty" json:"IsHidden,omitempty"`

	ObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ObjectId,omitempty" json:"ObjectId,omitempty"`

	PassportId int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PassportId,omitempty" json:"PassportId,omitempty"`

	IsPrivate bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPrivate,omitempty" json:"IsPrivate,omitempty"`

	SourceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SourceId,omitempty" json:"SourceId,omitempty"`

	TrustLevel int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrustLevel,omitempty" json:"TrustLevel,omitempty"`

	CreatedBy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	Urls *ContactUrlDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Urls,omitempty" json:"Urls,omitempty"`

	Cid int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Cid,omitempty" json:"Cid,omitempty"`

	SkypeAuthCertificate string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SkypeAuthCertificate,omitempty" json:"SkypeAuthCertificate,omitempty"`

	SkypeContext string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SkypeContext,omitempty" json:"SkypeContext,omitempty"`

	SkypeId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SkypeId,omitempty" json:"SkypeId,omitempty"`

	SkypeRelationship string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SkypeRelationship,omitempty" json:"SkypeRelationship,omitempty"`

	YomiNickname string `xml:"http://schemas.microsoft.com/exchange/services/2006/types YomiNickname,omitempty" json:"YomiNickname,omitempty"`

	XboxLiveTag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types XboxLiveTag,omitempty" json:"XboxLiveTag,omitempty"`

	InviteFree bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types InviteFree,omitempty" json:"InviteFree,omitempty"`

	HidePresenceAndProfile bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HidePresenceAndProfile,omitempty" json:"HidePresenceAndProfile,omitempty"`

	IsPendingOutbound bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPendingOutbound,omitempty" json:"IsPendingOutbound,omitempty"`

	SupportGroupFeeds bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SupportGroupFeeds,omitempty" json:"SupportGroupFeeds,omitempty"`

	UserTileHash string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserTileHash,omitempty" json:"UserTileHash,omitempty"`

	UnifiedInbox bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnifiedInbox,omitempty" json:"UnifiedInbox,omitempty"`

	Mris *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mris,omitempty" json:"Mris,omitempty"`

	Wlid string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Wlid,omitempty" json:"Wlid,omitempty"`

	AbchContactId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AbchContactId,omitempty" json:"AbchContactId,omitempty"`

	NotInBirthdayCalendar bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types NotInBirthdayCalendar,omitempty" json:"NotInBirthdayCalendar,omitempty"`

	ShellContactType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ShellContactType,omitempty" json:"ShellContactType,omitempty"`

	ImMri string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImMri,omitempty" json:"ImMri,omitempty"`

	PresenceTrustLevel int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PresenceTrustLevel,omitempty" json:"PresenceTrustLevel,omitempty"`

	OtherMri string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OtherMri,omitempty" json:"OtherMri,omitempty"`

	ProfileLastChanged string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProfileLastChanged,omitempty" json:"ProfileLastChanged,omitempty"`

	MobileIMEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MobileIMEnabled,omitempty" json:"MobileIMEnabled,omitempty"`

	PartnerNetworkProfilePhotoUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PartnerNetworkProfilePhotoUrl,omitempty" json:"PartnerNetworkProfilePhotoUrl,omitempty"`

	PartnerNetworkThumbnailPhotoUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PartnerNetworkThumbnailPhotoUrl,omitempty" json:"PartnerNetworkThumbnailPhotoUrl,omitempty"`

	PersonId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonId,omitempty" json:"PersonId,omitempty"`

	ConversationGuid *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConversationGuid,omitempty" json:"ConversationGuid,omitempty"`
}

type ArrayOfBinaryType struct {
	Base64Binary [][]byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Base64Binary,omitempty" json:"Base64Binary,omitempty"`
}

type DistributionListType struct {
	*ItemType

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	FileAs string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileAs,omitempty" json:"FileAs,omitempty"`

	ContactSource *ContactSourceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactSource,omitempty" json:"ContactSource,omitempty"`

	Members *MembersListType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Members,omitempty" json:"Members,omitempty"`
}

type SearchParametersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchParameters"`

	Restriction *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Restriction,omitempty" json:"Restriction,omitempty"`

	BaseFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseFolderIds,omitempty" json:"BaseFolderIds,omitempty"`

	Traversal *SearchFolderTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type ConstantValueType struct {
	Value string `xml:"Value,attr,omitempty" json:"Value,omitempty"`
}

type SearchExpressionType struct {
}

type AggregateOnType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AggregateOn"`

	FieldURI *PathToUnindexedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`

	Aggregate *AggregateType `xml:"Aggregate,attr,omitempty" json:"Aggregate,omitempty"`
}

type BaseGroupByType struct {
	Order *SortDirectionType `xml:"Order,attr,omitempty" json:"Order,omitempty"`
}

type GroupByType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupBy"`

	*BaseGroupByType

	AggregateOn *AggregateOnType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AggregateOn,omitempty" json:"AggregateOn,omitempty"`

	UseCollapsibleGroups bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types UseCollapsibleGroups,omitempty" json:"UseCollapsibleGroups,omitempty"`

	ItemsPerGroup *NonNegativeInteger `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemsPerGroup,omitempty" json:"ItemsPerGroup,omitempty"`

	MaxItemsPerGroup *NonNegativeInteger `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxItemsPerGroup,omitempty" json:"MaxItemsPerGroup,omitempty"`

	GroupsToExpand *ArrayOfGroupIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupsToExpand,omitempty" json:"GroupsToExpand,omitempty"`

	FieldURI *PathToUnindexedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,omitempty" json:"FieldURI,omitempty"`

	IndexedFieldURI *PathToIndexedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types IndexedFieldURI,omitempty" json:"IndexedFieldURI,omitempty"`

	ExtendedFieldURI *PathToExtendedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type DistinguishedGroupByType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedGroupBy"`

	*BaseGroupByType

	StandardGroupBy *StandardGroupByType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StandardGroupBy,omitempty" json:"StandardGroupBy,omitempty"`
}

type ArrayOfGroupIdType struct {
	GroupId []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupId,omitempty" json:"GroupId,omitempty"`
}

type GroupedItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupedItems"`

	GroupIndex string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupIndex,omitempty" json:"GroupIndex,omitempty"`

	Items *ArrayOfRealItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`

	GroupSummary *GroupSummaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSummary,omitempty" json:"GroupSummary,omitempty"`
}

type ArrayOfGroupedItemsType struct {
	GroupedItems []*GroupedItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupedItems,omitempty" json:"GroupedItems,omitempty"`
}

type GroupSummaryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSummary"`

	GroupCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupCount,omitempty" json:"GroupCount,omitempty"`

	UnreadCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnreadCount,omitempty" json:"UnreadCount,omitempty"`

	InstanceKey []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstanceKey,omitempty" json:"InstanceKey,omitempty"`

	GroupByValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupByValue,omitempty" json:"GroupByValue,omitempty"`
}

type ExistsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Exists"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`
}

type FieldURIOrConstantType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURIOrConstant"`

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Constant,omitempty" json:"Constant,omitempty"`
}

type TwoOperandExpressionType struct {
	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	FieldURIOrConstant *FieldURIOrConstantType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURIOrConstant,omitempty" json:"FieldURIOrConstant,omitempty"`
}

type ExcludesValueType struct {
	Value *ExcludesAttributeType `xml:"Value,attr,omitempty" json:"Value,omitempty"`
}

type ExcludesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Excludes"`

	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Bitmask *ExcludesValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bitmask,omitempty" json:"Bitmask,omitempty"`
}

type IsEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsEqualTo"`

	*TwoOperandExpressionType
}

type IsNotEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsNotEqualTo"`

	*TwoOperandExpressionType
}

type IsGreaterThanType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsGreaterThan"`

	*TwoOperandExpressionType
}

type IsGreaterThanOrEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsGreaterThanOrEqualTo"`

	*TwoOperandExpressionType
}

type IsLessThanType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsLessThan"`

	*TwoOperandExpressionType
}

type IsLessThanOrEqualToType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsLessThanOrEqualTo"`

	*TwoOperandExpressionType
}

type ContainsExpressionType struct {
	*SearchExpressionType

	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Constant *ConstantValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Constant,omitempty" json:"Constant,omitempty"`

	ContainmentMode *ContainmentModeType `xml:"ContainmentMode,attr,omitempty" json:"ContainmentMode,omitempty"`

	ContainmentComparison *ContainmentComparisonType `xml:"ContainmentComparison,attr,omitempty" json:"ContainmentComparison,omitempty"`
}

type NotType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Not"`

	*SearchExpressionType

	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type MultipleOperandBooleanExpressionType struct {
	*SearchExpressionType

	SearchExpression []*SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type AndType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types And"`

	*MultipleOperandBooleanExpressionType
}

type OrType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Or"`

	*MultipleOperandBooleanExpressionType
}

type NearType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Near"`

	*MultipleOperandBooleanExpressionType

	Distance uint32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Distance,omitempty" json:"Distance,omitempty"`

	Ordered bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Ordered,omitempty" json:"Ordered,omitempty"`
}

type RestrictionType struct {
	SearchExpression *SearchExpression `xml:"SearchExpression,omitempty" json:"SearchExpression,omitempty"`
}

type FieldOrderType struct {
	Path *Path `xml:"Path,omitempty" json:"Path,omitempty"`

	Order *SortDirectionType `xml:"Order,attr,omitempty" json:"Order,omitempty"`
}

type NonEmptyArrayOfFieldOrdersType struct {
	FieldOrder []*FieldOrderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldOrder,omitempty" json:"FieldOrder,omitempty"`
}

type NonEmptyArrayOfFolderNamesType struct {
	FolderName []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderName,omitempty" json:"FolderName,omitempty"`
}

type BaseNotificationEventType struct {
	Watermark *WatermarkType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Watermark,omitempty" json:"Watermark,omitempty"`
}

type BaseObjectChangedEventType struct {
	*BaseNotificationEventType

	TimeStamp xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeStamp,omitempty" json:"TimeStamp,omitempty"`

	ParentFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`
}

type ModifiedEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedEvent"`

	*BaseObjectChangedEventType

	UnreadCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnreadCount,omitempty" json:"UnreadCount,omitempty"`
}

type MovedCopiedEventType struct {
	*BaseObjectChangedEventType

	OldParentFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OldParentFolderId,omitempty" json:"OldParentFolderId,omitempty"`

	OldFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OldFolderId,omitempty" json:"OldFolderId,omitempty"`

	OldItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OldItemId,omitempty" json:"OldItemId,omitempty"`
}

type NotificationType struct {
	SubscriptionId *SubscriptionIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	PreviousWatermark *WatermarkType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreviousWatermark,omitempty" json:"PreviousWatermark,omitempty"`

	MoreEvents bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MoreEvents,omitempty" json:"MoreEvents,omitempty"`

	CopiedEvent *MovedCopiedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CopiedEvent,omitempty" json:"CopiedEvent,omitempty"`

	CreatedEvent *BaseObjectChangedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedEvent,omitempty" json:"CreatedEvent,omitempty"`

	DeletedEvent *BaseObjectChangedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedEvent,omitempty" json:"DeletedEvent,omitempty"`

	ModifiedEvent *ModifiedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ModifiedEvent,omitempty" json:"ModifiedEvent,omitempty"`

	MovedEvent *MovedCopiedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MovedEvent,omitempty" json:"MovedEvent,omitempty"`

	NewMailEvent *BaseObjectChangedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NewMailEvent,omitempty" json:"NewMailEvent,omitempty"`

	StatusEvent *BaseNotificationEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StatusEvent,omitempty" json:"StatusEvent,omitempty"`

	FreeBusyChangedEvent *BaseObjectChangedEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FreeBusyChangedEvent,omitempty" json:"FreeBusyChangedEvent,omitempty"`
}

type NonEmptyArrayOfNotificationEventTypesType struct {
	EventType *NotificationEventTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventType,omitempty" json:"EventType,omitempty"`
}

type BaseSubscriptionRequestType struct {
	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventTypes,omitempty" json:"EventTypes,omitempty"`

	Watermark *WatermarkType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Watermark,omitempty" json:"Watermark,omitempty"`

	SubscribeToAllFolders bool `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type PushSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PushSubscriptionRequest"`

	*BaseSubscriptionRequestType

	StatusFrequency *SubscriptionStatusFrequencyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types StatusFrequency,omitempty" json:"StatusFrequency,omitempty"`

	URL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types URL,omitempty" json:"URL,omitempty"`

	CallerData string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CallerData,omitempty" json:"CallerData,omitempty"`
}

type PullSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PullSubscriptionRequest"`

	*BaseSubscriptionRequestType

	Timeout *SubscriptionTimeoutType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Timeout,omitempty" json:"Timeout,omitempty"`
}

type StreamingSubscriptionRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types StreamingSubscriptionRequest"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderIds,omitempty" json:"FolderIds,omitempty"`

	EventTypes *NonEmptyArrayOfNotificationEventTypesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventTypes,omitempty" json:"EventTypes,omitempty"`

	SubscribeToAllFolders bool `xml:"SubscribeToAllFolders,attr,omitempty" json:"SubscribeToAllFolders,omitempty"`
}

type NonEmptyArrayOfSubscriptionIdsType struct {
	SubscriptionId []*SubscriptionIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type NonEmptyArrayOfNotificationsType struct {
	Notification []*NotificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Notification,omitempty" json:"Notification,omitempty"`
}

type SyncFolderItemsDeleteType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`
}

type SyncFolderItemsReadFlagType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	IsRead bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRead,omitempty" json:"IsRead,omitempty"`
}

type SyncFolderItemsChangesType struct {
	Create *SyncFolderItemsCreateOrUpdateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderItemsCreateOrUpdateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderItemsDeleteType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete,omitempty" json:"Delete,omitempty"`

	ReadFlagChange *SyncFolderItemsReadFlagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReadFlagChange,omitempty" json:"ReadFlagChange,omitempty"`
}

type SyncFolderHierarchyCreateOrUpdateType struct {
	Folder *FolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Folder,omitempty" json:"Folder,omitempty"`

	CalendarFolder *CalendarFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolder,omitempty" json:"CalendarFolder,omitempty"`

	ContactsFolder *ContactsFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolder,omitempty" json:"ContactsFolder,omitempty"`

	SearchFolder *SearchFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchFolder,omitempty" json:"SearchFolder,omitempty"`

	TasksFolder *TasksFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolder,omitempty" json:"TasksFolder,omitempty"`
}

type SyncFolderHierarchyDeleteType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`
}

type SyncFolderHierarchyChangesType struct {
	Create *SyncFolderHierarchyCreateOrUpdateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Create,omitempty" json:"Create,omitempty"`

	Update *SyncFolderHierarchyCreateOrUpdateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Update,omitempty" json:"Update,omitempty"`

	Delete *SyncFolderHierarchyDeleteType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete,omitempty" json:"Delete,omitempty"`
}

type RequestTypeHeader struct {
	RequestType *AvailabilityProxyRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequestType,omitempty" json:"RequestType,omitempty"`
}

type CalendarEventDetails struct {
	ID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ID,omitempty" json:"ID,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	IsMeeting bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMeeting,omitempty" json:"IsMeeting,omitempty"`

	IsRecurring bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRecurring,omitempty" json:"IsRecurring,omitempty"`

	IsException bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsException,omitempty" json:"IsException,omitempty"`

	IsReminderSet bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsReminderSet,omitempty" json:"IsReminderSet,omitempty"`

	IsPrivate bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPrivate,omitempty" json:"IsPrivate,omitempty"`
}

type CalendarEvent struct {
	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`

	BusyType *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusyType,omitempty" json:"BusyType,omitempty"`

	CalendarEventDetails *CalendarEventDetails `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarEventDetails,omitempty" json:"CalendarEventDetails,omitempty"`
}

type ArrayOfCalendarEvent struct {
	CalendarEvent []*CalendarEvent `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarEvent,omitempty" json:"CalendarEvent,omitempty"`
}

type Duration struct {
	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`
}

type EmailAddress struct {
	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Address string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Address,omitempty" json:"Address,omitempty"`

	RoutingType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RoutingType,omitempty" json:"RoutingType,omitempty"`
}

type FreeBusyViewOptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types FreeBusyViewOptions"`

	TimeWindow *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeWindow,omitempty" json:"TimeWindow,omitempty"`

	MergedFreeBusyIntervalInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MergedFreeBusyIntervalInMinutes,omitempty" json:"MergedFreeBusyIntervalInMinutes,omitempty"`

	RequestedView *FreeBusyViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RequestedView,omitempty" json:"RequestedView,omitempty"`
}

type WorkingPeriod struct {
	DayOfWeek *DaysOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	StartTimeInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type ArrayOfWorkingPeriod struct {
	WorkingPeriod []*WorkingPeriod `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkingPeriod,omitempty" json:"WorkingPeriod,omitempty"`
}

type SerializableTimeZoneTime struct {
	Bias int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bias,omitempty" json:"Bias,omitempty"`

	Time string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Time,omitempty" json:"Time,omitempty"`

	DayOrder int16 `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOrder,omitempty" json:"DayOrder,omitempty"`

	Month int16 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Month,omitempty" json:"Month,omitempty"`

	DayOfWeek *DayOfWeekType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayOfWeek,omitempty" json:"DayOfWeek,omitempty"`

	Year string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Year,omitempty" json:"Year,omitempty"`
}

type SerializableTimeZone struct {
	Bias int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Bias,omitempty" json:"Bias,omitempty"`

	StandardTime *SerializableTimeZoneTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StandardTime,omitempty" json:"StandardTime,omitempty"`

	DaylightTime *SerializableTimeZoneTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types DaylightTime,omitempty" json:"DaylightTime,omitempty"`
}

type WorkingHours struct {
	TimeZone *SerializableTimeZone `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeZone,omitempty" json:"TimeZone,omitempty"`

	WorkingPeriodArray *ArrayOfWorkingPeriod `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkingPeriodArray,omitempty" json:"WorkingPeriodArray,omitempty"`
}

type FreeBusyView struct {
	FreeBusyViewType *FreeBusyViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`

	MergedFreeBusy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MergedFreeBusy,omitempty" json:"MergedFreeBusy,omitempty"`

	CalendarEventArray *ArrayOfCalendarEvent `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarEventArray,omitempty" json:"CalendarEventArray,omitempty"`

	WorkingHours *WorkingHours `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkingHours,omitempty" json:"WorkingHours,omitempty"`
}

type MailboxData struct {
	Email *EmailAddress `xml:"http://schemas.microsoft.com/exchange/services/2006/types Email,omitempty" json:"Email,omitempty"`

	AttendeeType *MeetingAttendeeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeType,omitempty" json:"AttendeeType,omitempty"`

	ExcludeConflicts bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExcludeConflicts,omitempty" json:"ExcludeConflicts,omitempty"`
}

type ArrayOfMailboxData struct {
	MailboxData []*MailboxData `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxData,omitempty" json:"MailboxData,omitempty"`
}

type SuggestionsViewOptionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionsViewOptions"`

	GoodThreshold int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types GoodThreshold,omitempty" json:"GoodThreshold,omitempty"`

	MaximumResultsByDay int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaximumResultsByDay,omitempty" json:"MaximumResultsByDay,omitempty"`

	MaximumNonWorkHourResultsByDay int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaximumNonWorkHourResultsByDay,omitempty" json:"MaximumNonWorkHourResultsByDay,omitempty"`

	MeetingDurationInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	MinimumSuggestionQuality *SuggestionQuality `xml:"http://schemas.microsoft.com/exchange/services/2006/types MinimumSuggestionQuality,omitempty" json:"MinimumSuggestionQuality,omitempty"`

	DetailedSuggestionsWindow *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types DetailedSuggestionsWindow,omitempty" json:"DetailedSuggestionsWindow,omitempty"`

	CurrentMeetingTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types CurrentMeetingTime,omitempty" json:"CurrentMeetingTime,omitempty"`

	GlobalObjectId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GlobalObjectId,omitempty" json:"GlobalObjectId,omitempty"`
}

type ArrayOfAttendeeConflictData struct {
	UnknownAttendeeConflictData *UnknownAttendeeConflictData `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnknownAttendeeConflictData,omitempty" json:"UnknownAttendeeConflictData,omitempty"`

	IndividualAttendeeConflictData *IndividualAttendeeConflictData `xml:"http://schemas.microsoft.com/exchange/services/2006/types IndividualAttendeeConflictData,omitempty" json:"IndividualAttendeeConflictData,omitempty"`

	TooBigGroupAttendeeConflictData *TooBigGroupAttendeeConflictData `xml:"http://schemas.microsoft.com/exchange/services/2006/types TooBigGroupAttendeeConflictData,omitempty" json:"TooBigGroupAttendeeConflictData,omitempty"`

	GroupAttendeeConflictData *GroupAttendeeConflictData `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupAttendeeConflictData,omitempty" json:"GroupAttendeeConflictData,omitempty"`
}

type AttendeeConflictData struct {
}

type UnknownAttendeeConflictData struct {
	*AttendeeConflictData
}

type TooBigGroupAttendeeConflictData struct {
	*AttendeeConflictData
}

type IndividualAttendeeConflictData struct {
	*AttendeeConflictData

	BusyType *LegacyFreeBusyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BusyType,omitempty" json:"BusyType,omitempty"`
}

type GroupAttendeeConflictData struct {
	*AttendeeConflictData

	NumberOfMembers int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types NumberOfMembers,omitempty" json:"NumberOfMembers,omitempty"`

	NumberOfMembersAvailable int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types NumberOfMembersAvailable,omitempty" json:"NumberOfMembersAvailable,omitempty"`

	NumberOfMembersWithConflict int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types NumberOfMembersWithConflict,omitempty" json:"NumberOfMembersWithConflict,omitempty"`

	NumberOfMembersWithNoData int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types NumberOfMembersWithNoData,omitempty" json:"NumberOfMembersWithNoData,omitempty"`
}

type Suggestion struct {
	MeetingTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTime,omitempty" json:"MeetingTime,omitempty"`

	IsWorkTime bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsWorkTime,omitempty" json:"IsWorkTime,omitempty"`

	SuggestionQuality *SuggestionQuality `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionQuality,omitempty" json:"SuggestionQuality,omitempty"`

	AttendeeConflictDataArray *ArrayOfAttendeeConflictData `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeConflictDataArray,omitempty" json:"AttendeeConflictDataArray,omitempty"`
}

type ArrayOfSuggestion struct {
	Suggestion []*Suggestion `xml:"http://schemas.microsoft.com/exchange/services/2006/types Suggestion,omitempty" json:"Suggestion,omitempty"`
}

type SuggestionDayResult struct {
	Date xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Date,omitempty" json:"Date,omitempty"`

	DayQuality *SuggestionQuality `xml:"http://schemas.microsoft.com/exchange/services/2006/types DayQuality,omitempty" json:"DayQuality,omitempty"`

	SuggestionArray *ArrayOfSuggestion `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionArray,omitempty" json:"SuggestionArray,omitempty"`
}

type ArrayOfSuggestionDayResult struct {
	SuggestionDayResult []*SuggestionDayResult `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionDayResult,omitempty" json:"SuggestionDayResult,omitempty"`
}

type ReplyBody struct {
	Message string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	EmptyString string `xml:",attr,omitempty" json:",omitempty"`
}

type ArrayOfEventIDType struct {
	EventToDeleteID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventToDeleteID,omitempty" json:"EventToDeleteID,omitempty"`
}

type UserOofSettings struct {
	OofState *OofState `xml:"http://schemas.microsoft.com/exchange/services/2006/types OofState,omitempty" json:"OofState,omitempty"`

	ExternalAudience *ExternalAudience `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalAudience,omitempty" json:"ExternalAudience,omitempty"`

	Duration *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types Duration,omitempty" json:"Duration,omitempty"`

	InternalReply *ReplyBody `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalReply,omitempty" json:"InternalReply,omitempty"`

	ExternalReply *ReplyBody `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalReply,omitempty" json:"ExternalReply,omitempty"`

	DeclineMeetingReply *ReplyBody `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineMeetingReply,omitempty" json:"DeclineMeetingReply,omitempty"`

	DeclineEventsForScheduledOOF bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineEventsForScheduledOOF,omitempty" json:"DeclineEventsForScheduledOOF,omitempty"`

	DeclineAllEventsForScheduledOOF bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeclineAllEventsForScheduledOOF,omitempty" json:"DeclineAllEventsForScheduledOOF,omitempty"`

	CreateOOFEvent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateOOFEvent,omitempty" json:"CreateOOFEvent,omitempty"`

	OOFEventSubject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OOFEventSubject,omitempty" json:"OOFEventSubject,omitempty"`

	AutoDeclineFutureRequestsWhenOOF bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types AutoDeclineFutureRequestsWhenOOF,omitempty" json:"AutoDeclineFutureRequestsWhenOOF,omitempty"`

	OOFEventID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OOFEventID,omitempty" json:"OOFEventID,omitempty"`

	EventsToDeleteIDs *ArrayOfEventIDType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventsToDeleteIDs,omitempty" json:"EventsToDeleteIDs,omitempty"`
}

type Value struct {
	Value string `xml:",chardata" json:"-,"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type ApprovalRequestDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalRequestData"`

	IsUndecidedApprovalRequest bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsUndecidedApprovalRequest,omitempty" json:"IsUndecidedApprovalRequest,omitempty"`

	ApprovalDecision int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalDecision,omitempty" json:"ApprovalDecision,omitempty"`

	ApprovalDecisionMaker string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalDecisionMaker,omitempty" json:"ApprovalDecisionMaker,omitempty"`

	ApprovalDecisionTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApprovalDecisionTime,omitempty" json:"ApprovalDecisionTime,omitempty"`
}

type ReminderMessageDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderMessageData"`

	ReminderText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderText,omitempty" json:"ReminderText,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Location,omitempty" json:"Location,omitempty"`

	StartTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`

	AssociatedCalendarItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssociatedCalendarItemId,omitempty" json:"AssociatedCalendarItemId,omitempty"`
}

type MessageSafetyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageSafety"`

	MessageSafetyLevel int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageSafetyLevel,omitempty" json:"MessageSafetyLevel,omitempty"`

	MessageSafetyReason int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageSafetyReason,omitempty" json:"MessageSafetyReason,omitempty"`

	Info string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Info,omitempty" json:"Info,omitempty"`
}

type VotingOptionDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingOptionData"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	SendPrompt *SendPromptType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SendPrompt,omitempty" json:"SendPrompt,omitempty"`
}

type ArrayOfVotingOptionDataType struct {
	VotingOptionData []*VotingOptionDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingOptionData,omitempty" json:"VotingOptionData,omitempty"`
}

type VotingInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingInformation"`

	UserOptions *ArrayOfVotingOptionDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserOptions,omitempty" json:"UserOptions,omitempty"`

	VotingResponse string `xml:"http://schemas.microsoft.com/exchange/services/2006/types VotingResponse,omitempty" json:"VotingResponse,omitempty"`
}

type AlternateIdBaseType struct {
	Format *IdFormatType `xml:"Format,attr,omitempty" json:"Format,omitempty"`
}

type AlternateIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternateId"`

	*AlternateIdBaseType

	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	Mailbox *NonEmptyStringType `xml:"Mailbox,attr,omitempty" json:"Mailbox,omitempty"`

	IsArchive bool `xml:"IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type AlternatePublicFolderIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderId"`

	*AlternateIdBaseType

	FolderId string `xml:"FolderId,attr,omitempty" json:"FolderId,omitempty"`
}

type AlternatePublicFolderItemIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderItemId"`

	*AlternatePublicFolderIdType

	ItemId string `xml:"ItemId,attr,omitempty" json:"ItemId,omitempty"`
}

type NonEmptyArrayOfAlternateIdsType struct {
	AlternateId *AlternateIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternateId,omitempty" json:"AlternateId,omitempty"`

	AlternatePublicFolderId *AlternatePublicFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderId,omitempty" json:"AlternatePublicFolderId,omitempty"`

	AlternatePublicFolderItemId *AlternatePublicFolderItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AlternatePublicFolderItemId,omitempty" json:"AlternatePublicFolderItemId,omitempty"`
}

type UserIdType struct {
	SID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SID,omitempty" json:"SID,omitempty"`

	PrimarySmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	DistinguishedUser *DistinguishedUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DistinguishedUser,omitempty" json:"DistinguishedUser,omitempty"`

	ExternalUserIdentity string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalUserIdentity,omitempty" json:"ExternalUserIdentity,omitempty"`
}

type ArrayOfPermissionsType struct {
	Permission *PermissionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Permission,omitempty" json:"Permission,omitempty"`
}

type ArrayOfCalendarPermissionsType struct {
	CalendarPermission *CalendarPermissionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermission,omitempty" json:"CalendarPermission,omitempty"`
}

type ArrayOfUnknownEntriesType struct {
	UnknownEntry string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnknownEntry,omitempty" json:"UnknownEntry,omitempty"`
}

type BasePermissionType struct {
	UserId *UserIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserId,omitempty" json:"UserId,omitempty"`

	CanCreateItems bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanCreateItems,omitempty" json:"CanCreateItems,omitempty"`

	CanCreateSubFolders bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CanCreateSubFolders,omitempty" json:"CanCreateSubFolders,omitempty"`

	IsFolderOwner bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsFolderOwner,omitempty" json:"IsFolderOwner,omitempty"`

	IsFolderVisible bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsFolderVisible,omitempty" json:"IsFolderVisible,omitempty"`

	IsFolderContact bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsFolderContact,omitempty" json:"IsFolderContact,omitempty"`

	EditItems *PermissionActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EditItems,omitempty" json:"EditItems,omitempty"`

	DeleteItems *PermissionActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteItems,omitempty" json:"DeleteItems,omitempty"`
}

type PermissionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Permission"`

	*BasePermissionType

	ReadItems *PermissionReadAccessType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReadItems,omitempty" json:"ReadItems,omitempty"`

	PermissionLevel *PermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermissionLevel,omitempty" json:"PermissionLevel,omitempty"`
}

type CalendarPermissionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermission"`

	*BasePermissionType

	ReadItems *CalendarPermissionReadAccessType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReadItems,omitempty" json:"ReadItems,omitempty"`

	CalendarPermissionLevel *CalendarPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermissionLevel,omitempty" json:"CalendarPermissionLevel,omitempty"`
}

type PermissionSetType struct {
	Permissions *ArrayOfPermissionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Permissions,omitempty" json:"Permissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type CalendarPermissionSetType struct {
	CalendarPermissions *ArrayOfCalendarPermissionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarPermissions,omitempty" json:"CalendarPermissions,omitempty"`

	UnknownEntries *ArrayOfUnknownEntriesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UnknownEntries,omitempty" json:"UnknownEntries,omitempty"`
}

type EffectiveRightsType struct {
	CreateAssociated bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateAssociated,omitempty" json:"CreateAssociated,omitempty"`

	CreateContents bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateContents,omitempty" json:"CreateContents,omitempty"`

	CreateHierarchy bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateHierarchy,omitempty" json:"CreateHierarchy,omitempty"`

	Delete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete,omitempty" json:"Delete,omitempty"`

	Modify bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Modify,omitempty" json:"Modify,omitempty"`

	Read bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Read,omitempty" json:"Read,omitempty"`

	ViewPrivateItems bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type ArrayOfDelegateUserType struct {
	DelegateUser []*DelegateUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type ArrayOfUserIdType struct {
	UserId []*UserIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserId,omitempty" json:"UserId,omitempty"`
}

type DelegateUserType struct {
	UserId *UserIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserId,omitempty" json:"UserId,omitempty"`

	DelegatePermissions *DelegatePermissionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegatePermissions,omitempty" json:"DelegatePermissions,omitempty"`

	ReceiveCopiesOfMeetingMessages bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReceiveCopiesOfMeetingMessages,omitempty" json:"ReceiveCopiesOfMeetingMessages,omitempty"`

	ViewPrivateItems bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ViewPrivateItems,omitempty" json:"ViewPrivateItems,omitempty"`
}

type DelegatePermissionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelegatePermissions"`

	CalendarFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CalendarFolderPermissionLevel,omitempty" json:"CalendarFolderPermissionLevel,omitempty"`

	TasksFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TasksFolderPermissionLevel,omitempty" json:"TasksFolderPermissionLevel,omitempty"`

	InboxFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxFolderPermissionLevel,omitempty" json:"InboxFolderPermissionLevel,omitempty"`

	ContactsFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContactsFolderPermissionLevel,omitempty" json:"ContactsFolderPermissionLevel,omitempty"`

	NotesFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NotesFolderPermissionLevel,omitempty" json:"NotesFolderPermissionLevel,omitempty"`

	JournalFolderPermissionLevel *DelegateFolderPermissionLevelType `xml:"http://schemas.microsoft.com/exchange/services/2006/types JournalFolderPermissionLevel,omitempty" json:"JournalFolderPermissionLevel,omitempty"`
}

type ConflictResultsType struct {
	Count int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Count,omitempty" json:"Count,omitempty"`
}

type OutOfOfficeMailTip struct {
	ReplyBody *ReplyBody `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReplyBody,omitempty" json:"ReplyBody,omitempty"`

	Duration *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/types Duration,omitempty" json:"Duration,omitempty"`
}

type SmtpDomainList struct {
	Domain []*SmtpDomain `xml:"http://schemas.microsoft.com/exchange/services/2006/types Domain,omitempty" json:"Domain,omitempty"`
}

type SmtpDomain struct {
	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	IncludeSubdomains bool `xml:"IncludeSubdomains,attr,omitempty" json:"IncludeSubdomains,omitempty"`
}

type MailTips struct {
	RecipientAddress *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientAddress,omitempty" json:"RecipientAddress,omitempty"`

	PendingMailTips *MailTipTypes `xml:"http://schemas.microsoft.com/exchange/services/2006/types PendingMailTips,omitempty" json:"PendingMailTips,omitempty"`

	OutOfOffice *OutOfOfficeMailTip `xml:"http://schemas.microsoft.com/exchange/services/2006/types OutOfOffice,omitempty" json:"OutOfOffice,omitempty"`

	MailboxFull bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxFull,omitempty" json:"MailboxFull,omitempty"`

	CustomMailTip string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CustomMailTip,omitempty" json:"CustomMailTip,omitempty"`

	TotalMemberCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TotalMemberCount,omitempty" json:"TotalMemberCount,omitempty"`

	ExternalMemberCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalMemberCount,omitempty" json:"ExternalMemberCount,omitempty"`

	MaxMessageSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	DeliveryRestricted bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeliveryRestricted,omitempty" json:"DeliveryRestricted,omitempty"`

	IsModerated bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsModerated,omitempty" json:"IsModerated,omitempty"`

	InvalidRecipient bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`

	Scope int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Scope,omitempty" json:"Scope,omitempty"`

	RecipientSuggestions *ArrayOfRecipientSuggestionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientSuggestions,omitempty" json:"RecipientSuggestions,omitempty"`

	PreferAccessibleContent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreferAccessibleContent,omitempty" json:"PreferAccessibleContent,omitempty"`
}

type ArrayOfRecipientSuggestionsType struct {
	RecipientSuggestion *RecipientSuggestionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientSuggestion,omitempty" json:"RecipientSuggestion,omitempty"`
}

type RecipientSuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientSuggestion"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type ServiceConfiguration struct {
}

type MailTipsServiceConfiguration struct {
	*ServiceConfiguration

	MailTipsEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailTipsEnabled,omitempty" json:"MailTipsEnabled,omitempty"`

	MaxRecipientsPerGetMailTipsRequest int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxRecipientsPerGetMailTipsRequest,omitempty" json:"MaxRecipientsPerGetMailTipsRequest,omitempty"`

	MaxMessageSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxMessageSize,omitempty" json:"MaxMessageSize,omitempty"`

	LargeAudienceThreshold int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types LargeAudienceThreshold,omitempty" json:"LargeAudienceThreshold,omitempty"`

	ShowExternalRecipientCount bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ShowExternalRecipientCount,omitempty" json:"ShowExternalRecipientCount,omitempty"`

	InternalDomains *SmtpDomainList `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	PolicyTipsEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types PolicyTipsEnabled,omitempty" json:"PolicyTipsEnabled,omitempty"`

	LargeAudienceCap int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types LargeAudienceCap,omitempty" json:"LargeAudienceCap,omitempty"`
}

type UnifiedMessageServiceConfiguration struct {
	*ServiceConfiguration

	UmEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types UmEnabled,omitempty" json:"UmEnabled,omitempty"`

	PlayOnPhoneDialString string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PlayOnPhoneDialString,omitempty" json:"PlayOnPhoneDialString,omitempty"`

	PlayOnPhoneEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types PlayOnPhoneEnabled,omitempty" json:"PlayOnPhoneEnabled,omitempty"`
}

type SharePointURLsServiceConfiguration struct {
	*ServiceConfiguration

	InternalSPMySiteHostURL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalSPMySiteHostURL,omitempty" json:"InternalSPMySiteHostURL,omitempty"`

	ExternalSPMySiteHostURL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalSPMySiteHostURL,omitempty" json:"ExternalSPMySiteHostURL,omitempty"`
}

type OfficeIntegrationConfiguration struct {
	*ServiceConfiguration

	OfficeSidebarURL string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OfficeSidebarURL,omitempty" json:"OfficeSidebarURL,omitempty"`
}

type ConfigurationRequestDetailsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConfigurationRequestDetails"`
}

type ArrayOfSmtpAddressType struct {
	SmtpAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfEncryptedSharedFolderDataType struct {
	EncryptedSharedFolderData *EncryptedSharedFolderDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EncryptedSharedFolderData,omitempty" json:"EncryptedSharedFolderData,omitempty"`
}

type EncryptedSharedFolderDataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EncryptedSharedFolderData"`

	Token *EncryptedDataContainerType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Token,omitempty" json:"Token,omitempty"`

	Data *EncryptedDataContainerType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Data,omitempty" json:"Data,omitempty"`
}

type EncryptedDataContainerType struct {
	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfInvalidRecipientsType struct {
	InvalidRecipient *InvalidRecipientType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InvalidRecipient,omitempty" json:"InvalidRecipient,omitempty"`
}

type InvalidRecipientType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InvalidRecipient"`

	SmtpAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	ResponseCode *InvalidRecipientResponseCodeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	MessageText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageText,omitempty" json:"MessageText,omitempty"`
}

type AcceptSharingInvitationType struct {
	*ReferenceItemResponseType
}

type PhoneCallIdType struct {
	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type PhoneCallInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneCallInformation"`

	PhoneCallState *PhoneCallStateType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PhoneCallState,omitempty" json:"PhoneCallState,omitempty"`

	ConnectionFailureCause *ConnectionFailureCauseType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConnectionFailureCause,omitempty" json:"ConnectionFailureCause,omitempty"`

	SIPResponseText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SIPResponseText,omitempty" json:"SIPResponseText,omitempty"`

	SIPResponseCode int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types SIPResponseCode,omitempty" json:"SIPResponseCode,omitempty"`
}

type UserConfigurationNameType struct {
	*TargetFolderIdType

	Name *NonEmptyStringType `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type UserConfigurationDictionaryObjectType struct {
	Type *UserConfigurationDictionaryObjectTypesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	Value []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type UserConfigurationDictionaryEntryType struct {
	DictionaryKey *UserConfigurationDictionaryObjectType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DictionaryKey,omitempty" json:"DictionaryKey,omitempty"`

	DictionaryValue *UserConfigurationDictionaryObjectType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DictionaryValue,omitempty" json:"DictionaryValue,omitempty"`
}

type UserConfigurationDictionaryType struct {
	DictionaryEntry []*UserConfigurationDictionaryEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DictionaryEntry,omitempty" json:"DictionaryEntry,omitempty"`
}

type UserConfigurationType struct {
	UserConfigurationName *UserConfigurationNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	Dictionary *UserConfigurationDictionaryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Dictionary,omitempty" json:"Dictionary,omitempty"`

	XmlData []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types XmlData,omitempty" json:"XmlData,omitempty"`

	BinaryData []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types BinaryData,omitempty" json:"BinaryData,omitempty"`
}

type ProtectionRulesServiceConfiguration struct {
	*ServiceConfiguration

	Rules *ArrayOfProtectionRulesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rules,omitempty" json:"Rules,omitempty"`

	InternalDomains *SmtpDomainList `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalDomains,omitempty" json:"InternalDomains,omitempty"`

	RefreshInterval int32 `xml:"RefreshInterval,attr,omitempty" json:"RefreshInterval,omitempty"`
}

type ArrayOfProtectionRulesType struct {
	Rule []*ProtectionRuleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule,omitempty" json:"Rule,omitempty"`
}

type ProtectionRuleType struct {
	Condition *ProtectionRuleConditionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Condition,omitempty" json:"Condition,omitempty"`

	Action *ProtectionRuleActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Action,omitempty" json:"Action,omitempty"`

	Name string `xml:"Name,attr,omitempty" json:"Name,omitempty"`

	UserOverridable bool `xml:"UserOverridable,attr,omitempty" json:"UserOverridable,omitempty"`

	Priority int32 `xml:"Priority,attr,omitempty" json:"Priority,omitempty"`
}

type ProtectionRuleConditionType struct {
	AllInternal *ProtectionRuleAllInternalType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"http://schemas.microsoft.com/exchange/services/2006/types And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleAndType struct {
	AllInternal *ProtectionRuleAllInternalType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AllInternal,omitempty" json:"AllInternal,omitempty"`

	And *ProtectionRuleAndType `xml:"http://schemas.microsoft.com/exchange/services/2006/types And,omitempty" json:"And,omitempty"`

	RecipientIs *ProtectionRuleRecipientIsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientIs,omitempty" json:"RecipientIs,omitempty"`

	SenderDepartments *ProtectionRuleSenderDepartmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SenderDepartments,omitempty" json:"SenderDepartments,omitempty"`

	True *ProtectionRuleTrueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types True,omitempty" json:"True,omitempty"`
}

type ProtectionRuleRecipientIsType struct {
	Value []*ProtectionRuleValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleSenderDepartmentsType struct {
	Value []*ProtectionRuleValueType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ProtectionRuleActionType struct {
	Argument []*ProtectionRuleArgumentType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Argument,omitempty" json:"Argument,omitempty"`

	Name *ProtectionRuleActionKindType `xml:"Name,attr,omitempty" json:"Name,omitempty"`
}

type ProtectionRuleArgumentType struct {
	Value string `xml:"Value,attr,omitempty" json:"Value,omitempty"`
}

type PolicyNudgeRulesServiceConfiguration struct {
	Items []string `xml:",any" json:"items,omitempty"`
}

type ArrayOfFolderIdType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`
}

type FindMessageTrackingSearchResultType struct {
	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	Sender *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recipients,omitempty" json:"Recipients,omitempty"`

	SubmittedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubmittedTime,omitempty" json:"SubmittedTime,omitempty"`

	MessageTrackingReportId *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingReportId,omitempty" json:"MessageTrackingReportId,omitempty"`

	PreviousHopServer *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreviousHopServer,omitempty" json:"PreviousHopServer,omitempty"`

	FirstHopServer *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FirstHopServer,omitempty" json:"FirstHopServer,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties,omitempty" json:"Properties,omitempty"`
}

type ArrayOfFindMessageTrackingSearchResultType struct {
	MessageTrackingSearchResult *FindMessageTrackingSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingSearchResult,omitempty" json:"MessageTrackingSearchResult,omitempty"`
}

type RecipientTrackingEventType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientTrackingEvent"`

	Date xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types Date,omitempty" json:"Date,omitempty"`

	Recipient *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Recipient,omitempty" json:"Recipient,omitempty"`

	DeliveryStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeliveryStatus,omitempty" json:"DeliveryStatus,omitempty"`

	EventDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventDescription,omitempty" json:"EventDescription,omitempty"`

	EventData *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventData,omitempty" json:"EventData,omitempty"`

	Server *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Server,omitempty" json:"Server,omitempty"`

	InternalId *NonNegativeInteger `xml:"http://schemas.microsoft.com/exchange/services/2006/types InternalId,omitempty" json:"InternalId,omitempty"`

	BccRecipient bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types BccRecipient,omitempty" json:"BccRecipient,omitempty"`

	HiddenRecipient bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HiddenRecipient,omitempty" json:"HiddenRecipient,omitempty"`

	UniquePathId *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniquePathId,omitempty" json:"UniquePathId,omitempty"`

	RootAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RootAddress,omitempty" json:"RootAddress,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties,omitempty" json:"Properties,omitempty"`
}

type MessageTrackingReportType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageTrackingReport"`

	Sender *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`

	PurportedSender *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PurportedSender,omitempty" json:"PurportedSender,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	SubmitTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types SubmitTime,omitempty" json:"SubmitTime,omitempty"`

	OriginalRecipients *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OriginalRecipients,omitempty" json:"OriginalRecipients,omitempty"`

	RecipientTrackingEvents *ArrayOfRecipientTrackingEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientTrackingEvents,omitempty" json:"RecipientTrackingEvents,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties,omitempty" json:"Properties,omitempty"`
}

type TrackingPropertyType struct {
	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfTrackingPropertiesType struct {
	TrackingPropertyType *TrackingPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrackingPropertyType,omitempty" json:"TrackingPropertyType,omitempty"`
}

type ArrayOfArraysOfTrackingPropertiesType struct {
	ArrayOfTrackingPropertiesType *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ArrayOfTrackingPropertiesType,omitempty" json:"ArrayOfTrackingPropertiesType,omitempty"`
}

type ArrayOfRecipientTrackingEventType struct {
	RecipientTrackingEvent *RecipientTrackingEventType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RecipientTrackingEvent,omitempty" json:"RecipientTrackingEvent,omitempty"`
}

type RulePredicateSizeRangeType struct {
	MinimumSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MinimumSize,omitempty" json:"MinimumSize,omitempty"`

	MaximumSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaximumSize,omitempty" json:"MaximumSize,omitempty"`
}

type RulePredicateDateRangeType struct {
	StartDateTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartDateTime,omitempty" json:"StartDateTime,omitempty"`

	EndDateTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndDateTime,omitempty" json:"EndDateTime,omitempty"`
}

type RulePredicatesType struct {
	Categories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Categories,omitempty" json:"Categories,omitempty"`

	ContainsBodyStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsBodyStrings,omitempty" json:"ContainsBodyStrings,omitempty"`

	ContainsHeaderStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsHeaderStrings,omitempty" json:"ContainsHeaderStrings,omitempty"`

	ContainsRecipientStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsRecipientStrings,omitempty" json:"ContainsRecipientStrings,omitempty"`

	ContainsSenderStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsSenderStrings,omitempty" json:"ContainsSenderStrings,omitempty"`

	ContainsSubjectOrBodyStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsSubjectOrBodyStrings,omitempty" json:"ContainsSubjectOrBodyStrings,omitempty"`

	ContainsSubjectStrings *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainsSubjectStrings,omitempty" json:"ContainsSubjectStrings,omitempty"`

	FlaggedForAction *FlaggedForActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FlaggedForAction,omitempty" json:"FlaggedForAction,omitempty"`

	FromAddresses *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FromAddresses,omitempty" json:"FromAddresses,omitempty"`

	FromConnectedAccounts *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FromConnectedAccounts,omitempty" json:"FromConnectedAccounts,omitempty"`

	HasAttachments bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasAttachments,omitempty" json:"HasAttachments,omitempty"`

	Importance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Importance,omitempty" json:"Importance,omitempty"`

	IsApprovalRequest bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsApprovalRequest,omitempty" json:"IsApprovalRequest,omitempty"`

	IsAutomaticForward bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAutomaticForward,omitempty" json:"IsAutomaticForward,omitempty"`

	IsAutomaticReply bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAutomaticReply,omitempty" json:"IsAutomaticReply,omitempty"`

	IsEncrypted bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsEncrypted,omitempty" json:"IsEncrypted,omitempty"`

	IsMeetingRequest bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMeetingRequest,omitempty" json:"IsMeetingRequest,omitempty"`

	IsMeetingResponse bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMeetingResponse,omitempty" json:"IsMeetingResponse,omitempty"`

	IsNDR bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsNDR,omitempty" json:"IsNDR,omitempty"`

	IsPermissionControlled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPermissionControlled,omitempty" json:"IsPermissionControlled,omitempty"`

	IsReadReceipt bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsReadReceipt,omitempty" json:"IsReadReceipt,omitempty"`

	IsSigned bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsSigned,omitempty" json:"IsSigned,omitempty"`

	IsVoicemail bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsVoicemail,omitempty" json:"IsVoicemail,omitempty"`

	ItemClasses *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemClasses,omitempty" json:"ItemClasses,omitempty"`

	MessageClassifications *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageClassifications,omitempty" json:"MessageClassifications,omitempty"`

	NotSentToMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types NotSentToMe,omitempty" json:"NotSentToMe,omitempty"`

	SentCcMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentCcMe,omitempty" json:"SentCcMe,omitempty"`

	SentOnlyToMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentOnlyToMe,omitempty" json:"SentOnlyToMe,omitempty"`

	SentToAddresses *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentToAddresses,omitempty" json:"SentToAddresses,omitempty"`

	SentToMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentToMe,omitempty" json:"SentToMe,omitempty"`

	SentToOrCcMe bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentToOrCcMe,omitempty" json:"SentToOrCcMe,omitempty"`

	Sensitivity *SensitivityChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sensitivity,omitempty" json:"Sensitivity,omitempty"`

	WithinDateRange *RulePredicateDateRangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WithinDateRange,omitempty" json:"WithinDateRange,omitempty"`

	WithinSizeRange *RulePredicateSizeRangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WithinSizeRange,omitempty" json:"WithinSizeRange,omitempty"`
}

type RuleActionsType struct {
	AssignCategories *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AssignCategories,omitempty" json:"AssignCategories,omitempty"`

	CopyToFolder *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CopyToFolder,omitempty" json:"CopyToFolder,omitempty"`

	Delete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Delete,omitempty" json:"Delete,omitempty"`

	ForwardAsAttachmentToRecipients *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardAsAttachmentToRecipients,omitempty" json:"ForwardAsAttachmentToRecipients,omitempty"`

	ForwardToRecipients *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ForwardToRecipients,omitempty" json:"ForwardToRecipients,omitempty"`

	MarkImportance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarkImportance,omitempty" json:"MarkImportance,omitempty"`

	MarkAsRead bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarkAsRead,omitempty" json:"MarkAsRead,omitempty"`

	MoveToFolder *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MoveToFolder,omitempty" json:"MoveToFolder,omitempty"`

	PermanentDelete bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types PermanentDelete,omitempty" json:"PermanentDelete,omitempty"`

	RedirectToRecipients *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RedirectToRecipients,omitempty" json:"RedirectToRecipients,omitempty"`

	SendSMSAlertToRecipients *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SendSMSAlertToRecipients,omitempty" json:"SendSMSAlertToRecipients,omitempty"`

	ServerReplyWithMessage *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerReplyWithMessage,omitempty" json:"ServerReplyWithMessage,omitempty"`

	StopProcessingRules bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types StopProcessingRules,omitempty" json:"StopProcessingRules,omitempty"`
}

type RuleType struct {
	RuleId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleId,omitempty" json:"RuleId,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	Priority int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Priority,omitempty" json:"Priority,omitempty"`

	IsEnabled bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsEnabled,omitempty" json:"IsEnabled,omitempty"`

	IsNotSupported bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsNotSupported,omitempty" json:"IsNotSupported,omitempty"`

	IsInError bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsInError,omitempty" json:"IsInError,omitempty"`

	Conditions *RulePredicatesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conditions,omitempty" json:"Conditions,omitempty"`

	Exceptions *RulePredicatesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Exceptions,omitempty" json:"Exceptions,omitempty"`

	Actions *RuleActionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Actions,omitempty" json:"Actions,omitempty"`
}

type ArrayOfRulesType struct {
	Rule []*RuleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule,omitempty" json:"Rule,omitempty"`
}

type RuleValidationErrorType struct {
	FieldURI *RuleFieldURIType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldURI,omitempty" json:"FieldURI,omitempty"`

	ErrorCode *RuleValidationErrorCodeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	FieldValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FieldValue,omitempty" json:"FieldValue,omitempty"`
}

type ArrayOfRuleValidationErrorsType struct {
	Error []*RuleValidationErrorType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Error,omitempty" json:"Error,omitempty"`
}

type RuleOperationType struct {
}

type ArrayOfRuleOperationsType struct {
	CreateRuleOperation *CreateRuleOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateRuleOperation,omitempty" json:"CreateRuleOperation,omitempty"`

	SetRuleOperation *SetRuleOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetRuleOperation,omitempty" json:"SetRuleOperation,omitempty"`

	DeleteRuleOperation *DeleteRuleOperationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteRuleOperation,omitempty" json:"DeleteRuleOperation,omitempty"`
}

type CreateRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreateRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule,omitempty" json:"Rule,omitempty"`
}

type SetRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SetRuleOperation"`

	*RuleOperationType

	Rule *RuleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Rule,omitempty" json:"Rule,omitempty"`
}

type DeleteRuleOperationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteRuleOperation"`

	*RuleOperationType

	RuleId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleId,omitempty" json:"RuleId,omitempty"`
}

type RuleOperationErrorType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleOperationError"`

	OperationIndex int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types OperationIndex,omitempty" json:"OperationIndex,omitempty"`

	ValidationErrors *ArrayOfRuleValidationErrorsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ValidationErrors,omitempty" json:"ValidationErrors,omitempty"`
}

type ArrayOfRuleOperationErrorsType struct {
	RuleOperationError []*RuleOperationErrorType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RuleOperationError,omitempty" json:"RuleOperationError,omitempty"`
}

type ArrayOfSearchItemKindsType struct {
	SearchItemKind []*SearchItemKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchItemKind,omitempty" json:"SearchItemKind,omitempty"`
}

type UserMailboxType struct {
	Id string `xml:"Id,attr,omitempty" json:"Id,omitempty"`

	IsArchive bool `xml:"IsArchive,attr,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfUserMailboxesType struct {
	UserMailbox []*UserMailboxType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserMailbox,omitempty" json:"UserMailbox,omitempty"`
}

type SearchableMailboxType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchableMailbox"`

	Guid *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Guid,omitempty" json:"Guid,omitempty"`

	PrimarySmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	IsExternalMailbox bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsExternalMailbox,omitempty" json:"IsExternalMailbox,omitempty"`

	ExternalEmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExternalEmailAddress,omitempty" json:"ExternalEmailAddress,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	IsMembershipGroup bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMembershipGroup,omitempty" json:"IsMembershipGroup,omitempty"`

	ReferenceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceId,omitempty" json:"ReferenceId,omitempty"`
}

type ArrayOfSearchableMailboxesType struct {
	SearchableMailbox []*SearchableMailboxType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchableMailbox,omitempty" json:"SearchableMailbox,omitempty"`
}

type KeywordStatisticsSearchResultType struct {
	Keyword string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Keyword,omitempty" json:"Keyword,omitempty"`

	ItemHits int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemHits,omitempty" json:"ItemHits,omitempty"`

	Size int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfKeywordStatisticsSearchResultsType struct {
	KeywordStat []*KeywordStatisticsSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types KeywordStat,omitempty" json:"KeywordStat,omitempty"`
}

type MailboxStatisticsSearchResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStatisticsSearchResult"`

	UserMailbox *UserMailboxType `xml:"http://schemas.microsoft.com/exchange/services/2006/types UserMailbox,omitempty" json:"UserMailbox,omitempty"`

	KeywordStatisticsSearchResult *KeywordStatisticsSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types KeywordStatisticsSearchResult,omitempty" json:"KeywordStatisticsSearchResult,omitempty"`
}

type ExtendedAttributeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedAttribute"`

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfExtendedAttributesType struct {
	ExtendedAttribute []*ExtendedAttributeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedAttribute,omitempty" json:"ExtendedAttribute,omitempty"`
}

type MailboxSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxSearchScope"`

	Mailbox string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	SearchScope *MailboxSearchLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchScope,omitempty" json:"SearchScope,omitempty"`

	ExtendedAttributes *ArrayOfExtendedAttributesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedAttributes,omitempty" json:"ExtendedAttributes,omitempty"`
}

type NonEmptyArrayOfMailboxSearchScopesType struct {
	MailboxSearchScope []*MailboxSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxSearchScope,omitempty" json:"MailboxSearchScope,omitempty"`
}

type MailboxQueryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxQuery"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Query,omitempty" json:"Query,omitempty"`

	MailboxSearchScopes *NonEmptyArrayOfMailboxSearchScopesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxSearchScopes,omitempty" json:"MailboxSearchScopes,omitempty"`
}

type PreviewItemMailboxType struct {
	MailboxId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxId,omitempty" json:"MailboxId,omitempty"`

	PrimarySmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`
}

type NonEmptyArrayOfMailboxQueriesType struct {
	MailboxQuery []*MailboxQueryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxQuery,omitempty" json:"MailboxQuery,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIsType struct {
	ExtendedFieldURI *PathToExtendedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedFieldURI,omitempty" json:"ExtendedFieldURI,omitempty"`
}

type PreviewItemResponseShapeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PreviewItemResponseShape"`

	BaseShape *PreviewItemBaseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BaseShape,omitempty" json:"BaseShape,omitempty"`

	AdditionalProperties *NonEmptyArrayOfExtendedFieldURIsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type SearchPreviewItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchPreviewItem"`

	Id *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	Mailbox *PreviewItemMailboxType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	ParentId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentId,omitempty" json:"ParentId,omitempty"`

	ItemClass *ItemClassType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemClass,omitempty" json:"ItemClass,omitempty"`

	UniqueHash string `xml:"http://schemas.microsoft.com/exchange/services/2006/types UniqueHash,omitempty" json:"UniqueHash,omitempty"`

	SortValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SortValue,omitempty" json:"SortValue,omitempty"`

	OwaLink string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OwaLink,omitempty" json:"OwaLink,omitempty"`

	Sender string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`

	ToRecipients *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ToRecipients,omitempty" json:"ToRecipients,omitempty"`

	CcRecipients *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CcRecipients,omitempty" json:"CcRecipients,omitempty"`

	BccRecipients *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types BccRecipients,omitempty" json:"BccRecipients,omitempty"`

	CreatedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedTime,omitempty" json:"CreatedTime,omitempty"`

	ReceivedTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReceivedTime,omitempty" json:"ReceivedTime,omitempty"`

	SentTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types SentTime,omitempty" json:"SentTime,omitempty"`

	Subject string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Subject,omitempty" json:"Subject,omitempty"`

	Size int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`

	Preview string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Preview,omitempty" json:"Preview,omitempty"`

	Importance *ImportanceChoicesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Importance,omitempty" json:"Importance,omitempty"`

	Read bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Read,omitempty" json:"Read,omitempty"`

	HasAttachment bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasAttachment,omitempty" json:"HasAttachment,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type ArrayOfSearchPreviewItemsType struct {
	SearchPreviewItem []*SearchPreviewItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchPreviewItem,omitempty" json:"SearchPreviewItem,omitempty"`
}

type FailedSearchMailboxType struct {
	Mailbox string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	ErrorCode int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorMessage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`

	IsArchive bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsArchive,omitempty" json:"IsArchive,omitempty"`
}

type ArrayOfFailedSearchMailboxesType struct {
	FailedMailbox []*FailedSearchMailboxType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FailedMailbox,omitempty" json:"FailedMailbox,omitempty"`
}

type SearchMailboxesResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchMailboxesResult"`

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResultType,omitempty" json:"ResultType,omitempty"`

	ItemCount int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`

	PageItemCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PageItemCount,omitempty" json:"PageItemCount,omitempty"`

	PageItemSize int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types PageItemSize,omitempty" json:"PageItemSize,omitempty"`

	KeywordStats *ArrayOfKeywordStatisticsSearchResultsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types KeywordStats,omitempty" json:"KeywordStats,omitempty"`

	Items *ArrayOfSearchPreviewItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`

	Refiners *ArrayOfSearchRefinerItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Refiners,omitempty" json:"Refiners,omitempty"`

	MailboxStats *ArrayOfMailboxStatisticsItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStats,omitempty" json:"MailboxStats,omitempty"`
}

type SearchRefinerItemType struct {
	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`

	Count int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Count,omitempty" json:"Count,omitempty"`

	Token string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Token,omitempty" json:"Token,omitempty"`
}

type ArrayOfSearchRefinerItemsType struct {
	Refiner []*SearchRefinerItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Refiner,omitempty" json:"Refiner,omitempty"`
}

type OneDriveItemType struct {
	*ItemType

	ResourceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResourceId,omitempty" json:"ResourceId,omitempty"`
}

type FileItemType struct {
	*ItemType

	FileName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileName,omitempty" json:"FileName,omitempty"`

	FileExtension string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileSize int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileSize,omitempty" json:"FileSize,omitempty"`

	FileCreatedTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileCreatedTime,omitempty" json:"FileCreatedTime,omitempty"`

	FileModifiedTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileModifiedTime,omitempty" json:"FileModifiedTime,omitempty"`

	StorageProviderContext string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StorageProviderContext,omitempty" json:"StorageProviderContext,omitempty"`

	FileID string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileID,omitempty" json:"FileID,omitempty"`

	ItemReferenceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemReferenceId,omitempty" json:"ItemReferenceId,omitempty"`

	ReferenceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceId,omitempty" json:"ReferenceId,omitempty"`

	Sender string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Sender,omitempty" json:"Sender,omitempty"`

	ItemReceivedTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemReceivedTime,omitempty" json:"ItemReceivedTime,omitempty"`

	ItemPath string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemPath,omitempty" json:"ItemPath,omitempty"`

	ItemSentTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemSentTime,omitempty" json:"ItemSentTime,omitempty"`

	FileContexts *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileContexts,omitempty" json:"FileContexts,omitempty"`

	VisualizationContainerUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types VisualizationContainerUrl,omitempty" json:"VisualizationContainerUrl,omitempty"`

	VisualizationContainerTitle string `xml:"http://schemas.microsoft.com/exchange/services/2006/types VisualizationContainerTitle,omitempty" json:"VisualizationContainerTitle,omitempty"`

	VisualizationAccessUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types VisualizationAccessUrl,omitempty" json:"VisualizationAccessUrl,omitempty"`

	ReferenceAttachmentProviderEndpoint string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceAttachmentProviderEndpoint,omitempty" json:"ReferenceAttachmentProviderEndpoint,omitempty"`

	ReferenceAttachmentProviderType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReferenceAttachmentProviderType,omitempty" json:"ReferenceAttachmentProviderType,omitempty"`

	ItemConversationId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemConversationId,omitempty" json:"ItemConversationId,omitempty"`

	SharepointItemListId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharepointItemListId,omitempty" json:"SharepointItemListId,omitempty"`

	SharepointItemListItemId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharepointItemListItemId,omitempty" json:"SharepointItemListItemId,omitempty"`

	SharepointItemSiteId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharepointItemSiteId,omitempty" json:"SharepointItemSiteId,omitempty"`

	SharepointItemSitePath string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharepointItemSitePath,omitempty" json:"SharepointItemSitePath,omitempty"`

	SharepointItemWebId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharepointItemWebId,omitempty" json:"SharepointItemWebId,omitempty"`

	AttachmentId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttachmentId,omitempty" json:"AttachmentId,omitempty"`
}

type DocumentFileItemType struct {
	*FileItemType

	Author *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Author,omitempty" json:"Author,omitempty"`

	Title string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Title,omitempty" json:"Title,omitempty"`

	LastModifiedBy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastModifiedBy,omitempty" json:"LastModifiedBy,omitempty"`
}

type DelveItemType struct {
	*ItemType

	GraphNodeLogicalId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types GraphNodeLogicalId,omitempty" json:"GraphNodeLogicalId,omitempty"`
}

type MailboxStatisticsItemType struct {
	MailboxId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxId,omitempty" json:"MailboxId,omitempty"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	ItemCount int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemCount,omitempty" json:"ItemCount,omitempty"`

	Size int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Size,omitempty" json:"Size,omitempty"`
}

type ArrayOfMailboxStatisticsItemsType struct {
	MailboxStat []*MailboxStatisticsItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxStat,omitempty" json:"MailboxStat,omitempty"`
}

type MailboxHoldStatusType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldStatus"`

	Mailbox string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	Status *HoldStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Status,omitempty" json:"Status,omitempty"`

	AdditionalInfo string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfMailboxHoldStatusType struct {
	MailboxHoldStatus []*MailboxHoldStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldStatus,omitempty" json:"MailboxHoldStatus,omitempty"`
}

type MailboxHoldResultType struct {
	HoldId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types HoldId,omitempty" json:"HoldId,omitempty"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Query,omitempty" json:"Query,omitempty"`

	MailboxHoldStatuses *ArrayOfMailboxHoldStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxHoldStatuses,omitempty" json:"MailboxHoldStatuses,omitempty"`
}

type NonEmptyArrayOfLegacyDNsType struct {
	LegacyDN []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LegacyDN,omitempty" json:"LegacyDN,omitempty"`
}

type NonIndexableItemStatisticType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemStatistic"`

	Mailbox string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mailbox,omitempty" json:"Mailbox,omitempty"`

	ItemCount int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemCount,omitempty" json:"ItemCount,omitempty"`

	ErrorMessage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorMessage,omitempty" json:"ErrorMessage,omitempty"`
}

type ArrayOfNonIndexableItemStatisticsType struct {
	NonIndexableItemStatistic []*NonIndexableItemStatisticType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemStatistic,omitempty" json:"NonIndexableItemStatistic,omitempty"`
}

type NonIndexableItemDetailType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemDetail"`

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	ErrorCode *ItemIndexErrorType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorCode,omitempty" json:"ErrorCode,omitempty"`

	ErrorDescription string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ErrorDescription,omitempty" json:"ErrorDescription,omitempty"`

	IsPartiallyIndexed bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPartiallyIndexed,omitempty" json:"IsPartiallyIndexed,omitempty"`

	IsPermanentFailure bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsPermanentFailure,omitempty" json:"IsPermanentFailure,omitempty"`

	SortValue string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SortValue,omitempty" json:"SortValue,omitempty"`

	AttemptCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttemptCount,omitempty" json:"AttemptCount,omitempty"`

	LastAttemptTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types LastAttemptTime,omitempty" json:"LastAttemptTime,omitempty"`

	AdditionalInfo string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AdditionalInfo,omitempty" json:"AdditionalInfo,omitempty"`
}

type ArrayOfNonIndexableItemDetailsType struct {
	NonIndexableItemDetail []*NonIndexableItemDetailType `xml:"http://schemas.microsoft.com/exchange/services/2006/types NonIndexableItemDetail,omitempty" json:"NonIndexableItemDetail,omitempty"`
}

type NonIndexableItemDetailResultType struct {
	Items *ArrayOfNonIndexableItemDetailsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Items,omitempty" json:"Items,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type DiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiscoverySearchConfiguration"`

	SearchId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchId,omitempty" json:"SearchId,omitempty"`

	SearchQuery string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchQuery,omitempty" json:"SearchQuery,omitempty"`

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	InPlaceHoldIdentity string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ManagedByOrganization string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ManagedByOrganization,omitempty" json:"ManagedByOrganization,omitempty"`

	Language string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Language,omitempty" json:"Language,omitempty"`
}

type ArrayOfDiscoverySearchConfigurationType struct {
	DiscoverySearchConfiguration []*DiscoverySearchConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiscoverySearchConfiguration,omitempty" json:"DiscoverySearchConfiguration,omitempty"`
}

type RetentionTagType struct {
	Value *GuidType `xml:",chardata" json:"-,"`

	IsExplicit bool `xml:"IsExplicit,attr,omitempty" json:"IsExplicit,omitempty"`
}

type RetentionPolicyTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyTag"`

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	RetentionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionId,omitempty" json:"RetentionId,omitempty"`

	RetentionPeriod int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPeriod,omitempty" json:"RetentionPeriod,omitempty"`

	Type *ElcFolderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	RetentionAction *RetentionActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionAction,omitempty" json:"RetentionAction,omitempty"`

	Description string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Description,omitempty" json:"Description,omitempty"`

	IsVisible bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsVisible,omitempty" json:"IsVisible,omitempty"`

	OptedInto bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types OptedInto,omitempty" json:"OptedInto,omitempty"`

	IsArchive bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsArchive,omitempty" json:"IsArchive,omitempty"`

	ParentLabelIdentity string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentLabelIdentity,omitempty" json:"ParentLabelIdentity,omitempty"`

	Priority int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Priority,omitempty" json:"Priority,omitempty"`
}

type ArrayOfRetentionPolicyTagsType struct {
	RetentionPolicyTag []*RetentionPolicyTagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RetentionPolicyTag,omitempty" json:"RetentionPolicyTag,omitempty"`
}

type ClientExtensionType struct {
	SpecificUsers *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SpecificUsers,omitempty" json:"SpecificUsers,omitempty"`

	Manifest []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Manifest,omitempty" json:"Manifest,omitempty"`

	IsAvailable bool `xml:"IsAvailable,attr,omitempty" json:"IsAvailable,omitempty"`

	IsMandatory bool `xml:"IsMandatory,attr,omitempty" json:"IsMandatory,omitempty"`

	IsEnabledByDefault bool `xml:"IsEnabledByDefault,attr,omitempty" json:"IsEnabledByDefault,omitempty"`

	ProvidedTo *ClientExtensionProvidedToType `xml:"ProvidedTo,attr,omitempty" json:"ProvidedTo,omitempty"`

	Type *ClientExtensionTypeType `xml:"Type,attr,omitempty" json:"Type,omitempty"`

	Scope *ClientExtensionScopeType `xml:"Scope,attr,omitempty" json:"Scope,omitempty"`

	MarketplaceAssetId string `xml:"MarketplaceAssetId,attr,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket string `xml:"MarketplaceContentMarket,attr,omitempty" json:"MarketplaceContentMarket,omitempty"`

	AppStatus string `xml:"AppStatus,attr,omitempty" json:"AppStatus,omitempty"`

	Etoken string `xml:"Etoken,attr,omitempty" json:"Etoken,omitempty"`

	InstalledDateTime string `xml:"InstalledDateTime,attr,omitempty" json:"InstalledDateTime,omitempty"`
}

type ImGroupType struct {
	DisplayName *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupType *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupType,omitempty" json:"GroupType,omitempty"`

	ExchangeStoreId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExchangeStoreId,omitempty" json:"ExchangeStoreId,omitempty"`

	MemberCorrelationKey *NonEmptyArrayOfItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MemberCorrelationKey,omitempty" json:"MemberCorrelationKey,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`

	SmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type ArrayOfImGroupType struct {
	ImGroup *ImGroupType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type ImItemListType struct {
	Groups *ArrayOfImGroupType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Groups,omitempty" json:"Groups,omitempty"`

	Personas *ArrayOfPeopleType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Personas,omitempty" json:"Personas,omitempty"`
}

type NonEmptyArrayOfExtendedFieldURIs struct {
	ExtendedProperty *PathToExtendedFieldType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedProperty,omitempty" json:"ExtendedProperty,omitempty"`
}

type NonEmptyStateDefinitionType struct {
	DeletedOccurrenceStateDefinition *DeletedOccurrenceStateDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrenceStateDefinition,omitempty" json:"DeletedOccurrenceStateDefinition,omitempty"`

	DeleteFromFolderStateDefinition *DeleteFromFolderStateDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFromFolderStateDefinition,omitempty" json:"DeleteFromFolderStateDefinition,omitempty"`

	LocationBasedStateDefinition *LocationBasedStateDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationBasedStateDefinition,omitempty" json:"LocationBasedStateDefinition,omitempty"`
}

type BaseCalendarItemStateDefinitionType struct {
}

type DeletedOccurrenceStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeletedOccurrenceStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OccurrenceDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceDate,omitempty" json:"OccurrenceDate,omitempty"`

	IsOccurrencePresent bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOccurrencePresent,omitempty" json:"IsOccurrencePresent,omitempty"`
}

type DeleteFromFolderStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeleteFromFolderStateDefinition"`

	*BaseCalendarItemStateDefinitionType
}

type LocationBasedStateDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationBasedStateDefinition"`

	*BaseCalendarItemStateDefinitionType

	OrganizerLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types OrganizerLocation,omitempty" json:"OrganizerLocation,omitempty"`

	AttendeeLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeLocation,omitempty" json:"AttendeeLocation,omitempty"`
}

type MeetingSpaceType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Type *MeetingSpaceTypeEnum `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	Version string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,omitempty" json:"Version,omitempty"`

	JoinUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	ExpiryTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExpiryTime,omitempty" json:"ExpiryTime,omitempty"`

	Meadata string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Meadata,omitempty" json:"Meadata,omitempty"`

	Tag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Tag,omitempty" json:"Tag,omitempty"`
}

type ParticipantActivity struct {
	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	CreatedBy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	StartTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`

	ClientVersion string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	Role *ParticipantActivityRole `xml:"http://schemas.microsoft.com/exchange/services/2006/types Role,omitempty" json:"Role,omitempty"`

	MediaType *ParticipantActivityMediaType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MediaType,omitempty" json:"MediaType,omitempty"`

	MediaDetails string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MediaDetails,omitempty" json:"MediaDetails,omitempty"`
}

type NonEmptyArrayOfParticipantActivities struct {
	ParticipantActivity []*ParticipantActivity `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParticipantActivity,omitempty" json:"ParticipantActivity,omitempty"`
}

type ContentActivity struct {
	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	SharedBy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SharedBy,omitempty" json:"SharedBy,omitempty"`

	ContentLocation string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentLocation,omitempty" json:"ContentLocation,omitempty"`

	StartTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	EndTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTime,omitempty" json:"EndTime,omitempty"`

	Type *ContentActivityType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	MediaType *ContentActivityMediaType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MediaType,omitempty" json:"MediaType,omitempty"`

	Acl *ContentActivityAcl `xml:"http://schemas.microsoft.com/exchange/services/2006/types Acl,omitempty" json:"Acl,omitempty"`
}

type NonEmptyArrayOfContentActivities struct {
	ContentActivity []*ContentActivity `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentActivity,omitempty" json:"ContentActivity,omitempty"`
}

type MeetingInstanceType struct {
	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	ChangeKey string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ChangeKey,omitempty" json:"ChangeKey,omitempty"`

	Version string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,omitempty" json:"Version,omitempty"`

	JoinUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types JoinUrl,omitempty" json:"JoinUrl,omitempty"`

	DateTimeCreated string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeCreated,omitempty" json:"DateTimeCreated,omitempty"`

	DateTimeModified string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DateTimeModified,omitempty" json:"DateTimeModified,omitempty"`

	Meadata string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Meadata,omitempty" json:"Meadata,omitempty"`

	Tag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Tag,omitempty" json:"Tag,omitempty"`

	ParentGoid string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParentGoid,omitempty" json:"ParentGoid,omitempty"`

	ParticipantActivities *NonEmptyArrayOfParticipantActivities `xml:"http://schemas.microsoft.com/exchange/services/2006/types ParticipantActivities,omitempty" json:"ParticipantActivities,omitempty"`

	ContentActivities *NonEmptyArrayOfContentActivities `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContentActivities,omitempty" json:"ContentActivities,omitempty"`
}

type SearchFolderScopeType struct {
	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`

	WellKnownFolder *DistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WellKnownFolder,omitempty" json:"WellKnownFolder,omitempty"`
}

type PrimaryMailboxSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimaryMailboxSearchScope"`

	FolderScope *SearchFolderScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type LargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LargeArchiveSearchScope"`

	ArchiveTypes *SearchScopeArchivesType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ArchiveTypes,omitempty" json:"ArchiveTypes,omitempty"`
}

type GroupSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSearchScope"`

	GroupTypes *SearchScopeGroupsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupTypes,omitempty" json:"GroupTypes,omitempty"`
}

type SingleLargeArchiveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SingleLargeArchiveSearchScope"`

	MailboxGuid *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type OneDriveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types OneDriveSearchScope"`

	OneDriveView *OneDriveViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OneDriveView,omitempty" json:"OneDriveView,omitempty"`
}

type DelveSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelveSearchScope"`

	DelveView *DelveViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelveView,omitempty" json:"DelveView,omitempty"`
}

type CustomSearchScopeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types CustomSearchScope"`

	MailboxGuid *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxGuid,omitempty" json:"MailboxGuid,omitempty"`

	FolderScope *SearchFolderScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderScope,omitempty" json:"FolderScope,omitempty"`

	IsDeepTraversal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`
}

type ArrayOfSearchScopeType struct {
	PrimaryMailboxSearchScope *PrimaryMailboxSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimaryMailboxSearchScope,omitempty" json:"PrimaryMailboxSearchScope,omitempty"`

	LargeArchiveSearchScope *LargeArchiveSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types LargeArchiveSearchScope,omitempty" json:"LargeArchiveSearchScope,omitempty"`

	GroupSearchScope *GroupSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types GroupSearchScope,omitempty" json:"GroupSearchScope,omitempty"`

	CustomSearchScope *CustomSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CustomSearchScope,omitempty" json:"CustomSearchScope,omitempty"`

	OneDriveSearchScope *OneDriveSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OneDriveSearchScope,omitempty" json:"OneDriveSearchScope,omitempty"`

	SingleLargeArchiveSearchScope *SingleLargeArchiveSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SingleLargeArchiveSearchScope,omitempty" json:"SingleLargeArchiveSearchScope,omitempty"`

	DelveSearchScope *DelveSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DelveSearchScope,omitempty" json:"DelveSearchScope,omitempty"`
}

type DynamicRefinerQueryType struct {
	RefinerQuery string `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefinerQuery,omitempty" json:"RefinerQuery,omitempty"`

	TDRefinerId int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TDRefinerId,omitempty" json:"TDRefinerId,omitempty"`
}

type ExtendedKeywordDefinitionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtendedKeywordDefinition"`

	Keyword string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Keyword,omitempty" json:"Keyword,omitempty"`

	Properties *NonEmptyArrayOfExtendedFieldURIsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Properties,omitempty" json:"Properties,omitempty"`
}

type SuggestionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Suggestion"`

	SuggestedQuery string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestedQuery,omitempty" json:"SuggestedQuery,omitempty"`

	DisplayText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayText,omitempty" json:"DisplayText,omitempty"`

	SuggestionType *SuggestionKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionType,omitempty" json:"SuggestionType,omitempty"`

	Trigger string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Trigger,omitempty" json:"Trigger,omitempty"`

	TDSuggestionId int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TDSuggestionId,omitempty" json:"TDSuggestionId,omitempty"`

	IsDeletable bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsDeletable,omitempty" json:"IsDeletable,omitempty"`
}

type PeopleSuggestionType struct {
	*SuggestionType

	PrimarySmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PrimarySmtpAddress,omitempty" json:"PrimarySmtpAddress,omitempty"`

	PersonType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types PersonType,omitempty" json:"PersonType,omitempty"`
}

type FileSuggestionType struct {
	*SuggestionType

	FileName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileName,omitempty" json:"FileName,omitempty"`

	FileExtension string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileExtension,omitempty" json:"FileExtension,omitempty"`

	FileReferenceId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileReferenceId,omitempty" json:"FileReferenceId,omitempty"`

	FileTitle string `xml:"http://schemas.microsoft.com/exchange/services/2006/types FileTitle,omitempty" json:"FileTitle,omitempty"`

	ContainerTitle string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainerTitle,omitempty" json:"ContainerTitle,omitempty"`

	ContainerUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContainerUrl,omitempty" json:"ContainerUrl,omitempty"`
}

type SearchSuggestionsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchSuggestions"`

	TDSuggestionsBatchId int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TDSuggestionsBatchId,omitempty" json:"TDSuggestionsBatchId,omitempty"`

	TDSuggestionsInstanceId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types TDSuggestionsInstanceId,omitempty" json:"TDSuggestionsInstanceId,omitempty"`

	Suggestions struct {
		Suggestion []*SuggestionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Suggestion,omitempty" json:"Suggestion,omitempty"`
	} `Suggestions,omitempty" json:"Suggestions,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type DeleteSearchSuggestionResponseType struct {
	Success bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types Success,omitempty" json:"Success,omitempty"`

	StatusMessage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StatusMessage,omitempty" json:"StatusMessage,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`
}

type SearchDiagnosticsStepType struct {
	StartTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTime,omitempty" json:"StartTime,omitempty"`

	StepTime int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StepTime,omitempty" json:"StepTime,omitempty"`

	StepType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types StepType,omitempty" json:"StepType,omitempty"`

	AdditionalEntries struct {
		Entry []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Entry,omitempty" json:"Entry,omitempty"`
	} `AdditionalEntries,omitempty" json:"AdditionalEntries,omitempty"`
}

type SearchRefinerType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchRefiner"`

	RefinerType *RefinerTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefinerType,omitempty" json:"RefinerType,omitempty"`

	Refiner *DynamicRefinerQueryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Refiner,omitempty" json:"Refiner,omitempty"`

	ResultCount int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResultCount,omitempty" json:"ResultCount,omitempty"`
}

type FolderRefinerType struct {
	*SearchRefinerType

	FolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FolderId,omitempty" json:"FolderId,omitempty"`
}

type PeopleRefinerType struct {
	*SearchRefinerType

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`

	SmtpAddress *SmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`
}

type MailboxRefinerType struct {
	*SearchRefinerType

	MailboxDisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxDisplayName,omitempty" json:"MailboxDisplayName,omitempty"`
}

type AttachmentRefinerType struct {
	*SearchRefinerType

	HasAttachment bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types HasAttachment,omitempty" json:"HasAttachment,omitempty"`
}

type HashtagRefinerType struct {
	*SearchRefinerType

	DisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type SearchDiagnosticsType struct {
}

type MailboxInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxInformation"`
}

type ExecuteSearchQueryIdType struct {
	Id *GuidType `xml:"Id,attr,omitempty" json:"Id,omitempty"`
}

type SearchResultsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchResults"`

	Items struct {
		Item []*ItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Item,omitempty" json:"Item,omitempty"`
	} `Items,omitempty" json:"Items,omitempty"`

	Conversations struct {
		Conversation []*ConversationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Conversation,omitempty" json:"Conversation,omitempty"`
	} `Conversations,omitempty" json:"Conversations,omitempty"`

	People struct {
		Persona []*PersonaType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Persona,omitempty" json:"Persona,omitempty"`
	} `People,omitempty" json:"People,omitempty"`

	MoreResultsAvailable bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types MoreResultsAvailable,omitempty" json:"MoreResultsAvailable,omitempty"`

	RefinerTelemetryBatchId int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types RefinerTelemetryBatchId,omitempty" json:"RefinerTelemetryBatchId,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*SearchRefinerType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	DiagnosticsData *SearchDiagnosticsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types DiagnosticsData,omitempty" json:"DiagnosticsData,omitempty"`

	SearchResultsCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchResultsCount,omitempty" json:"SearchResultsCount,omitempty"`

	TotalResultsCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types TotalResultsCount,omitempty" json:"TotalResultsCount,omitempty"`

	SearchTerms *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchTerms,omitempty" json:"SearchTerms,omitempty"`

	QueryId *ExecuteSearchQueryIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types QueryId,omitempty" json:"QueryId,omitempty"`

	MailboxesInformation struct {
		MailboxInformation []*MailboxInformationType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MailboxInformation,omitempty" json:"MailboxInformation,omitempty"`
	} `MailboxesInformation,omitempty" json:"MailboxesInformation,omitempty"`
}

type SearchResultItemIdType struct {
	*ItemIdType

	EntryId []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntryId,omitempty" json:"EntryId,omitempty"`

	OutlookItemId []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types OutlookItemId,omitempty" json:"OutlookItemId,omitempty"`
}

type SearchResultConversationIdType struct {
	*ItemIdType

	OutlookConversationId []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types OutlookConversationId,omitempty" json:"OutlookConversationId,omitempty"`
}

type ArrayOfWorkHours struct {
	WorkHours *WorkHoursType `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkHours,omitempty" json:"WorkHours,omitempty"`
}

type WorkHoursType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkHours"`

	WorkDay *SystemDayOfWeek `xml:"http://schemas.microsoft.com/exchange/services/2006/types WorkDay,omitempty" json:"WorkDay,omitempty"`

	TimeSlots *ArrayOfWorkTimeSlot `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeSlots,omitempty" json:"TimeSlots,omitempty"`
}

type ArrayOfWorkTimeSlot struct {
	TimeSlot []*WorkTimeSlot `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type WorkTimeSlot struct {
	StartTimeInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeInMinutes,omitempty" json:"StartTimeInMinutes,omitempty"`

	EndTimeInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeInMinutes,omitempty" json:"EndTimeInMinutes,omitempty"`
}

type AnalyzedQuery struct {
	QueryLanguage string `xml:"http://schemas.microsoft.com/exchange/services/2006/types QueryLanguage,omitempty" json:"QueryLanguage,omitempty"`

	SearchRestrictions *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`
}

type ContextPropertyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContextProperty"`

	Key string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Key,omitempty" json:"Key,omitempty"`

	Value string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Value,omitempty" json:"Value,omitempty"`
}

type ArrayOfContextProperty struct {
	ContextProperty []*ContextPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ContextProperty,omitempty" json:"ContextProperty,omitempty"`
}

type ArrayOfEntityFeedbackEntry struct {
	EntityFeedbackEntry []*EntityFeedbackEntryType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityFeedbackEntry,omitempty" json:"EntityFeedbackEntry,omitempty"`
}

type EntityFeedbackEntryType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityFeedbackEntry"`

	ClientEventTimeUtc xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientEventTimeUtc,omitempty" json:"ClientEventTimeUtc,omitempty"`

	ClientEventTimeLocal xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientEventTimeLocal,omitempty" json:"ClientEventTimeLocal,omitempty"`

	ClientSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientSessionId,omitempty" json:"ClientSessionId,omitempty"`

	ClientVersion string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientVersion,omitempty" json:"ClientVersion,omitempty"`

	ClientId *ClientIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientId,omitempty" json:"ClientId,omitempty"`

	EntrySequenceNumber int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntrySequenceNumber,omitempty" json:"EntrySequenceNumber,omitempty"`

	TransactionId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TransactionId,omitempty" json:"TransactionId,omitempty"`

	EventType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EventType,omitempty" json:"EventType,omitempty"`

	TargetEntityList string `xml:"http://schemas.microsoft.com/exchange/services/2006/types TargetEntityList,omitempty" json:"TargetEntityList,omitempty"`

	EntityAddSource *EntityFeedbackEntityAddSourceType `xml:"http://schemas.microsoft.com/exchange/services/2006/types EntityAddSource,omitempty" json:"EntityAddSource,omitempty"`

	JsonPropertyBag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types JsonPropertyBag,omitempty" json:"JsonPropertyBag,omitempty"`
}

type ArrayOfInboxReminderType struct {
	InboxReminder []*InboxReminderType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxReminder,omitempty" json:"InboxReminder,omitempty"`
}

type InboxReminderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types InboxReminder"`

	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	ReminderOffset int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReminderOffset,omitempty" json:"ReminderOffset,omitempty"`

	Message string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Message,omitempty" json:"Message,omitempty"`

	IsOrganizerReminder bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOrganizerReminder,omitempty" json:"IsOrganizerReminder,omitempty"`

	OccurrenceChange *EmailReminderChangeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OccurrenceChange,omitempty" json:"OccurrenceChange,omitempty"`

	SendOption *EmailReminderSendOption `xml:"http://schemas.microsoft.com/exchange/services/2006/types SendOption,omitempty" json:"SendOption,omitempty"`
}

type InsightContextItem struct {
	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	Val string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Val,omitempty" json:"Val,omitempty"`
}

type ArrayOfInsightContextItem struct {
	Context []*InsightContextItem `xml:"http://schemas.microsoft.com/exchange/services/2006/types Context,omitempty" json:"Context,omitempty"`
}

type InsightItemType struct {
	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ItemId,omitempty" json:"ItemId,omitempty"`

	InsightId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types InsightId,omitempty" json:"InsightId,omitempty"`

	Type string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Type,omitempty" json:"Type,omitempty"`

	StartTimeUtc xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types StartTimeUtc,omitempty" json:"StartTimeUtc,omitempty"`

	EndTimeUtc xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndTimeUtc,omitempty" json:"EndTimeUtc,omitempty"`

	Status *InsightStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Status,omitempty" json:"Status,omitempty"`

	Version string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Version,omitempty" json:"Version,omitempty"`

	Context *ArrayOfInsightContextItem `xml:"http://schemas.microsoft.com/exchange/services/2006/types Context,omitempty" json:"Context,omitempty"`

	Text string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Text,omitempty" json:"Text,omitempty"`

	ApplicationsIds *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ApplicationsIds,omitempty" json:"ApplicationsIds,omitempty"`

	SuggestedActions string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestedActions,omitempty" json:"SuggestedActions,omitempty"`

	AppContexts *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppContexts,omitempty" json:"AppContexts,omitempty"`
}

type ArrayOfInsightItemType struct {
	Insight []*InsightItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Insight,omitempty" json:"Insight,omitempty"`
}

type ResponseMessageInfoType struct {
	MessageText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	ResponseClass *ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type BaseAvailabilityCalendarViewType struct {
	FreeBusyViewType *FreeBusyViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/types FreeBusyViewType,omitempty" json:"FreeBusyViewType,omitempty"`
}

type ArrayOfPeopleQuerySource struct {
	Source []string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Source,omitempty" json:"Source,omitempty"`
}

type CalendarActivityDataType struct {
	ActivityAction string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActivityAction,omitempty" json:"ActivityAction,omitempty"`

	ClientId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientId,omitempty" json:"ClientId,omitempty"`

	CasRequestId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CasRequestId,omitempty" json:"CasRequestId,omitempty"`

	IndexSelected int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types IndexSelected,omitempty" json:"IndexSelected,omitempty"`
}

type MentionActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionAction"`

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Application,omitempty" json:"Application,omitempty"`

	Mentioned *EmailAddressExtendedType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Mentioned,omitempty" json:"Mentioned,omitempty"`

	MentionText string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionText,omitempty" json:"MentionText,omitempty"`

	ClientReference string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ClientReference,omitempty" json:"ClientReference,omitempty"`
}

type NonEmptyArrayOfMentionActionsType struct {
	MentionAction []*MentionActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionAction,omitempty" json:"MentionAction,omitempty"`
}

type AppliedHashtagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtag"`

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Application,omitempty" json:"Application,omitempty"`

	Tag string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Tag,omitempty" json:"Tag,omitempty"`

	IsAutoTagged bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsAutoTagged,omitempty" json:"IsAutoTagged,omitempty"`

	IsInlined bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsInlined,omitempty" json:"IsInlined,omitempty"`
}

type AppliedHashtagsPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtagsPreview"`

	Hashtags *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Hashtags,omitempty" json:"Hashtags,omitempty"`
}

type NonEmptyArrayOfAppliedHashtagType struct {
	AppliedHashtag []*AppliedHashtagType `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppliedHashtag,omitempty" json:"AppliedHashtag,omitempty"`
}

type LikeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types Like"`

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Id,omitempty" json:"Id,omitempty"`

	CreatedBy *EmailAddressExtendedType `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedBy,omitempty" json:"CreatedBy,omitempty"`

	CreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CreatedDateTime,omitempty" json:"CreatedDateTime,omitempty"`

	ServerCreatedDateTime string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ServerCreatedDateTime,omitempty" json:"ServerCreatedDateTime,omitempty"`

	DeepLink string `xml:"http://schemas.microsoft.com/exchange/services/2006/types DeepLink,omitempty" json:"DeepLink,omitempty"`

	Application string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Application,omitempty" json:"Application,omitempty"`
}

type LikesPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types LikesPreview"`

	LikeCount int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types LikeCount,omitempty" json:"LikeCount,omitempty"`
}

type MentionsPreviewType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types MentionsPreview"`

	IsMentioned bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMentioned,omitempty" json:"IsMentioned,omitempty"`
}

type NonEmptyArrayOfLikeType struct {
	Like []*LikeType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Like,omitempty" json:"Like,omitempty"`
}

type AttendeeAvailability struct {
	EmailAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	Availability *AvailabilityStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types Availability,omitempty" json:"Availability,omitempty"`
}

type ArrayOfMeetingLocation struct {
	MeetingLocation []*MeetingLocation `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingLocation,omitempty" json:"MeetingLocation,omitempty"`
}

type ArrayOfAttendeeAvailability struct {
	AttendeeAvailability []*AttendeeAvailability `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeAvailability,omitempty" json:"AttendeeAvailability,omitempty"`
}

type MeetingTimeCandidate struct {
	MeetingTimeslot *TimeSlot `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeslot,omitempty" json:"MeetingTimeslot,omitempty"`

	Confidence float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Confidence,omitempty" json:"Confidence,omitempty"`

	Score int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types Score,omitempty" json:"Score,omitempty"`

	OrganizerAvailability *AvailabilityStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/types OrganizerAvailability,omitempty" json:"OrganizerAvailability,omitempty"`

	AttendeeAvailabilities *ArrayOfAttendeeAvailability `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeAvailabilities,omitempty" json:"AttendeeAvailabilities,omitempty"`

	Locations *ArrayOfMeetingLocation `xml:"http://schemas.microsoft.com/exchange/services/2006/types Locations,omitempty" json:"Locations,omitempty"`

	SuggestionHint string `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestionHint,omitempty" json:"SuggestionHint,omitempty"`
}

type ArrayOfMeetingTimeCandidate struct {
	MeetingTimeCandidate []*MeetingTimeCandidate `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingTimeCandidate,omitempty" json:"MeetingTimeCandidate,omitempty"`
}

type MeetingTimeCandidatesConstraintItem struct {
	Email string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Email,omitempty" json:"Email,omitempty"`
}

type AttendeeConstraintItem struct {
	*MeetingTimeCandidatesConstraintItem

	IsRequired bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRequired,omitempty" json:"IsRequired,omitempty"`
}

type LocationConstraintItem struct {
	*MeetingTimeCandidatesConstraintItem

	Name string `xml:"http://schemas.microsoft.com/exchange/services/2006/types Name,omitempty" json:"Name,omitempty"`

	ResolveAvailability bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ResolveAvailability,omitempty" json:"ResolveAvailability,omitempty"`
}

type ArrayOfLocationConstraintItems struct {
	LocationItem []*LocationConstraintItem `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationItem,omitempty" json:"LocationItem,omitempty"`
}

type ArrayOfAttendeeConstraintItems struct {
	AttendeeItem []*AttendeeConstraintItem `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeItem,omitempty" json:"AttendeeItem,omitempty"`
}

type ArrayOfTimeSlot struct {
	TimeSlot []*TimeSlot `xml:"http://schemas.microsoft.com/exchange/services/2006/types TimeSlot,omitempty" json:"TimeSlot,omitempty"`
}

type FindMeetingTimesAttendeeConstraints struct {
	AttendeeEntries *ArrayOfAttendeeConstraintItems `xml:"http://schemas.microsoft.com/exchange/services/2006/types AttendeeEntries,omitempty" json:"AttendeeEntries,omitempty"`
}

type FindMeetingTimesLocationConstraints struct {
	LocationEntries *ArrayOfLocationConstraintItems `xml:"http://schemas.microsoft.com/exchange/services/2006/types LocationEntries,omitempty" json:"LocationEntries,omitempty"`

	IsRequired bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsRequired,omitempty" json:"IsRequired,omitempty"`

	SuggestLocation bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types SuggestLocation,omitempty" json:"SuggestLocation,omitempty"`
}

type FindMeetingTimesSearchConstraints struct {
	SearchWindows *ArrayOfTimeSlot `xml:"http://schemas.microsoft.com/exchange/services/2006/types SearchWindows,omitempty" json:"SearchWindows,omitempty"`

	MeetingDurationInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindMeetingTimesConstraints struct {
	MaxCandidates int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	IsOrganizerOptional bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsOrganizerOptional,omitempty" json:"IsOrganizerOptional,omitempty"`

	ReturnSuggestionHints bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types ReturnSuggestionHints,omitempty" json:"ReturnSuggestionHints,omitempty"`

	AppName string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppName,omitempty" json:"AppName,omitempty"`

	AppScenario string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppScenario,omitempty" json:"AppScenario,omitempty"`

	MinimumAttendeePercentage float64 `xml:"http://schemas.microsoft.com/exchange/services/2006/types MinimumAttendeePercentage,omitempty" json:"MinimumAttendeePercentage,omitempty"`
}

type OfficeClientType struct {
	Code *OfficeClientCodeType `xml:"Code,attr,omitempty" json:"Code,omitempty"`

	Version *VersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type ArrayOfAppsType struct {
	App []*AppType `xml:"http://schemas.microsoft.com/exchange/services/2006/types App,omitempty" json:"App,omitempty"`

	Metadata *Metadata `xml:"http://schemas.microsoft.com/exchange/services/2006/types Metadata,omitempty" json:"Metadata,omitempty"`
}

type AppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/types App"`

	Metadata *AppMetadata `xml:"http://schemas.microsoft.com/exchange/services/2006/types Metadata,omitempty" json:"Metadata,omitempty"`

	Manifest []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/types Manifest,omitempty" json:"Manifest,omitempty"`
}

type Metadata struct {
	CustomApps string `xml:"http://schemas.microsoft.com/exchange/services/2006/types CustomApps,omitempty" json:"CustomApps,omitempty"`
}

type AppMetadata struct {
	EndNodeUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types EndNodeUrl,omitempty" json:"EndNodeUrl,omitempty"`

	AppStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types AppStatus,omitempty" json:"AppStatus,omitempty"`

	ActionUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ActionUrl,omitempty" json:"ActionUrl,omitempty"`

	ProductId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ProductId,omitempty" json:"ProductId,omitempty"`

	EnabledStatus bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types EnabledStatus,omitempty" json:"EnabledStatus,omitempty"`

	ConsentState string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ConsentState,omitempty" json:"ConsentState,omitempty"`

	ExtensionType string `xml:"http://schemas.microsoft.com/exchange/services/2006/types ExtensionType,omitempty" json:"ExtensionType,omitempty"`

	MarketplaceAssetId string `xml:"http://schemas.microsoft.com/exchange/services/2006/types MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	LicenseStatus string `xml:"http://schemas.microsoft.com/exchange/services/2006/types LicenseStatus,omitempty" json:"LicenseStatus,omitempty"`

	TrialExpirationDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/types TrialExpirationDate,omitempty" json:"TrialExpirationDate,omitempty"`

	InstalledBy string `xml:"http://schemas.microsoft.com/exchange/services/2006/types InstalledBy,omitempty" json:"InstalledBy,omitempty"`

	IsMandatory bool `xml:"http://schemas.microsoft.com/exchange/services/2006/types IsMandatory,omitempty" json:"IsMandatory,omitempty"`
}

// Represents the message keys that can be returned by response error messages

type ResponseCodeType string

const (
	ResponseCodeTypeNoError ResponseCodeType = "NoError"

	ResponseCodeTypeErrorAccessDenied ResponseCodeType = "ErrorAccessDenied"

	ResponseCodeTypeErrorAccessModeSpecified ResponseCodeType = "ErrorAccessModeSpecified"

	ResponseCodeTypeErrorAccountDisabled ResponseCodeType = "ErrorAccountDisabled"

	ResponseCodeTypeErrorAddDelegatesFailed ResponseCodeType = "ErrorAddDelegatesFailed"

	ResponseCodeTypeErrorAddressSpaceNotFound ResponseCodeType = "ErrorAddressSpaceNotFound"

	ResponseCodeTypeErrorADOperation ResponseCodeType = "ErrorADOperation"

	ResponseCodeTypeErrorADSessionFilter ResponseCodeType = "ErrorADSessionFilter"

	ResponseCodeTypeErrorADUnavailable ResponseCodeType = "ErrorADUnavailable"

	ResponseCodeTypeErrorServiceUnavailable ResponseCodeType = "ErrorServiceUnavailable"

	ResponseCodeTypeErrorAutoDiscoverFailed ResponseCodeType = "ErrorAutoDiscoverFailed"

	ResponseCodeTypeErrorAffectedTaskOccurrencesRequired ResponseCodeType = "ErrorAffectedTaskOccurrencesRequired"

	ResponseCodeTypeErrorAttachmentNestLevelLimitExceeded ResponseCodeType = "ErrorAttachmentNestLevelLimitExceeded"

	ResponseCodeTypeErrorAttachmentSizeLimitExceeded ResponseCodeType = "ErrorAttachmentSizeLimitExceeded"

	ResponseCodeTypeErrorArchiveFolderPathCreation ResponseCodeType = "ErrorArchiveFolderPathCreation"

	ResponseCodeTypeErrorArchiveMailboxNotEnabled ResponseCodeType = "ErrorArchiveMailboxNotEnabled"

	ResponseCodeTypeErrorArchiveMailboxServiceDiscoveryFailed ResponseCodeType = "ErrorArchiveMailboxServiceDiscoveryFailed"

	ResponseCodeTypeErrorAvailabilityConfigNotFound ResponseCodeType = "ErrorAvailabilityConfigNotFound"

	ResponseCodeTypeErrorBatchProcessingStopped ResponseCodeType = "ErrorBatchProcessingStopped"

	ResponseCodeTypeErrorCalendarCannotMoveOrCopyOccurrence ResponseCodeType = "ErrorCalendarCannotMoveOrCopyOccurrence"

	ResponseCodeTypeErrorCalendarCannotUpdateDeletedItem ResponseCodeType = "ErrorCalendarCannotUpdateDeletedItem"

	ResponseCodeTypeErrorCalendarCannotUseIdForOccurrenceId ResponseCodeType = "ErrorCalendarCannotUseIdForOccurrenceId"

	ResponseCodeTypeErrorCalendarCannotUseIdForRecurringMasterId ResponseCodeType = "ErrorCalendarCannotUseIdForRecurringMasterId"

	ResponseCodeTypeErrorCalendarDurationIsTooLong ResponseCodeType = "ErrorCalendarDurationIsTooLong"

	ResponseCodeTypeErrorCalendarEndDateIsEarlierThanStartDate ResponseCodeType = "ErrorCalendarEndDateIsEarlierThanStartDate"

	ResponseCodeTypeErrorCalendarFolderIsInvalidForCalendarView ResponseCodeType = "ErrorCalendarFolderIsInvalidForCalendarView"

	ResponseCodeTypeErrorCalendarInvalidAttributeValue ResponseCodeType = "ErrorCalendarInvalidAttributeValue"

	ResponseCodeTypeErrorCalendarInvalidDayForTimeChangePattern ResponseCodeType = "ErrorCalendarInvalidDayForTimeChangePattern"

	ResponseCodeTypeErrorCalendarInvalidDayForWeeklyRecurrence ResponseCodeType = "ErrorCalendarInvalidDayForWeeklyRecurrence"

	ResponseCodeTypeErrorCalendarInvalidPropertyState ResponseCodeType = "ErrorCalendarInvalidPropertyState"

	ResponseCodeTypeErrorCalendarInvalidPropertyValue ResponseCodeType = "ErrorCalendarInvalidPropertyValue"

	ResponseCodeTypeErrorCalendarInvalidRecurrence ResponseCodeType = "ErrorCalendarInvalidRecurrence"

	ResponseCodeTypeErrorCalendarInvalidTimeZone ResponseCodeType = "ErrorCalendarInvalidTimeZone"

	ResponseCodeTypeErrorCalendarIsCancelledForAccept ResponseCodeType = "ErrorCalendarIsCancelledForAccept"

	ResponseCodeTypeErrorCalendarIsCancelledForDecline ResponseCodeType = "ErrorCalendarIsCancelledForDecline"

	ResponseCodeTypeErrorCalendarIsCancelledForRemove ResponseCodeType = "ErrorCalendarIsCancelledForRemove"

	ResponseCodeTypeErrorCalendarIsCancelledForTentative ResponseCodeType = "ErrorCalendarIsCancelledForTentative"

	ResponseCodeTypeErrorCalendarIsDelegatedForAccept ResponseCodeType = "ErrorCalendarIsDelegatedForAccept"

	ResponseCodeTypeErrorCalendarIsDelegatedForDecline ResponseCodeType = "ErrorCalendarIsDelegatedForDecline"

	ResponseCodeTypeErrorCalendarIsDelegatedForRemove ResponseCodeType = "ErrorCalendarIsDelegatedForRemove"

	ResponseCodeTypeErrorCalendarIsDelegatedForTentative ResponseCodeType = "ErrorCalendarIsDelegatedForTentative"

	ResponseCodeTypeErrorCalendarIsNotOrganizer ResponseCodeType = "ErrorCalendarIsNotOrganizer"

	ResponseCodeTypeErrorCalendarIsOrganizerForAccept ResponseCodeType = "ErrorCalendarIsOrganizerForAccept"

	ResponseCodeTypeErrorCalendarIsOrganizerForDecline ResponseCodeType = "ErrorCalendarIsOrganizerForDecline"

	ResponseCodeTypeErrorCalendarIsOrganizerForRemove ResponseCodeType = "ErrorCalendarIsOrganizerForRemove"

	ResponseCodeTypeErrorCalendarIsOrganizerForTentative ResponseCodeType = "ErrorCalendarIsOrganizerForTentative"

	ResponseCodeTypeErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange ResponseCodeType = "ErrorCalendarOccurrenceIndexIsOutOfRecurrenceRange"

	ResponseCodeTypeErrorCalendarOccurrenceIsDeletedFromRecurrence ResponseCodeType = "ErrorCalendarOccurrenceIsDeletedFromRecurrence"

	ResponseCodeTypeErrorCalendarOutOfRange ResponseCodeType = "ErrorCalendarOutOfRange"

	ResponseCodeTypeErrorCalendarMeetingRequestIsOutOfDate ResponseCodeType = "ErrorCalendarMeetingRequestIsOutOfDate"

	ResponseCodeTypeErrorCalendarViewRangeTooBig ResponseCodeType = "ErrorCalendarViewRangeTooBig"

	ResponseCodeTypeErrorCallerIsInvalidADAccount ResponseCodeType = "ErrorCallerIsInvalidADAccount"

	ResponseCodeTypeErrorCannotAccessDeletedPublicFolder ResponseCodeType = "ErrorCannotAccessDeletedPublicFolder"

	ResponseCodeTypeErrorCannotArchiveCalendarContactTaskFolderException ResponseCodeType = "ErrorCannotArchiveCalendarContactTaskFolderException"

	ResponseCodeTypeErrorCannotArchiveItemsInPublicFolders ResponseCodeType = "ErrorCannotArchiveItemsInPublicFolders"

	ResponseCodeTypeErrorCannotArchiveItemsInArchiveMailbox ResponseCodeType = "ErrorCannotArchiveItemsInArchiveMailbox"

	ResponseCodeTypeErrorCannotCreateCalendarItemInNonCalendarFolder ResponseCodeType = "ErrorCannotCreateCalendarItemInNonCalendarFolder"

	ResponseCodeTypeErrorCannotCreateContactInNonContactFolder ResponseCodeType = "ErrorCannotCreateContactInNonContactFolder"

	ResponseCodeTypeErrorCannotCreatePostItemInNonMailFolder ResponseCodeType = "ErrorCannotCreatePostItemInNonMailFolder"

	ResponseCodeTypeErrorCannotCreateTaskInNonTaskFolder ResponseCodeType = "ErrorCannotCreateTaskInNonTaskFolder"

	ResponseCodeTypeErrorCannotDeleteObject ResponseCodeType = "ErrorCannotDeleteObject"

	ResponseCodeTypeErrorCannotDisableMandatoryExtension ResponseCodeType = "ErrorCannotDisableMandatoryExtension"

	ResponseCodeTypeErrorCannotFindUser ResponseCodeType = "ErrorCannotFindUser"

	ResponseCodeTypeErrorCannotGetSourceFolderPath ResponseCodeType = "ErrorCannotGetSourceFolderPath"

	ResponseCodeTypeErrorCannotGetExternalEcpUrl ResponseCodeType = "ErrorCannotGetExternalEcpUrl"

	ResponseCodeTypeErrorCannotOpenFileAttachment ResponseCodeType = "ErrorCannotOpenFileAttachment"

	ResponseCodeTypeErrorCannotDeleteTaskOccurrence ResponseCodeType = "ErrorCannotDeleteTaskOccurrence"

	ResponseCodeTypeErrorCannotEmptyFolder ResponseCodeType = "ErrorCannotEmptyFolder"

	ResponseCodeTypeErrorCannotSetCalendarPermissionOnNonCalendarFolder ResponseCodeType = "ErrorCannotSetCalendarPermissionOnNonCalendarFolder"

	ResponseCodeTypeErrorCannotSetNonCalendarPermissionOnCalendarFolder ResponseCodeType = "ErrorCannotSetNonCalendarPermissionOnCalendarFolder"

	ResponseCodeTypeErrorCannotSetPermissionUnknownEntries ResponseCodeType = "ErrorCannotSetPermissionUnknownEntries"

	ResponseCodeTypeErrorCannotSpecifySearchFolderAsSourceFolder ResponseCodeType = "ErrorCannotSpecifySearchFolderAsSourceFolder"

	ResponseCodeTypeErrorCannotUseFolderIdForItemId ResponseCodeType = "ErrorCannotUseFolderIdForItemId"

	ResponseCodeTypeErrorCannotUseItemIdForFolderId ResponseCodeType = "ErrorCannotUseItemIdForFolderId"

	ResponseCodeTypeErrorChangeKeyRequired ResponseCodeType = "ErrorChangeKeyRequired"

	ResponseCodeTypeErrorChangeKeyRequiredForWriteOperations ResponseCodeType = "ErrorChangeKeyRequiredForWriteOperations"

	ResponseCodeTypeErrorClientDisconnected ResponseCodeType = "ErrorClientDisconnected"

	ResponseCodeTypeErrorClientIntentInvalidStateDefinition ResponseCodeType = "ErrorClientIntentInvalidStateDefinition"

	ResponseCodeTypeErrorClientIntentNotFound ResponseCodeType = "ErrorClientIntentNotFound"

	ResponseCodeTypeErrorConnectionFailed ResponseCodeType = "ErrorConnectionFailed"

	ResponseCodeTypeErrorContainsFilterWrongType ResponseCodeType = "ErrorContainsFilterWrongType"

	ResponseCodeTypeErrorContentConversionFailed ResponseCodeType = "ErrorContentConversionFailed"

	ResponseCodeTypeErrorContentIndexingNotEnabled ResponseCodeType = "ErrorContentIndexingNotEnabled"

	ResponseCodeTypeErrorCorruptData ResponseCodeType = "ErrorCorruptData"

	ResponseCodeTypeErrorCreateItemAccessDenied ResponseCodeType = "ErrorCreateItemAccessDenied"

	ResponseCodeTypeErrorCreateManagedFolderPartialCompletion ResponseCodeType = "ErrorCreateManagedFolderPartialCompletion"

	ResponseCodeTypeErrorCreateSubfolderAccessDenied ResponseCodeType = "ErrorCreateSubfolderAccessDenied"

	ResponseCodeTypeErrorCrossMailboxMoveCopy ResponseCodeType = "ErrorCrossMailboxMoveCopy"

	ResponseCodeTypeErrorCrossSiteRequest ResponseCodeType = "ErrorCrossSiteRequest"

	ResponseCodeTypeErrorDataSizeLimitExceeded ResponseCodeType = "ErrorDataSizeLimitExceeded"

	ResponseCodeTypeErrorDataSourceOperation ResponseCodeType = "ErrorDataSourceOperation"

	ResponseCodeTypeErrorDelegateAlreadyExists ResponseCodeType = "ErrorDelegateAlreadyExists"

	ResponseCodeTypeErrorDelegateCannotAddOwner ResponseCodeType = "ErrorDelegateCannotAddOwner"

	ResponseCodeTypeErrorDelegateMissingConfiguration ResponseCodeType = "ErrorDelegateMissingConfiguration"

	ResponseCodeTypeErrorDelegateNoUser ResponseCodeType = "ErrorDelegateNoUser"

	ResponseCodeTypeErrorDelegateValidationFailed ResponseCodeType = "ErrorDelegateValidationFailed"

	ResponseCodeTypeErrorDeleteDistinguishedFolder ResponseCodeType = "ErrorDeleteDistinguishedFolder"

	ResponseCodeTypeErrorDeleteItemsFailed ResponseCodeType = "ErrorDeleteItemsFailed"

	ResponseCodeTypeErrorDeleteUnifiedMessagingPromptFailed ResponseCodeType = "ErrorDeleteUnifiedMessagingPromptFailed"

	ResponseCodeTypeErrorDistinguishedUserNotSupported ResponseCodeType = "ErrorDistinguishedUserNotSupported"

	ResponseCodeTypeErrorDistributionListMemberNotExist ResponseCodeType = "ErrorDistributionListMemberNotExist"

	ResponseCodeTypeErrorDuplicateInputFolderNames ResponseCodeType = "ErrorDuplicateInputFolderNames"

	ResponseCodeTypeErrorDuplicateUserIdsSpecified ResponseCodeType = "ErrorDuplicateUserIdsSpecified"

	ResponseCodeTypeErrorEmailAddressMismatch ResponseCodeType = "ErrorEmailAddressMismatch"

	ResponseCodeTypeErrorEventNotFound ResponseCodeType = "ErrorEventNotFound"

	ResponseCodeTypeErrorExceededConnectionCount ResponseCodeType = "ErrorExceededConnectionCount"

	ResponseCodeTypeErrorExceededSubscriptionCount ResponseCodeType = "ErrorExceededSubscriptionCount"

	ResponseCodeTypeErrorExceededFindCountLimit ResponseCodeType = "ErrorExceededFindCountLimit"

	ResponseCodeTypeErrorExpiredSubscription ResponseCodeType = "ErrorExpiredSubscription"

	ResponseCodeTypeErrorExtensionNotFound ResponseCodeType = "ErrorExtensionNotFound"

	ResponseCodeTypeErrorExtensionsNotAuthorized ResponseCodeType = "ErrorExtensionsNotAuthorized"

	ResponseCodeTypeErrorFolderCorrupt ResponseCodeType = "ErrorFolderCorrupt"

	ResponseCodeTypeErrorFolderNotFound ResponseCodeType = "ErrorFolderNotFound"

	ResponseCodeTypeErrorFolderPropertRequestFailed ResponseCodeType = "ErrorFolderPropertRequestFailed"

	ResponseCodeTypeErrorFolderSave ResponseCodeType = "ErrorFolderSave"

	ResponseCodeTypeErrorFolderSaveFailed ResponseCodeType = "ErrorFolderSaveFailed"

	ResponseCodeTypeErrorFolderSavePropertyError ResponseCodeType = "ErrorFolderSavePropertyError"

	ResponseCodeTypeErrorFolderExists ResponseCodeType = "ErrorFolderExists"

	ResponseCodeTypeErrorFreeBusyGenerationFailed ResponseCodeType = "ErrorFreeBusyGenerationFailed"

	ResponseCodeTypeErrorGetServerSecurityDescriptorFailed ResponseCodeType = "ErrorGetServerSecurityDescriptorFailed"

	ResponseCodeTypeErrorImContactLimitReached ResponseCodeType = "ErrorImContactLimitReached"

	ResponseCodeTypeErrorImGroupDisplayNameAlreadyExists ResponseCodeType = "ErrorImGroupDisplayNameAlreadyExists"

	ResponseCodeTypeErrorImGroupLimitReached ResponseCodeType = "ErrorImGroupLimitReached"

	ResponseCodeTypeErrorImpersonateUserDenied ResponseCodeType = "ErrorImpersonateUserDenied"

	ResponseCodeTypeErrorImpersonationDenied ResponseCodeType = "ErrorImpersonationDenied"

	ResponseCodeTypeErrorImpersonationFailed ResponseCodeType = "ErrorImpersonationFailed"

	ResponseCodeTypeErrorIncorrectSchemaVersion ResponseCodeType = "ErrorIncorrectSchemaVersion"

	ResponseCodeTypeErrorIncorrectUpdatePropertyCount ResponseCodeType = "ErrorIncorrectUpdatePropertyCount"

	ResponseCodeTypeErrorIndividualMailboxLimitReached ResponseCodeType = "ErrorIndividualMailboxLimitReached"

	ResponseCodeTypeErrorInsufficientResources ResponseCodeType = "ErrorInsufficientResources"

	ResponseCodeTypeErrorInternalServerError ResponseCodeType = "ErrorInternalServerError"

	ResponseCodeTypeErrorInternalServerTransientError ResponseCodeType = "ErrorInternalServerTransientError"

	ResponseCodeTypeErrorInvalidAccessLevel ResponseCodeType = "ErrorInvalidAccessLevel"

	ResponseCodeTypeErrorInvalidArgument ResponseCodeType = "ErrorInvalidArgument"

	ResponseCodeTypeErrorInvalidAttachmentId ResponseCodeType = "ErrorInvalidAttachmentId"

	ResponseCodeTypeErrorInvalidAttachmentSubfilter ResponseCodeType = "ErrorInvalidAttachmentSubfilter"

	ResponseCodeTypeErrorInvalidAttachmentSubfilterTextFilter ResponseCodeType = "ErrorInvalidAttachmentSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidAuthorizationContext ResponseCodeType = "ErrorInvalidAuthorizationContext"

	ResponseCodeTypeErrorInvalidChangeKey ResponseCodeType = "ErrorInvalidChangeKey"

	ResponseCodeTypeErrorInvalidClientSecurityContext ResponseCodeType = "ErrorInvalidClientSecurityContext"

	ResponseCodeTypeErrorInvalidCompleteDate ResponseCodeType = "ErrorInvalidCompleteDate"

	ResponseCodeTypeErrorInvalidContactEmailAddress ResponseCodeType = "ErrorInvalidContactEmailAddress"

	ResponseCodeTypeErrorInvalidContactEmailIndex ResponseCodeType = "ErrorInvalidContactEmailIndex"

	ResponseCodeTypeErrorInvalidCrossForestCredentials ResponseCodeType = "ErrorInvalidCrossForestCredentials"

	ResponseCodeTypeErrorInvalidDelegatePermission ResponseCodeType = "ErrorInvalidDelegatePermission"

	ResponseCodeTypeErrorInvalidDelegateUserId ResponseCodeType = "ErrorInvalidDelegateUserId"

	ResponseCodeTypeErrorInvalidExcludesRestriction ResponseCodeType = "ErrorInvalidExcludesRestriction"

	ResponseCodeTypeErrorInvalidExpressionTypeForSubFilter ResponseCodeType = "ErrorInvalidExpressionTypeForSubFilter"

	ResponseCodeTypeErrorInvalidExtendedProperty ResponseCodeType = "ErrorInvalidExtendedProperty"

	ResponseCodeTypeErrorInvalidExtendedPropertyValue ResponseCodeType = "ErrorInvalidExtendedPropertyValue"

	ResponseCodeTypeErrorInvalidFolderId ResponseCodeType = "ErrorInvalidFolderId"

	ResponseCodeTypeErrorInvalidFolderTypeForOperation ResponseCodeType = "ErrorInvalidFolderTypeForOperation"

	ResponseCodeTypeErrorInvalidFractionalPagingParameters ResponseCodeType = "ErrorInvalidFractionalPagingParameters"

	ResponseCodeTypeErrorInvalidFreeBusyViewType ResponseCodeType = "ErrorInvalidFreeBusyViewType"

	ResponseCodeTypeErrorInvalidId ResponseCodeType = "ErrorInvalidId"

	ResponseCodeTypeErrorInvalidIdEmpty ResponseCodeType = "ErrorInvalidIdEmpty"

	ResponseCodeTypeErrorInvalidIdMalformed ResponseCodeType = "ErrorInvalidIdMalformed"

	ResponseCodeTypeErrorInvalidIdMalformedEwsLegacyIdFormat ResponseCodeType = "ErrorInvalidIdMalformedEwsLegacyIdFormat"

	ResponseCodeTypeErrorInvalidIdMonikerTooLong ResponseCodeType = "ErrorInvalidIdMonikerTooLong"

	ResponseCodeTypeErrorInvalidIdNotAnItemAttachmentId ResponseCodeType = "ErrorInvalidIdNotAnItemAttachmentId"

	ResponseCodeTypeErrorInvalidIdReturnedByResolveNames ResponseCodeType = "ErrorInvalidIdReturnedByResolveNames"

	ResponseCodeTypeErrorInvalidIdStoreObjectIdTooLong ResponseCodeType = "ErrorInvalidIdStoreObjectIdTooLong"

	ResponseCodeTypeErrorInvalidIdTooManyAttachmentLevels ResponseCodeType = "ErrorInvalidIdTooManyAttachmentLevels"

	ResponseCodeTypeErrorInvalidIdXml ResponseCodeType = "ErrorInvalidIdXml"

	ResponseCodeTypeErrorInvalidImContactId ResponseCodeType = "ErrorInvalidImContactId"

	ResponseCodeTypeErrorInvalidImDistributionGroupSmtpAddress ResponseCodeType = "ErrorInvalidImDistributionGroupSmtpAddress"

	ResponseCodeTypeErrorInvalidImGroupId ResponseCodeType = "ErrorInvalidImGroupId"

	ResponseCodeTypeErrorInvalidIndexedPagingParameters ResponseCodeType = "ErrorInvalidIndexedPagingParameters"

	ResponseCodeTypeErrorInvalidInternetHeaderChildNodes ResponseCodeType = "ErrorInvalidInternetHeaderChildNodes"

	ResponseCodeTypeErrorInvalidItemForOperationArchiveItem ResponseCodeType = "ErrorInvalidItemForOperationArchiveItem"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItemAttachment ResponseCodeType = "ErrorInvalidItemForOperationCreateItemAttachment"

	ResponseCodeTypeErrorInvalidItemForOperationCreateItem ResponseCodeType = "ErrorInvalidItemForOperationCreateItem"

	ResponseCodeTypeErrorInvalidItemForOperationAcceptItem ResponseCodeType = "ErrorInvalidItemForOperationAcceptItem"

	ResponseCodeTypeErrorInvalidItemForOperationDeclineItem ResponseCodeType = "ErrorInvalidItemForOperationDeclineItem"

	ResponseCodeTypeErrorInvalidItemForOperationCancelItem ResponseCodeType = "ErrorInvalidItemForOperationCancelItem"

	ResponseCodeTypeErrorInvalidItemForOperationExpandDL ResponseCodeType = "ErrorInvalidItemForOperationExpandDL"

	ResponseCodeTypeErrorInvalidItemForOperationRemoveItem ResponseCodeType = "ErrorInvalidItemForOperationRemoveItem"

	ResponseCodeTypeErrorInvalidItemForOperationSendItem ResponseCodeType = "ErrorInvalidItemForOperationSendItem"

	ResponseCodeTypeErrorInvalidItemForOperationTentative ResponseCodeType = "ErrorInvalidItemForOperationTentative"

	ResponseCodeTypeErrorInvalidLogonType ResponseCodeType = "ErrorInvalidLogonType"

	ResponseCodeTypeErrorInvalidLikeRequest ResponseCodeType = "ErrorInvalidLikeRequest"

	ResponseCodeTypeErrorInvalidMailbox ResponseCodeType = "ErrorInvalidMailbox"

	ResponseCodeTypeErrorInvalidManagedFolderProperty ResponseCodeType = "ErrorInvalidManagedFolderProperty"

	ResponseCodeTypeErrorInvalidManagedFolderQuota ResponseCodeType = "ErrorInvalidManagedFolderQuota"

	ResponseCodeTypeErrorInvalidManagedFolderSize ResponseCodeType = "ErrorInvalidManagedFolderSize"

	ResponseCodeTypeErrorInvalidMergedFreeBusyInterval ResponseCodeType = "ErrorInvalidMergedFreeBusyInterval"

	ResponseCodeTypeErrorInvalidNameForNameResolution ResponseCodeType = "ErrorInvalidNameForNameResolution"

	ResponseCodeTypeErrorInvalidOperation ResponseCodeType = "ErrorInvalidOperation"

	ResponseCodeTypeErrorInvalidNetworkServiceContext ResponseCodeType = "ErrorInvalidNetworkServiceContext"

	ResponseCodeTypeErrorInvalidOofParameter ResponseCodeType = "ErrorInvalidOofParameter"

	ResponseCodeTypeErrorInvalidPagingMaxRows ResponseCodeType = "ErrorInvalidPagingMaxRows"

	ResponseCodeTypeErrorInvalidParentFolder ResponseCodeType = "ErrorInvalidParentFolder"

	ResponseCodeTypeErrorInvalidPercentCompleteValue ResponseCodeType = "ErrorInvalidPercentCompleteValue"

	ResponseCodeTypeErrorInvalidPermissionSettings ResponseCodeType = "ErrorInvalidPermissionSettings"

	ResponseCodeTypeErrorInvalidPhoneCallId ResponseCodeType = "ErrorInvalidPhoneCallId"

	ResponseCodeTypeErrorInvalidPhoneNumber ResponseCodeType = "ErrorInvalidPhoneNumber"

	ResponseCodeTypeErrorInvalidUserInfo ResponseCodeType = "ErrorInvalidUserInfo"

	ResponseCodeTypeErrorInvalidPropertyAppend ResponseCodeType = "ErrorInvalidPropertyAppend"

	ResponseCodeTypeErrorInvalidPropertyDelete ResponseCodeType = "ErrorInvalidPropertyDelete"

	ResponseCodeTypeErrorInvalidPropertyForExists ResponseCodeType = "ErrorInvalidPropertyForExists"

	ResponseCodeTypeErrorInvalidPropertyForOperation ResponseCodeType = "ErrorInvalidPropertyForOperation"

	ResponseCodeTypeErrorInvalidPropertyRequest ResponseCodeType = "ErrorInvalidPropertyRequest"

	ResponseCodeTypeErrorInvalidPropertySet ResponseCodeType = "ErrorInvalidPropertySet"

	ResponseCodeTypeErrorInvalidPropertyUpdateSentMessage ResponseCodeType = "ErrorInvalidPropertyUpdateSentMessage"

	ResponseCodeTypeErrorInvalidProxySecurityContext ResponseCodeType = "ErrorInvalidProxySecurityContext"

	ResponseCodeTypeErrorInvalidPullSubscriptionId ResponseCodeType = "ErrorInvalidPullSubscriptionId"

	ResponseCodeTypeErrorInvalidPushSubscriptionUrl ResponseCodeType = "ErrorInvalidPushSubscriptionUrl"

	ResponseCodeTypeErrorInvalidRecipients ResponseCodeType = "ErrorInvalidRecipients"

	ResponseCodeTypeErrorInvalidRecipientSubfilter ResponseCodeType = "ErrorInvalidRecipientSubfilter"

	ResponseCodeTypeErrorInvalidRecipientSubfilterComparison ResponseCodeType = "ErrorInvalidRecipientSubfilterComparison"

	ResponseCodeTypeErrorInvalidRecipientSubfilterOrder ResponseCodeType = "ErrorInvalidRecipientSubfilterOrder"

	ResponseCodeTypeErrorInvalidRecipientSubfilterTextFilter ResponseCodeType = "ErrorInvalidRecipientSubfilterTextFilter"

	ResponseCodeTypeErrorInvalidReferenceItem ResponseCodeType = "ErrorInvalidReferenceItem"

	ResponseCodeTypeErrorInvalidRequest ResponseCodeType = "ErrorInvalidRequest"

	ResponseCodeTypeErrorInvalidRestriction ResponseCodeType = "ErrorInvalidRestriction"

	ResponseCodeTypeErrorInvalidRetentionTagTypeMismatch ResponseCodeType = "ErrorInvalidRetentionTagTypeMismatch"

	ResponseCodeTypeErrorInvalidRetentionTagInvisible ResponseCodeType = "ErrorInvalidRetentionTagInvisible"

	ResponseCodeTypeErrorInvalidRetentionTagInheritance ResponseCodeType = "ErrorInvalidRetentionTagInheritance"

	ResponseCodeTypeErrorInvalidRetentionTagIdGuid ResponseCodeType = "ErrorInvalidRetentionTagIdGuid"

	ResponseCodeTypeErrorInvalidRoutingType ResponseCodeType = "ErrorInvalidRoutingType"

	ResponseCodeTypeErrorInvalidScheduledOofDuration ResponseCodeType = "ErrorInvalidScheduledOofDuration"

	ResponseCodeTypeErrorInvalidSchemaVersionForMailboxVersion ResponseCodeType = "ErrorInvalidSchemaVersionForMailboxVersion"

	ResponseCodeTypeErrorInvalidSecurityDescriptor ResponseCodeType = "ErrorInvalidSecurityDescriptor"

	ResponseCodeTypeErrorInvalidSendItemSaveSettings ResponseCodeType = "ErrorInvalidSendItemSaveSettings"

	ResponseCodeTypeErrorInvalidSerializedAccessToken ResponseCodeType = "ErrorInvalidSerializedAccessToken"

	ResponseCodeTypeErrorInvalidServerVersion ResponseCodeType = "ErrorInvalidServerVersion"

	ResponseCodeTypeErrorInvalidSid ResponseCodeType = "ErrorInvalidSid"

	ResponseCodeTypeErrorInvalidSIPUri ResponseCodeType = "ErrorInvalidSIPUri"

	ResponseCodeTypeErrorInvalidSmtpAddress ResponseCodeType = "ErrorInvalidSmtpAddress"

	ResponseCodeTypeErrorInvalidSubfilterType ResponseCodeType = "ErrorInvalidSubfilterType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotAttendeeType ResponseCodeType = "ErrorInvalidSubfilterTypeNotAttendeeType"

	ResponseCodeTypeErrorInvalidSubfilterTypeNotRecipientType ResponseCodeType = "ErrorInvalidSubfilterTypeNotRecipientType"

	ResponseCodeTypeErrorInvalidSubscription ResponseCodeType = "ErrorInvalidSubscription"

	ResponseCodeTypeErrorInvalidSubscriptionRequest ResponseCodeType = "ErrorInvalidSubscriptionRequest"

	ResponseCodeTypeErrorInvalidSyncStateData ResponseCodeType = "ErrorInvalidSyncStateData"

	ResponseCodeTypeErrorInvalidTimeInterval ResponseCodeType = "ErrorInvalidTimeInterval"

	ResponseCodeTypeErrorInvalidUserOofSettings ResponseCodeType = "ErrorInvalidUserOofSettings"

	ResponseCodeTypeErrorInvalidUserPrincipalName ResponseCodeType = "ErrorInvalidUserPrincipalName"

	ResponseCodeTypeErrorInvalidUserSid ResponseCodeType = "ErrorInvalidUserSid"

	ResponseCodeTypeErrorInvalidUserSidMissingUPN ResponseCodeType = "ErrorInvalidUserSidMissingUPN"

	ResponseCodeTypeErrorInvalidValueForProperty ResponseCodeType = "ErrorInvalidValueForProperty"

	ResponseCodeTypeErrorInvalidWatermark ResponseCodeType = "ErrorInvalidWatermark"

	ResponseCodeTypeErrorIPGatewayNotFound ResponseCodeType = "ErrorIPGatewayNotFound"

	ResponseCodeTypeErrorIrresolvableConflict ResponseCodeType = "ErrorIrresolvableConflict"

	ResponseCodeTypeErrorItemCorrupt ResponseCodeType = "ErrorItemCorrupt"

	ResponseCodeTypeErrorItemNotFound ResponseCodeType = "ErrorItemNotFound"

	ResponseCodeTypeErrorItemPropertyRequestFailed ResponseCodeType = "ErrorItemPropertyRequestFailed"

	ResponseCodeTypeErrorItemSave ResponseCodeType = "ErrorItemSave"

	ResponseCodeTypeErrorItemSavePropertyError ResponseCodeType = "ErrorItemSavePropertyError"

	ResponseCodeTypeErrorLegacyMailboxFreeBusyViewTypeNotMerged ResponseCodeType = "ErrorLegacyMailboxFreeBusyViewTypeNotMerged"

	ResponseCodeTypeErrorLocalServerObjectNotFound ResponseCodeType = "ErrorLocalServerObjectNotFound"

	ResponseCodeTypeErrorLogonAsNetworkServiceFailed ResponseCodeType = "ErrorLogonAsNetworkServiceFailed"

	ResponseCodeTypeErrorMailboxConfiguration ResponseCodeType = "ErrorMailboxConfiguration"

	ResponseCodeTypeErrorMailboxDataArrayEmpty ResponseCodeType = "ErrorMailboxDataArrayEmpty"

	ResponseCodeTypeErrorMailboxDataArrayTooBig ResponseCodeType = "ErrorMailboxDataArrayTooBig"

	ResponseCodeTypeErrorMailboxHoldNotFound ResponseCodeType = "ErrorMailboxHoldNotFound"

	ResponseCodeTypeErrorMailboxLogonFailed ResponseCodeType = "ErrorMailboxLogonFailed"

	ResponseCodeTypeErrorMailboxMoveInProgress ResponseCodeType = "ErrorMailboxMoveInProgress"

	ResponseCodeTypeErrorMailboxStoreUnavailable ResponseCodeType = "ErrorMailboxStoreUnavailable"

	ResponseCodeTypeErrorMailRecipientNotFound ResponseCodeType = "ErrorMailRecipientNotFound"

	ResponseCodeTypeErrorMailTipsDisabled ResponseCodeType = "ErrorMailTipsDisabled"

	ResponseCodeTypeErrorManagedFolderAlreadyExists ResponseCodeType = "ErrorManagedFolderAlreadyExists"

	ResponseCodeTypeErrorManagedFolderNotFound ResponseCodeType = "ErrorManagedFolderNotFound"

	ResponseCodeTypeErrorManagedFoldersRootFailure ResponseCodeType = "ErrorManagedFoldersRootFailure"

	ResponseCodeTypeErrorMeetingSuggestionGenerationFailed ResponseCodeType = "ErrorMeetingSuggestionGenerationFailed"

	ResponseCodeTypeErrorMessageDispositionRequired ResponseCodeType = "ErrorMessageDispositionRequired"

	ResponseCodeTypeErrorMessageSizeExceeded ResponseCodeType = "ErrorMessageSizeExceeded"

	ResponseCodeTypeErrorMimeContentConversionFailed ResponseCodeType = "ErrorMimeContentConversionFailed"

	ResponseCodeTypeErrorMimeContentInvalid ResponseCodeType = "ErrorMimeContentInvalid"

	ResponseCodeTypeErrorMimeContentInvalidBase64String ResponseCodeType = "ErrorMimeContentInvalidBase64String"

	ResponseCodeTypeErrorMissingArgument ResponseCodeType = "ErrorMissingArgument"

	ResponseCodeTypeErrorMissingEmailAddress ResponseCodeType = "ErrorMissingEmailAddress"

	ResponseCodeTypeErrorMissingEmailAddressForManagedFolder ResponseCodeType = "ErrorMissingEmailAddressForManagedFolder"

	ResponseCodeTypeErrorMissingInformationEmailAddress ResponseCodeType = "ErrorMissingInformationEmailAddress"

	ResponseCodeTypeErrorMissingInformationReferenceItemId ResponseCodeType = "ErrorMissingInformationReferenceItemId"

	ResponseCodeTypeErrorMissingItemForCreateItemAttachment ResponseCodeType = "ErrorMissingItemForCreateItemAttachment"

	ResponseCodeTypeErrorMissingManagedFolderId ResponseCodeType = "ErrorMissingManagedFolderId"

	ResponseCodeTypeErrorMissingRecipients ResponseCodeType = "ErrorMissingRecipients"

	ResponseCodeTypeErrorMissingUserIdInformation ResponseCodeType = "ErrorMissingUserIdInformation"

	ResponseCodeTypeErrorMoreThanOneAccessModeSpecified ResponseCodeType = "ErrorMoreThanOneAccessModeSpecified"

	ResponseCodeTypeErrorMoveCopyFailed ResponseCodeType = "ErrorMoveCopyFailed"

	ResponseCodeTypeErrorMoveDistinguishedFolder ResponseCodeType = "ErrorMoveDistinguishedFolder"

	ResponseCodeTypeErrorMultiLegacyMailboxAccess ResponseCodeType = "ErrorMultiLegacyMailboxAccess"

	ResponseCodeTypeErrorNameResolutionMultipleResults ResponseCodeType = "ErrorNameResolutionMultipleResults"

	ResponseCodeTypeErrorNameResolutionNoMailbox ResponseCodeType = "ErrorNameResolutionNoMailbox"

	ResponseCodeTypeErrorNameResolutionNoResults ResponseCodeType = "ErrorNameResolutionNoResults"

	ResponseCodeTypeErrorNoApplicableProxyCASServersAvailable ResponseCodeType = "ErrorNoApplicableProxyCASServersAvailable"

	ResponseCodeTypeErrorNoCalendar ResponseCodeType = "ErrorNoCalendar"

	ResponseCodeTypeErrorNoDestinationCASDueToKerberosRequirements ResponseCodeType = "ErrorNoDestinationCASDueToKerberosRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToSSLRequirements ResponseCodeType = "ErrorNoDestinationCASDueToSSLRequirements"

	ResponseCodeTypeErrorNoDestinationCASDueToVersionMismatch ResponseCodeType = "ErrorNoDestinationCASDueToVersionMismatch"

	ResponseCodeTypeErrorNoFolderClassOverride ResponseCodeType = "ErrorNoFolderClassOverride"

	ResponseCodeTypeErrorNoFreeBusyAccess ResponseCodeType = "ErrorNoFreeBusyAccess"

	ResponseCodeTypeErrorNonExistentMailbox ResponseCodeType = "ErrorNonExistentMailbox"

	ResponseCodeTypeErrorNonPrimarySmtpAddress ResponseCodeType = "ErrorNonPrimarySmtpAddress"

	ResponseCodeTypeErrorNoPropertyTagForCustomProperties ResponseCodeType = "ErrorNoPropertyTagForCustomProperties"

	ResponseCodeTypeErrorNoPublicFolderReplicaAvailable ResponseCodeType = "ErrorNoPublicFolderReplicaAvailable"

	ResponseCodeTypeErrorNoPublicFolderServerAvailable ResponseCodeType = "ErrorNoPublicFolderServerAvailable"

	ResponseCodeTypeErrorNoRespondingCASInDestinationSite ResponseCodeType = "ErrorNoRespondingCASInDestinationSite"

	ResponseCodeTypeErrorNotDelegate ResponseCodeType = "ErrorNotDelegate"

	ResponseCodeTypeErrorNotEnoughMemory ResponseCodeType = "ErrorNotEnoughMemory"

	ResponseCodeTypeErrorObjectTypeChanged ResponseCodeType = "ErrorObjectTypeChanged"

	ResponseCodeTypeErrorOccurrenceCrossingBoundary ResponseCodeType = "ErrorOccurrenceCrossingBoundary"

	ResponseCodeTypeErrorOccurrenceTimeSpanTooBig ResponseCodeType = "ErrorOccurrenceTimeSpanTooBig"

	ResponseCodeTypeErrorOperationNotAllowedWithPublicFolderRoot ResponseCodeType = "ErrorOperationNotAllowedWithPublicFolderRoot"

	ResponseCodeTypeErrorParentFolderIdRequired ResponseCodeType = "ErrorParentFolderIdRequired"

	ResponseCodeTypeErrorParentFolderNotFound ResponseCodeType = "ErrorParentFolderNotFound"

	ResponseCodeTypeErrorPasswordChangeRequired ResponseCodeType = "ErrorPasswordChangeRequired"

	ResponseCodeTypeErrorPasswordExpired ResponseCodeType = "ErrorPasswordExpired"

	ResponseCodeTypeErrorPhoneNumberNotDialable ResponseCodeType = "ErrorPhoneNumberNotDialable"

	ResponseCodeTypeErrorPropertyUpdate ResponseCodeType = "ErrorPropertyUpdate"

	ResponseCodeTypeErrorPromptPublishingOperationFailed ResponseCodeType = "ErrorPromptPublishingOperationFailed"

	ResponseCodeTypeErrorPropertyValidationFailure ResponseCodeType = "ErrorPropertyValidationFailure"

	ResponseCodeTypeErrorProxiedSubscriptionCallFailure ResponseCodeType = "ErrorProxiedSubscriptionCallFailure"

	ResponseCodeTypeErrorProxyCallFailed ResponseCodeType = "ErrorProxyCallFailed"

	ResponseCodeTypeErrorProxyGroupSidLimitExceeded ResponseCodeType = "ErrorProxyGroupSidLimitExceeded"

	ResponseCodeTypeErrorProxyRequestNotAllowed ResponseCodeType = "ErrorProxyRequestNotAllowed"

	ResponseCodeTypeErrorProxyRequestProcessingFailed ResponseCodeType = "ErrorProxyRequestProcessingFailed"

	ResponseCodeTypeErrorProxyServiceDiscoveryFailed ResponseCodeType = "ErrorProxyServiceDiscoveryFailed"

	ResponseCodeTypeErrorProxyTokenExpired ResponseCodeType = "ErrorProxyTokenExpired"

	ResponseCodeTypeErrorPublicFolderMailboxDiscoveryFailed ResponseCodeType = "ErrorPublicFolderMailboxDiscoveryFailed"

	ResponseCodeTypeErrorPublicFolderOperationFailed ResponseCodeType = "ErrorPublicFolderOperationFailed"

	ResponseCodeTypeErrorPublicFolderRequestProcessingFailed ResponseCodeType = "ErrorPublicFolderRequestProcessingFailed"

	ResponseCodeTypeErrorPublicFolderServerNotFound ResponseCodeType = "ErrorPublicFolderServerNotFound"

	ResponseCodeTypeErrorPublicFolderSyncException ResponseCodeType = "ErrorPublicFolderSyncException"

	ResponseCodeTypeErrorQueryFilterTooLong ResponseCodeType = "ErrorQueryFilterTooLong"

	ResponseCodeTypeErrorQuotaExceeded ResponseCodeType = "ErrorQuotaExceeded"

	ResponseCodeTypeErrorReadEventsFailed ResponseCodeType = "ErrorReadEventsFailed"

	ResponseCodeTypeErrorReadReceiptNotPending ResponseCodeType = "ErrorReadReceiptNotPending"

	ResponseCodeTypeErrorRecurrenceEndDateTooBig ResponseCodeType = "ErrorRecurrenceEndDateTooBig"

	ResponseCodeTypeErrorRecurrenceHasNoOccurrence ResponseCodeType = "ErrorRecurrenceHasNoOccurrence"

	ResponseCodeTypeErrorRemoveDelegatesFailed ResponseCodeType = "ErrorRemoveDelegatesFailed"

	ResponseCodeTypeErrorRequestAborted ResponseCodeType = "ErrorRequestAborted"

	ResponseCodeTypeErrorRequestStreamTooBig ResponseCodeType = "ErrorRequestStreamTooBig"

	ResponseCodeTypeErrorRequiredPropertyMissing ResponseCodeType = "ErrorRequiredPropertyMissing"

	ResponseCodeTypeErrorResolveNamesInvalidFolderType ResponseCodeType = "ErrorResolveNamesInvalidFolderType"

	ResponseCodeTypeErrorResolveNamesOnlyOneContactsFolderAllowed ResponseCodeType = "ErrorResolveNamesOnlyOneContactsFolderAllowed"

	ResponseCodeTypeErrorResponseSchemaValidation ResponseCodeType = "ErrorResponseSchemaValidation"

	ResponseCodeTypeErrorRestrictionTooLong ResponseCodeType = "ErrorRestrictionTooLong"

	ResponseCodeTypeErrorRestrictionTooComplex ResponseCodeType = "ErrorRestrictionTooComplex"

	ResponseCodeTypeErrorResultSetTooBig ResponseCodeType = "ErrorResultSetTooBig"

	ResponseCodeTypeErrorInvalidExchangeImpersonationHeaderData ResponseCodeType = "ErrorInvalidExchangeImpersonationHeaderData"

	ResponseCodeTypeErrorSavedItemFolderNotFound ResponseCodeType = "ErrorSavedItemFolderNotFound"

	ResponseCodeTypeErrorSchemaValidation ResponseCodeType = "ErrorSchemaValidation"

	ResponseCodeTypeErrorSearchFolderNotInitialized ResponseCodeType = "ErrorSearchFolderNotInitialized"

	ResponseCodeTypeErrorSendAsDenied ResponseCodeType = "ErrorSendAsDenied"

	ResponseCodeTypeErrorSendMeetingCancellationsRequired ResponseCodeType = "ErrorSendMeetingCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsOrCancellationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsOrCancellationsRequired"

	ResponseCodeTypeErrorSendMeetingInvitationsRequired ResponseCodeType = "ErrorSendMeetingInvitationsRequired"

	ResponseCodeTypeErrorSentMeetingRequestUpdate ResponseCodeType = "ErrorSentMeetingRequestUpdate"

	ResponseCodeTypeErrorSentTaskRequestUpdate ResponseCodeType = "ErrorSentTaskRequestUpdate"

	ResponseCodeTypeErrorServerBusy ResponseCodeType = "ErrorServerBusy"

	ResponseCodeTypeErrorServiceDiscoveryFailed ResponseCodeType = "ErrorServiceDiscoveryFailed"

	ResponseCodeTypeErrorStaleObject ResponseCodeType = "ErrorStaleObject"

	ResponseCodeTypeErrorSubmissionQuotaExceeded ResponseCodeType = "ErrorSubmissionQuotaExceeded"

	ResponseCodeTypeErrorSubscriptionAccessDenied ResponseCodeType = "ErrorSubscriptionAccessDenied"

	ResponseCodeTypeErrorSubscriptionDelegateAccessNotSupported ResponseCodeType = "ErrorSubscriptionDelegateAccessNotSupported"

	ResponseCodeTypeErrorSubscriptionNotFound ResponseCodeType = "ErrorSubscriptionNotFound"

	ResponseCodeTypeErrorSubscriptionUnsubscribed ResponseCodeType = "ErrorSubscriptionUnsubscribed"

	ResponseCodeTypeErrorSyncFolderNotFound ResponseCodeType = "ErrorSyncFolderNotFound"

	ResponseCodeTypeErrorTeamMailboxNotFound ResponseCodeType = "ErrorTeamMailboxNotFound"

	ResponseCodeTypeErrorTeamMailboxNotLinkedToSharePoint ResponseCodeType = "ErrorTeamMailboxNotLinkedToSharePoint"

	ResponseCodeTypeErrorTeamMailboxUrlValidationFailed ResponseCodeType = "ErrorTeamMailboxUrlValidationFailed"

	ResponseCodeTypeErrorTeamMailboxNotAuthorizedOwner ResponseCodeType = "ErrorTeamMailboxNotAuthorizedOwner"

	ResponseCodeTypeErrorTeamMailboxActiveToPendingDelete ResponseCodeType = "ErrorTeamMailboxActiveToPendingDelete"

	ResponseCodeTypeErrorTeamMailboxFailedSendingNotifications ResponseCodeType = "ErrorTeamMailboxFailedSendingNotifications"

	ResponseCodeTypeErrorTeamMailboxErrorUnknown ResponseCodeType = "ErrorTeamMailboxErrorUnknown"

	ResponseCodeTypeErrorTimeIntervalTooBig ResponseCodeType = "ErrorTimeIntervalTooBig"

	ResponseCodeTypeErrorTimeoutExpired ResponseCodeType = "ErrorTimeoutExpired"

	ResponseCodeTypeErrorTimeZone ResponseCodeType = "ErrorTimeZone"

	ResponseCodeTypeErrorToFolderNotFound ResponseCodeType = "ErrorToFolderNotFound"

	ResponseCodeTypeErrorTokenSerializationDenied ResponseCodeType = "ErrorTokenSerializationDenied"

	ResponseCodeTypeErrorTooManyObjectsOpened ResponseCodeType = "ErrorTooManyObjectsOpened"

	ResponseCodeTypeErrorUpdatePropertyMismatch ResponseCodeType = "ErrorUpdatePropertyMismatch"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADCreationFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADCreationFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxAADDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxAADDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNamingPolicy ResponseCodeType = "ErrorUnifiedGroupMailboxNamingPolicy"

	ResponseCodeTypeErrorUnifiedGroupMailboxDeleteFailed ResponseCodeType = "ErrorUnifiedGroupMailboxDeleteFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxNotFound ResponseCodeType = "ErrorUnifiedGroupMailboxNotFound"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateDelayed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateDelayed"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdatedPartialProperties ResponseCodeType = "ErrorUnifiedGroupMailboxUpdatedPartialProperties"

	ResponseCodeTypeErrorUnifiedGroupMailboxUpdateFailed ResponseCodeType = "ErrorUnifiedGroupMailboxUpdateFailed"

	ResponseCodeTypeErrorUnifiedGroupMailboxProvisionFailed ResponseCodeType = "ErrorUnifiedGroupMailboxProvisionFailed"

	ResponseCodeTypeErrorUnifiedMessagingDialPlanNotFound ResponseCodeType = "ErrorUnifiedMessagingDialPlanNotFound"

	ResponseCodeTypeErrorUnifiedMessagingReportDataNotFound ResponseCodeType = "ErrorUnifiedMessagingReportDataNotFound"

	ResponseCodeTypeErrorUnifiedMessagingPromptNotFound ResponseCodeType = "ErrorUnifiedMessagingPromptNotFound"

	ResponseCodeTypeErrorUnifiedMessagingRequestFailed ResponseCodeType = "ErrorUnifiedMessagingRequestFailed"

	ResponseCodeTypeErrorUnifiedMessagingServerNotFound ResponseCodeType = "ErrorUnifiedMessagingServerNotFound"

	ResponseCodeTypeErrorUnableToGetUserOofSettings ResponseCodeType = "ErrorUnableToGetUserOofSettings"

	ResponseCodeTypeErrorUnableToRemoveImContactFromGroup ResponseCodeType = "ErrorUnableToRemoveImContactFromGroup"

	ResponseCodeTypeErrorUnsupportedSubFilter ResponseCodeType = "ErrorUnsupportedSubFilter"

	ResponseCodeTypeErrorUnsupportedCulture ResponseCodeType = "ErrorUnsupportedCulture"

	ResponseCodeTypeErrorUnsupportedMapiPropertyType ResponseCodeType = "ErrorUnsupportedMapiPropertyType"

	ResponseCodeTypeErrorUnsupportedMimeConversion ResponseCodeType = "ErrorUnsupportedMimeConversion"

	ResponseCodeTypeErrorUnsupportedPathForQuery ResponseCodeType = "ErrorUnsupportedPathForQuery"

	ResponseCodeTypeErrorUnsupportedPathForSortGroup ResponseCodeType = "ErrorUnsupportedPathForSortGroup"

	ResponseCodeTypeErrorUnsupportedPropertyDefinition ResponseCodeType = "ErrorUnsupportedPropertyDefinition"

	ResponseCodeTypeErrorUnsupportedQueryFilter ResponseCodeType = "ErrorUnsupportedQueryFilter"

	ResponseCodeTypeErrorUnsupportedRecurrence ResponseCodeType = "ErrorUnsupportedRecurrence"

	ResponseCodeTypeErrorUnsupportedTypeForConversion ResponseCodeType = "ErrorUnsupportedTypeForConversion"

	ResponseCodeTypeErrorUpdateDelegatesFailed ResponseCodeType = "ErrorUpdateDelegatesFailed"

	ResponseCodeTypeErrorUserNotUnifiedMessagingEnabled ResponseCodeType = "ErrorUserNotUnifiedMessagingEnabled"

	ResponseCodeTypeErrorVoiceMailNotImplemented ResponseCodeType = "ErrorVoiceMailNotImplemented"

	ResponseCodeTypeErrorValueOutOfRange ResponseCodeType = "ErrorValueOutOfRange"

	ResponseCodeTypeErrorVirusDetected ResponseCodeType = "ErrorVirusDetected"

	ResponseCodeTypeErrorVirusMessageDeleted ResponseCodeType = "ErrorVirusMessageDeleted"

	ResponseCodeTypeErrorWebRequestInInvalidState ResponseCodeType = "ErrorWebRequestInInvalidState"

	ResponseCodeTypeErrorWin32InteropError ResponseCodeType = "ErrorWin32InteropError"

	ResponseCodeTypeErrorWorkingHoursSaveFailed ResponseCodeType = "ErrorWorkingHoursSaveFailed"

	ResponseCodeTypeErrorWorkingHoursXmlMalformed ResponseCodeType = "ErrorWorkingHoursXmlMalformed"

	ResponseCodeTypeErrorWrongServerVersion ResponseCodeType = "ErrorWrongServerVersion"

	ResponseCodeTypeErrorWrongServerVersionDelegate ResponseCodeType = "ErrorWrongServerVersionDelegate"

	ResponseCodeTypeErrorMissingInformationSharingFolderId ResponseCodeType = "ErrorMissingInformationSharingFolderId"

	ResponseCodeTypeErrorDuplicateSOAPHeader ResponseCodeType = "ErrorDuplicateSOAPHeader"

	ResponseCodeTypeErrorSharingSynchronizationFailed ResponseCodeType = "ErrorSharingSynchronizationFailed"

	ResponseCodeTypeErrorSharingNoExternalEwsAvailable ResponseCodeType = "ErrorSharingNoExternalEwsAvailable"

	ResponseCodeTypeErrorFreeBusyDLLimitReached ResponseCodeType = "ErrorFreeBusyDLLimitReached"

	ResponseCodeTypeErrorInvalidGetSharingFolderRequest ResponseCodeType = "ErrorInvalidGetSharingFolderRequest"

	ResponseCodeTypeErrorNotAllowedExternalSharingByPolicy ResponseCodeType = "ErrorNotAllowedExternalSharingByPolicy"

	ResponseCodeTypeErrorUserNotAllowedByPolicy ResponseCodeType = "ErrorUserNotAllowedByPolicy"

	ResponseCodeTypeErrorPermissionNotAllowedByPolicy ResponseCodeType = "ErrorPermissionNotAllowedByPolicy"

	ResponseCodeTypeErrorOrganizationNotFederated ResponseCodeType = "ErrorOrganizationNotFederated"

	ResponseCodeTypeErrorMailboxFailover ResponseCodeType = "ErrorMailboxFailover"

	ResponseCodeTypeErrorInvalidExternalSharingInitiator ResponseCodeType = "ErrorInvalidExternalSharingInitiator"

	ResponseCodeTypeErrorMessageTrackingPermanentError ResponseCodeType = "ErrorMessageTrackingPermanentError"

	ResponseCodeTypeErrorMessageTrackingTransientError ResponseCodeType = "ErrorMessageTrackingTransientError"

	ResponseCodeTypeErrorMessageTrackingNoSuchDomain ResponseCodeType = "ErrorMessageTrackingNoSuchDomain"

	ResponseCodeTypeErrorUserWithoutFederatedProxyAddress ResponseCodeType = "ErrorUserWithoutFederatedProxyAddress"

	ResponseCodeTypeErrorInvalidOrganizationRelationshipForFreeBusy ResponseCodeType = "ErrorInvalidOrganizationRelationshipForFreeBusy"

	ResponseCodeTypeErrorInvalidFederatedOrganizationId ResponseCodeType = "ErrorInvalidFederatedOrganizationId"

	ResponseCodeTypeErrorInvalidExternalSharingSubscriber ResponseCodeType = "ErrorInvalidExternalSharingSubscriber"

	ResponseCodeTypeErrorInvalidSharingData ResponseCodeType = "ErrorInvalidSharingData"

	ResponseCodeTypeErrorInvalidSharingMessage ResponseCodeType = "ErrorInvalidSharingMessage"

	ResponseCodeTypeErrorNotSupportedSharingMessage ResponseCodeType = "ErrorNotSupportedSharingMessage"

	ResponseCodeTypeErrorApplyConversationActionFailed ResponseCodeType = "ErrorApplyConversationActionFailed"

	ResponseCodeTypeErrorInboxRulesValidationError ResponseCodeType = "ErrorInboxRulesValidationError"

	ResponseCodeTypeErrorOutlookRuleBlobExists ResponseCodeType = "ErrorOutlookRuleBlobExists"

	ResponseCodeTypeErrorRulesOverQuota ResponseCodeType = "ErrorRulesOverQuota"

	ResponseCodeTypeErrorNewEventStreamConnectionOpened ResponseCodeType = "ErrorNewEventStreamConnectionOpened"

	ResponseCodeTypeErrorMissedNotificationEvents ResponseCodeType = "ErrorMissedNotificationEvents"

	ResponseCodeTypeErrorDuplicateLegacyDistinguishedName ResponseCodeType = "ErrorDuplicateLegacyDistinguishedName"

	ResponseCodeTypeErrorInvalidClientAccessTokenRequest ResponseCodeType = "ErrorInvalidClientAccessTokenRequest"

	ResponseCodeTypeErrorUnauthorizedClientAccessTokenRequest ResponseCodeType = "ErrorUnauthorizedClientAccessTokenRequest"

	ResponseCodeTypeErrorNoSpeechDetected ResponseCodeType = "ErrorNoSpeechDetected"

	ResponseCodeTypeErrorUMServerUnavailable ResponseCodeType = "ErrorUMServerUnavailable"

	ResponseCodeTypeErrorRecipientNotFound ResponseCodeType = "ErrorRecipientNotFound"

	ResponseCodeTypeErrorRecognizerNotInstalled ResponseCodeType = "ErrorRecognizerNotInstalled"

	ResponseCodeTypeErrorSpeechGrammarError ResponseCodeType = "ErrorSpeechGrammarError"

	ResponseCodeTypeErrorInvalidManagementRoleHeader ResponseCodeType = "ErrorInvalidManagementRoleHeader"

	ResponseCodeTypeErrorLocationServicesDisabled ResponseCodeType = "ErrorLocationServicesDisabled"

	ResponseCodeTypeErrorLocationServicesRequestTimedOut ResponseCodeType = "ErrorLocationServicesRequestTimedOut"

	ResponseCodeTypeErrorLocationServicesRequestFailed ResponseCodeType = "ErrorLocationServicesRequestFailed"

	ResponseCodeTypeErrorLocationServicesInvalidRequest ResponseCodeType = "ErrorLocationServicesInvalidRequest"

	ResponseCodeTypeErrorWeatherServiceDisabled ResponseCodeType = "ErrorWeatherServiceDisabled"

	ResponseCodeTypeErrorMailboxScopeNotAllowedWithoutQueryString ResponseCodeType = "ErrorMailboxScopeNotAllowedWithoutQueryString"

	ResponseCodeTypeErrorArchiveMailboxSearchFailed ResponseCodeType = "ErrorArchiveMailboxSearchFailed"

	ResponseCodeTypeErrorGetRemoteArchiveFolderFailed ResponseCodeType = "ErrorGetRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorFindRemoteArchiveFolderFailed ResponseCodeType = "ErrorFindRemoteArchiveFolderFailed"

	ResponseCodeTypeErrorGetRemoteArchiveItemFailed ResponseCodeType = "ErrorGetRemoteArchiveItemFailed"

	ResponseCodeTypeErrorExportRemoteArchiveItemsFailed ResponseCodeType = "ErrorExportRemoteArchiveItemsFailed"

	ResponseCodeTypeErrorInvalidPhotoSize ResponseCodeType = "ErrorInvalidPhotoSize"

	ResponseCodeTypeErrorSearchQueryHasTooManyKeywords ResponseCodeType = "ErrorSearchQueryHasTooManyKeywords"

	ResponseCodeTypeErrorSearchTooManyMailboxes ResponseCodeType = "ErrorSearchTooManyMailboxes"

	ResponseCodeTypeErrorInvalidRetentionTagNone ResponseCodeType = "ErrorInvalidRetentionTagNone"

	ResponseCodeTypeErrorDiscoverySearchesDisabled ResponseCodeType = "ErrorDiscoverySearchesDisabled"

	ResponseCodeTypeErrorCalendarSeekToConditionNotSupported ResponseCodeType = "ErrorCalendarSeekToConditionNotSupported"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForAccept ResponseCodeType = "ErrorCalendarIsGroupMailboxForAccept"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForDecline ResponseCodeType = "ErrorCalendarIsGroupMailboxForDecline"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForTentative ResponseCodeType = "ErrorCalendarIsGroupMailboxForTentative"

	ResponseCodeTypeErrorCalendarIsGroupMailboxForSuppressReadReceipt ResponseCodeType = "ErrorCalendarIsGroupMailboxForSuppressReadReceipt"

	ResponseCodeTypeErrorOrganizationAccessBlocked ResponseCodeType = "ErrorOrganizationAccessBlocked"

	ResponseCodeTypeErrorInvalidLicense ResponseCodeType = "ErrorInvalidLicense"

	ResponseCodeTypeErrorMessagePerFolderCountReceiveQuotaExceeded ResponseCodeType = "ErrorMessagePerFolderCountReceiveQuotaExceeded"

	ResponseCodeTypeErrorInvalidBulkActionType ResponseCodeType = "ErrorInvalidBulkActionType"

	ResponseCodeTypeErrorInvalidKeepNCount ResponseCodeType = "ErrorInvalidKeepNCount"

	ResponseCodeTypeErrorInvalidKeepNType ResponseCodeType = "ErrorInvalidKeepNType"

	ResponseCodeTypeErrorNoOAuthServerAvailableForRequest ResponseCodeType = "ErrorNoOAuthServerAvailableForRequest"

	ResponseCodeTypeErrorInstantSearchSessionExpired ResponseCodeType = "ErrorInstantSearchSessionExpired"

	ResponseCodeTypeErrorInstantSearchTimeout ResponseCodeType = "ErrorInstantSearchTimeout"

	ResponseCodeTypeErrorInstantSearchFailed ResponseCodeType = "ErrorInstantSearchFailed"

	ResponseCodeTypeErrorUnsupportedUserForExecuteSearch ResponseCodeType = "ErrorUnsupportedUserForExecuteSearch"

	ResponseCodeTypeErrorDuplicateExtendedKeywordDefinition ResponseCodeType = "ErrorDuplicateExtendedKeywordDefinition"

	ResponseCodeTypeErrorMissingExchangePrincipal ResponseCodeType = "ErrorMissingExchangePrincipal"

	ResponseCodeTypeErrorUnexpectedUnifiedGroupsCount ResponseCodeType = "ErrorUnexpectedUnifiedGroupsCount"

	ResponseCodeTypeErrorParsingXMLResponse ResponseCodeType = "ErrorParsingXMLResponse"

	ResponseCodeTypeErrorInvalidFederationOrganizationIdentifier ResponseCodeType = "ErrorInvalidFederationOrganizationIdentifier"

	ResponseCodeTypeErrorInvalidSweepRule ResponseCodeType = "ErrorInvalidSweepRule"

	ResponseCodeTypeErrorInvalidSweepRuleOperationType ResponseCodeType = "ErrorInvalidSweepRuleOperationType"

	ResponseCodeTypeErrorTargetDomainNotSupported ResponseCodeType = "ErrorTargetDomainNotSupported"

	ResponseCodeTypeErrorInvalidInternetWebProxyOnLocalServer ResponseCodeType = "ErrorInvalidInternetWebProxyOnLocalServer"

	ResponseCodeTypeErrorNoSenderRestrictionsSettingsFoundInRequest ResponseCodeType = "ErrorNoSenderRestrictionsSettingsFoundInRequest"

	ResponseCodeTypeErrorDuplicateSenderRestrictionsInputFound ResponseCodeType = "ErrorDuplicateSenderRestrictionsInputFound"

	ResponseCodeTypeErrorSenderRestrictionsUpdateFailed ResponseCodeType = "ErrorSenderRestrictionsUpdateFailed"

	ResponseCodeTypeErrorMessageSubmissionBlocked ResponseCodeType = "ErrorMessageSubmissionBlocked"

	ResponseCodeTypeErrorExceededMessageLimit ResponseCodeType = "ErrorExceededMessageLimit"

	ResponseCodeTypeErrorExceededMaxRecipientLimitBlock ResponseCodeType = "ErrorExceededMaxRecipientLimitBlock"

	ResponseCodeTypeErrorAccountSuspend ResponseCodeType = "ErrorAccountSuspend"

	ResponseCodeTypeErrorExceededMaxRecipientLimit ResponseCodeType = "ErrorExceededMaxRecipientLimit"

	ResponseCodeTypeErrorMessageBlocked ResponseCodeType = "ErrorMessageBlocked"

	ResponseCodeTypeErrorAccountSuspendShowTierUpgrade ResponseCodeType = "ErrorAccountSuspendShowTierUpgrade"

	ResponseCodeTypeErrorExceededMessageLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMessageLimitShowTierUpgrade"

	ResponseCodeTypeErrorExceededMaxRecipientLimitShowTierUpgrade ResponseCodeType = "ErrorExceededMaxRecipientLimitShowTierUpgrade"

	ResponseCodeTypeErrorInvalidLongitude ResponseCodeType = "ErrorInvalidLongitude"

	ResponseCodeTypeErrorInvalidLatitude ResponseCodeType = "ErrorInvalidLatitude"

	ResponseCodeTypeErrorProxySoapException ResponseCodeType = "ErrorProxySoapException"

	ResponseCodeTypeErrorUnifiedGroupAlreadyExists ResponseCodeType = "ErrorUnifiedGroupAlreadyExists"

	ResponseCodeTypeErrorUnifiedGroupAadAuthorizationRequestDenied ResponseCodeType = "ErrorUnifiedGroupAadAuthorizationRequestDenied"

	ResponseCodeTypeErrorUnifiedGroupCreationDisabled ResponseCodeType = "ErrorUnifiedGroupCreationDisabled"

	ResponseCodeTypeErrorMarketPlaceExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorMarketPlaceExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorExtensionAlreadyInstalledForOrg ResponseCodeType = "ErrorExtensionAlreadyInstalledForOrg"

	ResponseCodeTypeErrorNewerExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerExtensionAlreadyInstalled"

	ResponseCodeTypeErrorNewerMarketPlaceExtensionAlreadyInstalled ResponseCodeType = "ErrorNewerMarketPlaceExtensionAlreadyInstalled"

	ResponseCodeTypeErrorInvalidExtensionId ResponseCodeType = "ErrorInvalidExtensionId"

	ResponseCodeTypeErrorCannotUninstallProvidedExtensions ResponseCodeType = "ErrorCannotUninstallProvidedExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallMarketPlaceExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallMarketPlaceExtensions"

	ResponseCodeTypeErrorNoRbacPermissionToInstallReadWriteMailboxExtensions ResponseCodeType = "ErrorNoRbacPermissionToInstallReadWriteMailboxExtensions"

	ResponseCodeTypeErrorInvalidReportMessageActionType ResponseCodeType = "ErrorInvalidReportMessageActionType"

	ResponseCodeTypeErrorCannotDownloadExtensionManifest ResponseCodeType = "ErrorCannotDownloadExtensionManifest"

	ResponseCodeTypeErrorCalendarForwardActionNotAllowed ResponseCodeType = "ErrorCalendarForwardActionNotAllowed"

	ResponseCodeTypeErrorUnifiedGroupAliasNamingPolicy ResponseCodeType = "ErrorUnifiedGroupAliasNamingPolicy"

	ResponseCodeTypeErrorSubscriptionsDisabledForGroup ResponseCodeType = "ErrorSubscriptionsDisabledForGroup"
)

type ListOfExtensionIdsType []GuidType

type GetFolder GetFolderType

type UploadItems UploadItemsType

type UploadItemsResponse UploadItemsResponseType

type ExportItems ExportItemsType

type ExportItemsResponse ExportItemsResponseType

type CreateFolder CreateFolderType

type FindFolder FindFolderType

type FindFolderResponse FindFolderResponseType

type DeleteFolder DeleteFolderType

type DeleteFolderResponse DeleteFolderResponseType

type EmptyFolder EmptyFolderType

type EmptyFolderResponse EmptyFolderResponseType

type MoveFolder MoveFolderType

type CopyFolder CopyFolderType

type UpdateFolder UpdateFolderType

type CreateFolderResponse CreateFolderResponseType

type GetFolderResponse GetFolderResponseType

type UpdateFolderResponse UpdateFolderResponseType

type MoveFolderResponse MoveFolderResponseType

type CopyFolderResponse CopyFolderResponseType

type CreateFolderPath CreateFolderPathType

type CreateFolderPathResponse CreateFolderPathResponseType

type GetItem GetItemType

type CreateItem CreateItemType

type UpdateItem UpdateItemType

type UpdateItemInRecoverableItems UpdateItemInRecoverableItemsType

type DeleteItem DeleteItemType

type MoveItem MoveItemType

type CopyItem CopyItemType

type ArchiveItem ArchiveItemType

type SendItem SendItemType

type SendItemResponse SendItemResponseType

type FindItem FindItemType

type FindConversation FindConversationType

type FindConversationResponse FindConversationResponseMessageType

type PerformInstantSearch PerformInstantSearchRequest

type EndInstantSearchSession EndInstantSearchSessionRequest

type ApplyConversationAction ApplyConversationActionType

type ApplyConversationActionResponse ApplyConversationActionResponseType

type FindPeople FindPeopleType

type FindPeopleResponse FindPeopleResponseMessageType

type FindTags FindTagsType

type FindTagsResponse FindTagsResponseMessageType

type AddTag AddTagType

type AddTagResponse AddTagResponseMessageType

type HideTag HideTagType

type HideTagResponse HideTagResponseMessageType

type GetPersona GetPersonaType

type GetPersonaResponseMessage GetPersonaResponseMessageType

type CreateAttachment CreateAttachmentType

type CreateAttachmentResponse CreateAttachmentResponseType

type DeleteAttachment DeleteAttachmentType

type DeleteAttachmentResponse DeleteAttachmentResponseType

type GetAttachment GetAttachmentType

type GetAttachmentResponse GetAttachmentResponseType

type CreateItemResponse CreateItemResponseType

type UpdateItemResponse UpdateItemResponseType

type UpdateItemInRecoverableItemsResponse UpdateItemInRecoverableItemsResponseType

type GetItemResponse GetItemResponseType

type MoveItemResponse MoveItemResponseType

type CopyItemResponse CopyItemResponseType

type DeleteItemResponse DeleteItemResponseType

type FindItemResponse FindItemResponseType

type ArchiveItemResponse ArchiveItemResponseType

type GetClientAccessToken GetClientAccessTokenType

type GetClientAccessTokenResponse GetClientAccessTokenResponseType

type GetFocusedOtherOverrides GetFocusedOtherOverridesRequestType

type GetFocusedOtherOverridesResponse GetFocusedOtherOverridesResponseType

type CreateOrUpdateFocusedOtherOverride CreateOrUpdateFocusedOtherOverrideRequestType

type CreateOrUpdateFocusedOtherOverrideResponse CreateOrUpdateFocusedOtherOverrideResponseType

type DeleteFocusedOtherOverride DeleteFocusedOtherOverrideRequestType

type DeleteFocusedOtherOverrideResponse DeleteFocusedOtherOverrideResponseType

type ResolveNames ResolveNamesType

type ResolveNamesResponse ResolveNamesResponseType

type GetPasswordExpirationDate GetPasswordExpirationDateType

type GetPasswordExpirationDateResponse GetPasswordExpirationDateResponseMessageType

type GetMailTips GetMailTipsType

type GetMailTipsResponse GetMailTipsResponseMessageType

type PlayOnPhone PlayOnPhoneType

type PlayOnPhoneResponse PlayOnPhoneResponseMessageType

type GetPhoneCallInformation GetPhoneCallInformationType

type GetPhoneCallInformationResponse GetPhoneCallInformationResponseMessageType

type DisconnectPhoneCall DisconnectPhoneCallType

type DisconnectPhoneCallResponse DisconnectPhoneCallResponseMessageType

type ExpandDL ExpandDLType

type ExpandDLResponse ExpandDLResponseType

type GetServerTimeZones GetServerTimeZonesType

type GetServerTimeZonesResponse GetServerTimeZonesResponseType

type CreateManagedFolder CreateManagedFolderRequestType

type CreateManagedFolderResponse CreateManagedFolderResponseType

type Subscribe SubscribeType

type SubscribeResponse SubscribeResponseType

type Unsubscribe UnsubscribeType

type UnsubscribeResponse UnsubscribeResponseType

type GetEvents GetEventsType

type GetEventsResponse GetEventsResponseType

type GetStreamingEvents GetStreamingEventsType

type GetStreamingEventsResponse GetStreamingEventsResponseType

type SendNotification SendNotificationResponseType

type SendNotificationResult SendNotificationResultType

type SyncFolderHierarchy SyncFolderHierarchyType

type SyncFolderHierarchyResponse SyncFolderHierarchyResponseType

type SyncFolderItems SyncFolderItemsType

type SyncFolderItemsResponse SyncFolderItemsResponseType

type GetUserAvailabilityRequest GetUserAvailabilityRequestType

type GetUserAvailabilityResponse GetUserAvailabilityResponseType

type ConvertId ConvertIdType

type ConvertIdResponse ConvertIdResponseType

type GetDelegate GetDelegateType

type GetDelegateResponse GetDelegateResponseMessageType

type AddDelegate AddDelegateType

type AddDelegateResponse AddDelegateResponseMessageType

type RemoveDelegate RemoveDelegateType

type RemoveDelegateResponse RemoveDelegateResponseMessageType

type UpdateDelegate UpdateDelegateType

type UpdateDelegateResponse UpdateDelegateResponseMessageType

type GetSharingMetadata GetSharingMetadataType

type GetSharingMetadataResponse GetSharingMetadataResponseMessageType

type RefreshSharingFolder RefreshSharingFolderType

type RefreshSharingFolderResponse RefreshSharingFolderResponseMessageType

type GetSharingFolder GetSharingFolderType

type GetSharingFolderResponse GetSharingFolderResponseMessageType

type CreateUserConfiguration CreateUserConfigurationType

type CreateUserConfigurationResponse CreateUserConfigurationResponseType

type DeleteUserConfiguration DeleteUserConfigurationType

type DeleteUserConfigurationResponse DeleteUserConfigurationResponseType

type GetUserConfiguration GetUserConfigurationType

type GetUserConfigurationResponse GetUserConfigurationResponseType

type GetSpecificUserConfiguration GetSpecificUserConfigurationType

type GetSpecificUserConfigurationResponse GetSpecificUserConfigurationResponseType

type UpdateUserConfiguration UpdateUserConfigurationType

type UpdateUserConfigurationResponse UpdateUserConfigurationResponseType

type SetTeamMailbox SetTeamMailboxRequestType

type UnpinTeamMailbox UnpinTeamMailboxRequestType

type SetTeamMailboxResponse SetTeamMailboxResponseMessageType

type UnpinTeamMailboxResponse UnpinTeamMailboxResponseMessageType

type GetRoomLists GetRoomListsType

type GetRoomListsResponse GetRoomListsResponseMessageType

type GetRooms GetRoomsType

type GetRoomsResponse GetRoomsResponseMessageType

type GetReminders GetRemindersType

type GetRemindersResponse GetRemindersResponseMessageType

type PerformReminderAction PerformReminderActionType

type PerformReminderActionResponse PerformReminderActionResponseMessageType

type GetServiceConfiguration GetServiceConfigurationType

type GetServiceConfigurationResponse GetServiceConfigurationResponseMessageType

type FindMessageTrackingReport FindMessageTrackingReportRequestType

type FindMessageTrackingReportResponse FindMessageTrackingReportResponseMessageType

type GetMessageTrackingReport GetMessageTrackingReportRequestType

type GetMessageTrackingReportResponse GetMessageTrackingReportResponseMessageType

type GetInboxRules GetInboxRulesRequestType

type GetInboxRulesResponse GetInboxRulesResponseType

type UpdateInboxRules UpdateInboxRulesRequestType

type UpdateInboxRulesResponse UpdateInboxRulesResponseType

type FindMailboxStatisticsByKeywords FindMailboxStatisticsByKeywordsType

type FindMailboxStatisticsByKeywordsResponse FindMailboxStatisticsByKeywordsResponseType

type GetSearchableMailboxes GetSearchableMailboxesType

type GetSearchableMailboxesResponse GetSearchableMailboxesResponseMessageType

type SearchMailboxes SearchMailboxesType

type SearchMailboxesResponse SearchMailboxesResponseType

type GetDiscoverySearchConfiguration GetDiscoverySearchConfigurationType

type GetDiscoverySearchConfigurationResponse GetDiscoverySearchConfigurationResponseMessageType

type GetHoldOnMailboxes GetHoldOnMailboxesType

type GetHoldOnMailboxesResponse GetHoldOnMailboxesResponseMessageType

type SetHoldOnMailboxes SetHoldOnMailboxesType

type SetHoldOnMailboxesResponse SetHoldOnMailboxesResponseMessageType

type GetNonIndexableItemStatistics GetNonIndexableItemStatisticsType

type GetNonIndexableItemStatisticsResponse GetNonIndexableItemStatisticsResponseMessageType

type GetNonIndexableItemDetails GetNonIndexableItemDetailsType

type GetNonIndexableItemDetailsResponse GetNonIndexableItemDetailsResponseMessageType

type MarkAllItemsAsRead MarkAllItemsAsReadType

type MarkAllItemsAsReadResponse MarkAllItemsAsReadResponseType

type GetConversationItems GetConversationItemsType

type GetConversationItemsResponse GetConversationItemsResponseType

type GetOMEConfiguration GetOMEConfigurationType

type GetOMEConfigurationResponse OMEConfigurationResponseType

type SetOMEConfiguration SetOMEConfigurationType

type SetOMEConfigurationResponse SetOMEConfigurationResponseType

type GetAppManifests GetAppManifestsType

type GetAppManifestsResponse GetAppManifestsResponseType

type GetAppMarketplaceUrl GetAppMarketplaceUrlType

type GetAppMarketplaceUrlResponse GetAppMarketplaceUrlResponseMessageType

type MarkAsJunk MarkAsJunkType

type MarkAsJunkResponse MarkAsJunkResponseType

type ReportMessage ReportMessageType

type ReportMessageResponse ReportMessageResponseType

type InstallApp InstallAppType

type InstallAppResponse InstallAppResponseType

type UninstallApp UninstallAppType

type UninstallAppResponse UninstallAppResponseType

type DisableApp DisableAppType

type DisableAppResponse DisableAppResponseType

type AddNewImContactToGroup AddNewImContactToGroupType

type AddNewImContactToGroupResponse AddNewImContactToGroupResponseMessageType

type AddNewTelUriContactToGroup AddNewTelUriContactToGroupType

type AddNewTelUriContactToGroupResponse AddNewTelUriContactToGroupResponseMessageType

type AddImContactToGroup AddImContactToGroupType

type AddImContactToGroupResponse AddImContactToGroupResponseMessageType

type RemoveImContactFromGroup RemoveImContactFromGroupType

type RemoveImContactFromGroupResponse RemoveImContactFromGroupResponseMessageType

type AddImGroup AddImGroupType

type AddImGroupResponse AddImGroupResponseMessageType

type AddDistributionGroupToImList AddDistributionGroupToImListType

type AddDistributionGroupToImListResponse AddDistributionGroupToImListResponseMessageType

type GetImItemList GetImItemListType

type GetImItemListResponse GetImItemListResponseMessageType

type GetImItems GetImItemsType

type GetImItemsResponse GetImItemsResponseMessageType

type RemoveContactFromImList RemoveContactFromImListType

type RemoveContactFromImListResponse RemoveContactFromImListResponseMessageType

type RemoveDistributionGroupFromImList RemoveDistributionGroupFromImListType

type RemoveDistributionGroupFromImListResponse RemoveDistributionGroupFromImListResponseMessageType

type RemoveImGroup RemoveImGroupType

type RemoveImGroupResponse RemoveImGroupResponseMessageType

type SetImGroup SetImGroupType

type SetImGroupResponse SetImGroupResponseMessageType

type SetImListMigrationCompleted SetImListMigrationCompletedType

type SetImListMigrationCompletedResponse SetImListMigrationCompletedResponseMessageType

type GetUserRetentionPolicyTags GetUserRetentionPolicyTagsType

type GetUserRetentionPolicyTagsResponse GetUserRetentionPolicyTagsResponseMessageType

type GetUserPhoto GetUserPhotoType

type GetUserPhotoResponse GetUserPhotoResponseMessageType

type GetMeetingSpace GetMeetingSpaceType

type GetMeetingSpaceResponseMessage GetMeetingSpaceResponseMessageType

type CreateMeetingSpace CreateMeetingSpaceType

type CreateMeetingSpaceResponseMessage CreateMeetingSpaceResponseMessageType

type UpdateMeetingSpace UpdateMeetingSpaceType

type UpdateMeetingSpaceResponseMessage UpdateMeetingSpaceResponseMessageType

type FindMeetingSpaceByJoinUrl FindMeetingSpaceByJoinUrlType

type FindMeetingSpaceByJoinUrlResponseMessage FindMeetingSpaceByJoinUrlResponseMessageType

type DeleteMeetingSpace DeleteMeetingSpaceType

type DeleteMeetingSpaceResponseMessage DeleteMeetingSpaceResponseMessageType

type GetMeetingInstanceRequest GetMeetingInstanceRequestType

type GetMeetingInstanceResponse GetMeetingInstanceResponseMessageType

type CreateMeetingInstanceRequest CreateMeetingInstanceRequestType

type CreateMeetingInstanceResponse CreateMeetingInstanceResponseMessageType

type UpdateMeetingInstanceRequest UpdateMeetingInstanceRequestType

type UpdateMeetingInstanceResponse UpdateMeetingInstanceResponseMessageType

type DeleteMeetingInstanceRequest DeleteMeetingInstanceRequestType

type DeleteMeetingInstanceResponse DeleteMeetingInstanceResponseMessageType

type SetUserPhoto SetUserPhotoType

type SetUserPhotoResponse SetUserPhotoResponseMessageType

type RegisterConsent RegisterConsentType

type RegisterConsentResponse RegisterConsentResponseMessageType

type FindAvailableMeetingTimes FindAvailableMeetingTimesType

type FindAvailableMeetingTimesResponse FindAvailableMeetingTimesResponseMessageType

type FindMeetingTimeCandidates FindMeetingTimeCandidatesType

type FindMeetingTimeCandidatesResponse FindMeetingTimeCandidatesResponseMessageType

type StartSearchSessionResponse StartSearchSessionResponseMessage

type GetSearchSuggestionsResponse GetSearchSuggestionsResponseMessage

type DeleteSearchSuggestionResponse DeleteSearchSuggestionResponseMessageType

type ExecuteSearchResponse ExecuteSearchResponseMessage

type EndSearchSessionResponse EndSearchSessionResponseMessage

type GetLastPrivateCatalogUpdate GetLastPrivateCatalogUpdateType

type GetLastPrivateCatalogUpdateResponse GetLastPrivateCatalogUpdateResponseType

type GetPrivateCatalogAddIns GetPrivateCatalogAddInsType

type GetPrivateCatalogAddInsResponse GetPrivateCatalogAddInsResponseType

type ResponseMessageType struct {
	MessageText string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageText,omitempty" json:"MessageText,omitempty"`

	ResponseCode *ResponseCodeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseCode,omitempty" json:"ResponseCode,omitempty"`

	DescriptiveLinkKey int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DescriptiveLinkKey,omitempty" json:"DescriptiveLinkKey,omitempty"`

	MessageXml struct {
	} `MessageXml,omitempty" json:"MessageXml,omitempty"`

	ResponseClass *ResponseClassType `xml:"ResponseClass,attr,omitempty" json:"ResponseClass,omitempty"`
}

type ArrayOfResponseMessagesType struct {
	CreateItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateItemResponseMessage,omitempty" json:"CreateItemResponseMessage,omitempty"`

	DeleteItemResponseMessage *DeleteItemResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItemResponseMessage,omitempty" json:"DeleteItemResponseMessage,omitempty"`

	GetItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetItemResponseMessage,omitempty" json:"GetItemResponseMessage,omitempty"`

	UpdateItemResponseMessage *UpdateItemResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemResponseMessage,omitempty" json:"UpdateItemResponseMessage,omitempty"`

	UpdateItemInRecoverableItemsResponseMessage *UpdateItemInRecoverableItemsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItemsResponseMessage,omitempty" json:"UpdateItemInRecoverableItemsResponseMessage,omitempty"`

	SendItemResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendItemResponseMessage,omitempty" json:"SendItemResponseMessage,omitempty"`

	DeleteFolderResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFolderResponseMessage,omitempty" json:"DeleteFolderResponseMessage,omitempty"`

	EmptyFolderResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptyFolderResponseMessage,omitempty" json:"EmptyFolderResponseMessage,omitempty"`

	CreateFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderResponseMessage,omitempty" json:"CreateFolderResponseMessage,omitempty"`

	GetFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFolderResponseMessage,omitempty" json:"GetFolderResponseMessage,omitempty"`

	FindFolderResponseMessage *FindFolderResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolderResponseMessage,omitempty" json:"FindFolderResponseMessage,omitempty"`

	UpdateFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateFolderResponseMessage,omitempty" json:"UpdateFolderResponseMessage,omitempty"`

	MoveFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveFolderResponseMessage,omitempty" json:"MoveFolderResponseMessage,omitempty"`

	CopyFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyFolderResponseMessage,omitempty" json:"CopyFolderResponseMessage,omitempty"`

	CreateFolderPathResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderPathResponseMessage,omitempty" json:"CreateFolderPathResponseMessage,omitempty"`

	CreateAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateAttachmentResponseMessage,omitempty" json:"CreateAttachmentResponseMessage,omitempty"`

	DeleteAttachmentResponseMessage *DeleteAttachmentResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachmentResponseMessage,omitempty" json:"DeleteAttachmentResponseMessage,omitempty"`

	GetAttachmentResponseMessage *AttachmentInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAttachmentResponseMessage,omitempty" json:"GetAttachmentResponseMessage,omitempty"`

	UploadItemsResponseMessage *UploadItemsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItemsResponseMessage,omitempty" json:"UploadItemsResponseMessage,omitempty"`

	ExportItemsResponseMessage *ExportItemsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItemsResponseMessage,omitempty" json:"ExportItemsResponseMessage,omitempty"`

	MarkAllItemsAsReadResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAllItemsAsReadResponseMessage,omitempty" json:"MarkAllItemsAsReadResponseMessage,omitempty"`

	GetClientAccessTokenResponseMessage *GetClientAccessTokenResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessTokenResponseMessage,omitempty" json:"GetClientAccessTokenResponseMessage,omitempty"`

	GetAppManifestsResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppManifestsResponseMessage,omitempty" json:"GetAppManifestsResponseMessage,omitempty"`

	SetClientExtensionResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetClientExtensionResponseMessage,omitempty" json:"SetClientExtensionResponseMessage,omitempty"`

	GetOMEConfigurationResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEConfigurationResponseMessage,omitempty" json:"GetOMEConfigurationResponseMessage,omitempty"`

	SetOMEConfigurationResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEConfigurationResponseMessage,omitempty" json:"SetOMEConfigurationResponseMessage,omitempty"`

	FindItemResponseMessage *FindItemResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItemResponseMessage,omitempty" json:"FindItemResponseMessage,omitempty"`

	MoveItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItemResponseMessage,omitempty" json:"MoveItemResponseMessage,omitempty"`

	ArchiveItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveItemResponseMessage,omitempty" json:"ArchiveItemResponseMessage,omitempty"`

	CopyItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyItemResponseMessage,omitempty" json:"CopyItemResponseMessage,omitempty"`

	ResolveNamesResponseMessage *ResolveNamesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNamesResponseMessage,omitempty" json:"ResolveNamesResponseMessage,omitempty"`

	ExpandDLResponseMessage *ExpandDLResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDLResponseMessage,omitempty" json:"ExpandDLResponseMessage,omitempty"`

	GetServerTimeZonesResponseMessage *GetServerTimeZonesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZonesResponseMessage,omitempty" json:"GetServerTimeZonesResponseMessage,omitempty"`

	GetEventsResponseMessage *GetEventsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEventsResponseMessage,omitempty" json:"GetEventsResponseMessage,omitempty"`

	GetStreamingEventsResponseMessage *GetStreamingEventsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEventsResponseMessage,omitempty" json:"GetStreamingEventsResponseMessage,omitempty"`

	SubscribeResponseMessage *SubscribeResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscribeResponseMessage,omitempty" json:"SubscribeResponseMessage,omitempty"`

	UnsubscribeResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnsubscribeResponseMessage,omitempty" json:"UnsubscribeResponseMessage,omitempty"`

	SendNotificationResponseMessage *SendNotificationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotificationResponseMessage,omitempty" json:"SendNotificationResponseMessage,omitempty"`

	SyncFolderHierarchyResponseMessage *SyncFolderHierarchyResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchyResponseMessage,omitempty" json:"SyncFolderHierarchyResponseMessage,omitempty"`

	SyncFolderItemsResponseMessage *SyncFolderItemsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItemsResponseMessage,omitempty" json:"SyncFolderItemsResponseMessage,omitempty"`

	CreateManagedFolderResponseMessage *FolderInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateManagedFolderResponseMessage,omitempty" json:"CreateManagedFolderResponseMessage,omitempty"`

	ConvertIdResponseMessage *ConvertIdResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertIdResponseMessage,omitempty" json:"ConvertIdResponseMessage,omitempty"`

	GetSharingMetadataResponseMessage *GetSharingMetadataResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingMetadataResponseMessage,omitempty" json:"GetSharingMetadataResponseMessage,omitempty"`

	RefreshSharingFolderResponseMessage *RefreshSharingFolderResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RefreshSharingFolderResponseMessage,omitempty" json:"RefreshSharingFolderResponseMessage,omitempty"`

	GetSharingFolderResponseMessage *GetSharingFolderResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingFolderResponseMessage,omitempty" json:"GetSharingFolderResponseMessage,omitempty"`

	CreateUserConfigurationResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateUserConfigurationResponseMessage,omitempty" json:"CreateUserConfigurationResponseMessage,omitempty"`

	DeleteUserConfigurationResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteUserConfigurationResponseMessage,omitempty" json:"DeleteUserConfigurationResponseMessage,omitempty"`

	GetUserConfigurationResponseMessage *GetUserConfigurationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfigurationResponseMessage,omitempty" json:"GetUserConfigurationResponseMessage,omitempty"`

	GetSpecificUserConfigurationResponseMessage *GetSpecificUserConfigurationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfigurationResponseMessage,omitempty" json:"GetSpecificUserConfigurationResponseMessage,omitempty"`

	UpdateUserConfigurationResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateUserConfigurationResponseMessage,omitempty" json:"UpdateUserConfigurationResponseMessage,omitempty"`

	GetRoomListsResponse *GetRoomListsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomListsResponse,omitempty" json:"GetRoomListsResponse,omitempty"`

	GetRoomsResponse *GetRoomsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomsResponse,omitempty" json:"GetRoomsResponse,omitempty"`

	GetRemindersResponse *GetRemindersResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRemindersResponse,omitempty" json:"GetRemindersResponse,omitempty"`

	PerformReminderActionResponse *PerformReminderActionResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PerformReminderActionResponse,omitempty" json:"PerformReminderActionResponse,omitempty"`

	ApplyConversationActionResponseMessage *ApplyConversationActionResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationActionResponseMessage,omitempty" json:"ApplyConversationActionResponseMessage,omitempty"`

	FindMailboxStatisticsByKeywordsResponseMessage *FindMailboxStatisticsByKeywordsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywordsResponseMessage,omitempty" json:"FindMailboxStatisticsByKeywordsResponseMessage,omitempty"`

	GetSearchableMailboxesResponseMessage *GetSearchableMailboxesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSearchableMailboxesResponseMessage,omitempty" json:"GetSearchableMailboxesResponseMessage,omitempty"`

	SearchMailboxesResponseMessage *SearchMailboxesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResponseMessage,omitempty" json:"SearchMailboxesResponseMessage,omitempty"`

	GetDiscoverySearchConfigurationResponseMessage *GetDiscoverySearchConfigurationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDiscoverySearchConfigurationResponseMessage,omitempty" json:"GetDiscoverySearchConfigurationResponseMessage,omitempty"`

	GetHoldOnMailboxesResponseMessage *GetHoldOnMailboxesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetHoldOnMailboxesResponseMessage,omitempty" json:"GetHoldOnMailboxesResponseMessage,omitempty"`

	SetHoldOnMailboxesResponseMessage *SetHoldOnMailboxesResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetHoldOnMailboxesResponseMessage,omitempty" json:"SetHoldOnMailboxesResponseMessage,omitempty"`

	GetNonIndexableItemStatisticsResponseMessage *GetNonIndexableItemStatisticsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemStatisticsResponseMessage,omitempty" json:"GetNonIndexableItemStatisticsResponseMessage,omitempty"`

	GetNonIndexableItemDetailsResponseMessage *GetNonIndexableItemDetailsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemDetailsResponseMessage,omitempty" json:"GetNonIndexableItemDetailsResponseMessage,omitempty"`

	FindPeopleResponseMessage *FindPeopleResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindPeopleResponseMessage,omitempty" json:"FindPeopleResponseMessage,omitempty"`

	FindTagsResponseMessage *FindTagsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindTagsResponseMessage,omitempty" json:"FindTagsResponseMessage,omitempty"`

	AddTagResponseMessage *AddTagResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddTagResponseMessage,omitempty" json:"AddTagResponseMessage,omitempty"`

	HideTagResponseMessage *HideTagResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HideTagResponseMessage,omitempty" json:"HideTagResponseMessage,omitempty"`

	GetPasswordExpirationDateResponse *GetPasswordExpirationDateResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPasswordExpirationDateResponse,omitempty" json:"GetPasswordExpirationDateResponse,omitempty"`

	GetPersonaResponseMessage *GetPersonaResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPersonaResponseMessage,omitempty" json:"GetPersonaResponseMessage,omitempty"`

	GetConversationItemsResponseMessage *GetConversationItemsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItemsResponseMessage,omitempty" json:"GetConversationItemsResponseMessage,omitempty"`

	GetUserRetentionPolicyTagsResponseMessage *GetUserRetentionPolicyTagsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserRetentionPolicyTagsResponseMessage,omitempty" json:"GetUserRetentionPolicyTagsResponseMessage,omitempty"`

	GetUserPhotoResponseMessage *GetUserPhotoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserPhotoResponseMessage,omitempty" json:"GetUserPhotoResponseMessage,omitempty"`

	MarkAsJunkResponseMessage *MarkAsJunkResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunkResponseMessage,omitempty" json:"MarkAsJunkResponseMessage,omitempty"`

	ReportMessageResponseMessage *ReportMessageResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessageResponseMessage,omitempty" json:"ReportMessageResponseMessage,omitempty"`

	PostModernGroupItemResponseMessage *ItemInfoResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PostModernGroupItemResponseMessage,omitempty" json:"PostModernGroupItemResponseMessage,omitempty"`

	GetLastPrivateCatalogUpdateResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetLastPrivateCatalogUpdateResponseMessage,omitempty" json:"GetLastPrivateCatalogUpdateResponseMessage,omitempty"`

	GetPrivateCatalogAddInsResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPrivateCatalogAddInsResponseMessage,omitempty" json:"GetPrivateCatalogAddInsResponseMessage,omitempty"`
}

type BaseResponseMessageType struct {
	ResponseMessages *ArrayOfResponseMessagesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseRequestType struct {
}

type GetFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderShape,omitempty" json:"FolderShape,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type UploadItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItems"`

	*BaseRequestType

	Items *NonEmptyArrayOfUploadItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Items,omitempty" json:"Items,omitempty"`
}

type UploadItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`
}

type UploadItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UploadItemsResponse"`

	*BaseResponseMessageType
}

type ExportItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItems"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type ExportItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItemsResponseMessage"`

	*ResponseMessageType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`

	Data []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Data,omitempty" json:"Data,omitempty"`
}

type ExportItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExportItemsResponse"`

	*BaseResponseMessageType
}

type CreateFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolder"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	Folders *NonEmptyArrayOfFoldersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolder"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderShape,omitempty" json:"FolderShape,omitempty"`

	Restriction *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Restriction,omitempty" json:"Restriction,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	IndexedPageFolderView *IndexedPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedPageFolderView,omitempty" json:"IndexedPageFolderView,omitempty"`

	FractionalPageFolderView *FractionalPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FractionalPageFolderView,omitempty" json:"FractionalPageFolderView,omitempty"`

	Traversal *FolderQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FolderInfoResponseMessageType struct {
	*ResponseMessageType

	Folders *ArrayOfFoldersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Folders,omitempty" json:"Folders,omitempty"`
}

type FindFolderResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolderResponseMessage"`

	*ResponseMessageType

	RootFolder *FindFolderParentType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RootFolder,omitempty" json:"RootFolder,omitempty"`
}

type FindFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindFolderResponse"`

	*BaseResponseMessageType
}

type DeleteFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`
}

type DeleteFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFolderResponse"`

	*BaseResponseMessageType
}

type EmptyFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptyFolder"`

	*BaseRequestType

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderIds,omitempty" json:"FolderIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	DeleteSubFolders bool `xml:"DeleteSubFolders,attr,omitempty" json:"DeleteSubFolders,omitempty"`
}

type EmptyFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptyFolderResponse"`

	*BaseResponseMessageType
}

type BaseMoveCopyFolderType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MoveFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveFolder"`

	*BaseMoveCopyFolderType
}

type CopyFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyFolder"`

	*BaseMoveCopyFolderType
}

type UpdateFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateFolder"`

	*BaseRequestType

	FolderChanges *NonEmptyArrayOfFolderChangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderChanges,omitempty" json:"FolderChanges,omitempty"`
}

type CreateFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderResponse"`

	*BaseResponseMessageType
}

type GetFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFolderResponse"`

	*BaseResponseMessageType
}

type UpdateFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateFolderResponse"`

	*BaseResponseMessageType
}

type MoveFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveFolderResponse"`

	*BaseResponseMessageType
}

type CopyFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyFolderResponse"`

	*BaseResponseMessageType
}

type CreateFolderPathType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderPath"`

	*BaseRequestType

	ParentFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	RelativeFolderPath *NonEmptyArrayOfFoldersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RelativeFolderPath,omitempty" json:"RelativeFolderPath,omitempty"`
}

type CreateFolderPathResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateFolderPathResponse"`

	*BaseResponseMessageType
}

type GetItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemShape,omitempty" json:"ItemShape,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type CreateItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	Items *NonEmptyArrayOfAllItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Items,omitempty" json:"Items,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitations *CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingInvitations,attr,omitempty" json:"SendMeetingInvitations,omitempty"`
}

type UpdateItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItem"`

	*BaseRequestType

	SavedItemFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	ItemChanges *NonEmptyArrayOfItemChangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemChanges,omitempty" json:"ItemChanges,omitempty"`

	ConflictResolution *ConflictResolutionType `xml:"ConflictResolution,attr,omitempty" json:"ConflictResolution,omitempty"`

	MessageDisposition *MessageDispositionType `xml:"MessageDisposition,attr,omitempty" json:"MessageDisposition,omitempty"`

	SendMeetingInvitationsOrCancellations *CalendarItemUpdateOperationType `xml:"SendMeetingInvitationsOrCancellations,attr,omitempty" json:"SendMeetingInvitationsOrCancellations,omitempty"`

	SuppressReadReceipts bool `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type ItemInfoResponseMessageType struct {
	*ResponseMessageType

	Items *ArrayOfRealItemsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Items,omitempty" json:"Items,omitempty"`
}

type UpdateItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemResponseMessage"`

	*ItemInfoResponseMessageType

	ConflictResults *ConflictResultsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type UpdateItemInRecoverableItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItems"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`

	Updates *NonEmptyArrayOfItemChangeDescriptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Updates,omitempty" json:"Updates,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Attachments,omitempty" json:"Attachments,omitempty"`

	MakeItemImmutable bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MakeItemImmutable,omitempty" json:"MakeItemImmutable,omitempty"`
}

type UpdateItemInRecoverableItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItemsResponseMessage"`

	*ItemInfoResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Attachments,omitempty" json:"Attachments,omitempty"`

	ConflictResults *ConflictResultsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConflictResults,omitempty" json:"ConflictResults,omitempty"`
}

type DeleteItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`

	DeleteType *DisposalType `xml:"DeleteType,attr,omitempty" json:"DeleteType,omitempty"`

	SendMeetingCancellations *CalendarItemCreateOrDeleteOperationType `xml:"SendMeetingCancellations,attr,omitempty" json:"SendMeetingCancellations,omitempty"`

	AffectedTaskOccurrences *AffectedTaskOccurrencesType `xml:"AffectedTaskOccurrences,attr,omitempty" json:"AffectedTaskOccurrences,omitempty"`

	SuppressReadReceipts bool `xml:"SuppressReadReceipts,attr,omitempty" json:"SuppressReadReceipts,omitempty"`
}

type AttachmentInfoResponseMessageType struct {
	*ResponseMessageType

	Attachments *ArrayOfAttachmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Attachments,omitempty" json:"Attachments,omitempty"`
}

type DeleteAttachmentResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachmentResponseMessage"`

	*ResponseMessageType

	RootItemId *RootItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RootItemId,omitempty" json:"RootItemId,omitempty"`
}

type BaseMoveCopyItemType struct {
	*BaseRequestType

	ToFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ToFolderId,omitempty" json:"ToFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`

	ReturnNewItemIds bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnNewItemIds,omitempty" json:"ReturnNewItemIds,omitempty"`
}

type MoveItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItem"`

	*BaseMoveCopyItemType
}

type CopyItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyItem"`

	*BaseMoveCopyItemType
}

type ArchiveItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveItem"`

	*BaseRequestType

	ArchiveSourceFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveSourceFolderId,omitempty" json:"ArchiveSourceFolderId,omitempty"`

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`
}

type SendItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendItem"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`

	SavedItemFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SavedItemFolderId,omitempty" json:"SavedItemFolderId,omitempty"`

	SaveItemToFolder bool `xml:"SaveItemToFolder,attr,omitempty" json:"SaveItemToFolder,omitempty"`
}

type SendItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendItemResponse"`

	*BaseResponseMessageType
}

type QueryStringType struct {
	Value string `xml:",chardata" json:"-,"`

	ResetCache bool `xml:"ResetCache,attr,omitempty" json:"ResetCache,omitempty"`

	ReturnHighlightTerms bool `xml:"ReturnHighlightTerms,attr,omitempty" json:"ReturnHighlightTerms,omitempty"`

	ReturnDeletedItems bool `xml:"ReturnDeletedItems,attr,omitempty" json:"ReturnDeletedItems,omitempty"`
}

type FindItemType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItem"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemShape,omitempty" json:"ItemShape,omitempty"`

	Restriction *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Restriction,omitempty" json:"Restriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	QueryString *QueryStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryString,omitempty" json:"QueryString,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	FractionalPageItemView *FractionalPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FractionalPageItemView,omitempty" json:"FractionalPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	CalendarView *CalendarViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CalendarView,omitempty" json:"CalendarView,omitempty"`

	ContactsView *ContactsViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactsView,omitempty" json:"ContactsView,omitempty"`

	GroupBy *GroupByType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupBy,omitempty" json:"GroupBy,omitempty"`

	DistinguishedGroupBy *DistinguishedGroupByType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DistinguishedGroupBy,omitempty" json:"DistinguishedGroupBy,omitempty"`

	Traversal *ItemQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`
}

type FindConversationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindConversation"`

	*BaseRequestType

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	QueryString *QueryStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryString,omitempty" json:"QueryString,omitempty"`

	ConversationShape *ConversationResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConversationShape,omitempty" json:"ConversationShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SeekToConditionPageItemView *SeekToConditionPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SeekToConditionPageItemView,omitempty" json:"SeekToConditionPageItemView,omitempty"`

	Traversal *ConversationQueryTraversalType `xml:"Traversal,attr,omitempty" json:"Traversal,omitempty"`

	ViewFilter *ViewFilterType `xml:"ViewFilter,attr,omitempty" json:"ViewFilter,omitempty"`
}

type FindConversationResponseMessageType struct {
	*ResponseMessageType

	Conversations *ArrayOfConversationsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Conversations,omitempty" json:"Conversations,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`

	TotalConversationsInView int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TotalConversationsInView,omitempty" json:"TotalConversationsInView,omitempty"`

	IndexedOffset int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedOffset,omitempty" json:"IndexedOffset,omitempty"`
}

type PerformInstantSearchRequest struct {
	*BaseRequestType

	SearchSessionId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	ItemType *InstantSearchItemType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemType,omitempty" json:"ItemType,omitempty"`

	QueryOptions *QueryOptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryOptions,omitempty" json:"QueryOptions,omitempty"`

	SearchRequestId int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchRequestId,omitempty" json:"SearchRequestId,omitempty"`

	KqlQuery string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages KqlQuery,omitempty" json:"KqlQuery,omitempty"`

	FolderScope *ArrayOfFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderScope,omitempty" json:"FolderScope,omitempty"`

	DistinguishedFolderScope *ArrayOfDistinguishedFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DistinguishedFolderScope,omitempty" json:"DistinguishedFolderScope,omitempty"`

	IsDeepTraversal bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IsDeepTraversal,omitempty" json:"IsDeepTraversal,omitempty"`

	WaitOnSearchResults bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages WaitOnSearchResults,omitempty" json:"WaitOnSearchResults,omitempty"`
}

type PerformInstantSearchResponse struct {
	*ResponseMessageType

	Payload *InstantSearchPayloadType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Payload,omitempty" json:"Payload,omitempty"`
}

type EndInstantSearchSessionRequest struct {
	*BaseRequestType

	SessionId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SessionId,omitempty" json:"SessionId,omitempty"`
}

type ApplyConversationActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationAction"`

	*BaseRequestType

	ConversationActions *NonEmptyArrayOfApplyConversationActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConversationActions,omitempty" json:"ConversationActions,omitempty"`
}

type ApplyConversationActionResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationActionResponse"`

	*BaseResponseMessageType
}

type ApplyConversationActionResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplyConversationActionResponseMessage"`

	*ResponseMessageType
}

type FindPeopleType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindPeople"`

	*BaseRequestType

	PersonaShape *PersonaResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PersonaShape,omitempty" json:"PersonaShape,omitempty"`

	IndexedPageItemView *IndexedPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	Restriction *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Restriction,omitempty" json:"Restriction,omitempty"`

	AggregationRestriction *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AggregationRestriction,omitempty" json:"AggregationRestriction,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	QueryString string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryString,omitempty" json:"QueryString,omitempty"`

	SearchPeopleSuggestionIndex bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchPeopleSuggestionIndex,omitempty" json:"SearchPeopleSuggestionIndex,omitempty"`

	TopicQueryString string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TopicQueryString,omitempty" json:"TopicQueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Context,omitempty" json:"Context,omitempty"`

	QuerySources *ArrayOfPeopleQuerySource `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QuerySources,omitempty" json:"QuerySources,omitempty"`
}

type FindPeopleResponseMessageType struct {
	*ResponseMessageType

	People *ArrayOfPeopleType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages People,omitempty" json:"People,omitempty"`

	TotalNumberOfPeopleInView int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TotalNumberOfPeopleInView,omitempty" json:"TotalNumberOfPeopleInView,omitempty"`

	FirstMatchingRowIndex int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FirstMatchingRowIndex,omitempty" json:"FirstMatchingRowIndex,omitempty"`

	FirstLoadedRowIndex int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FirstLoadedRowIndex,omitempty" json:"FirstLoadedRowIndex,omitempty"`

	TransactionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TransactionId,omitempty" json:"TransactionId,omitempty"`
}

type FindTagsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindTags"`

	*BaseRequestType

	IndexedPageItemView *IndexedPageViewType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IndexedPageItemView,omitempty" json:"IndexedPageItemView,omitempty"`

	SortOrder *NonEmptyArrayOfFieldOrdersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	QueryString string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages QueryString,omitempty" json:"QueryString,omitempty"`

	Context *ArrayOfContextProperty `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Context,omitempty" json:"Context,omitempty"`
}

type FindTagsResponseMessageType struct {
	*ResponseMessageType

	Tags *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Tags,omitempty" json:"Tags,omitempty"`
}

type AddTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddTag"`

	*BaseRequestType

	Tag string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Tag,omitempty" json:"Tag,omitempty"`

	AppName string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AppName,omitempty" json:"AppName,omitempty"`
}

type AddTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type HideTagType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HideTag"`

	*BaseRequestType

	Tag string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Tag,omitempty" json:"Tag,omitempty"`
}

type HideTagResponseMessageType struct {
	*ResponseMessageType

	WasSuccessful bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages WasSuccessful,omitempty" json:"WasSuccessful,omitempty"`
}

type GetPersonaType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPersona"`

	*BaseRequestType

	PersonaId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PersonaId,omitempty" json:"PersonaId,omitempty"`

	EmailAddress *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	ParentFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderId,omitempty" json:"ParentFolderId,omitempty"`

	ItemLinkId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemLinkId,omitempty" json:"ItemLinkId,omitempty"`

	AdditionalProperties *NonEmptyArrayOfPathsToElementType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AdditionalProperties,omitempty" json:"AdditionalProperties,omitempty"`
}

type GetPersonaResponseMessageType struct {
	*ResponseMessageType

	Persona *PersonaType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Persona,omitempty" json:"Persona,omitempty"`
}

type CreateAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateAttachment"`

	*BaseRequestType

	ParentItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentItemId,omitempty" json:"ParentItemId,omitempty"`

	Attachments *NonEmptyArrayOfAttachmentsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Attachments,omitempty" json:"Attachments,omitempty"`
}

type CreateAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateAttachmentResponse"`

	*BaseResponseMessageType
}

type DeleteAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachment"`

	*BaseRequestType

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type DeleteAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteAttachmentResponse"`

	*BaseResponseMessageType
}

type GetAttachmentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAttachment"`

	*BaseRequestType

	AttachmentShape *AttachmentResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AttachmentShape,omitempty" json:"AttachmentShape,omitempty"`

	AttachmentIds *NonEmptyArrayOfRequestAttachmentIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AttachmentIds,omitempty" json:"AttachmentIds,omitempty"`
}

type GetAttachmentResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAttachmentResponse"`

	*BaseResponseMessageType
}

type CreateItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemResponse"`

	*BaseResponseMessageType
}

type UpdateItemInRecoverableItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateItemInRecoverableItemsResponse"`

	*BaseResponseMessageType
}

type GetItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetItemResponse"`

	*BaseResponseMessageType
}

type MoveItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MoveItemResponse"`

	*BaseResponseMessageType
}

type CopyItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CopyItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItemResponse"`

	*BaseResponseMessageType
}

type DeleteItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteItemResponseMessage"`

	*ResponseMessageType
}

type FindItemResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItemResponseMessage"`

	*ResponseMessageType

	RootFolder *FindItemParentType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RootFolder,omitempty" json:"RootFolder,omitempty"`

	HighlightTerms *ArrayOfHighlightTermsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HighlightTerms,omitempty" json:"HighlightTerms,omitempty"`
}

type FindItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindItemResponse"`

	*BaseResponseMessageType
}

type ArchiveItemResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ArchiveItemResponse"`

	*BaseResponseMessageType
}

type GetClientAccessTokenType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessToken"`

	*BaseRequestType

	TokenRequests *NonEmptyArrayOfClientAccessTokenRequestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TokenRequests,omitempty" json:"TokenRequests,omitempty"`
}

type GetClientAccessTokenResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessTokenResponseMessage"`

	*ResponseMessageType

	Token *ClientAccessTokenType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Token,omitempty" json:"Token,omitempty"`
}

type GetClientAccessTokenResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetClientAccessTokenResponse"`

	*BaseResponseMessageType
}

type GetFocusedOtherOverridesRequestType struct {
	*BaseRequestType
}

type GetFocusedOtherOverridesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetFocusedOtherOverridesResponse"`

	*BaseResponseMessageType

	Overrides *ArrayOfInferenceClassificationOverridesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Overrides,omitempty" json:"Overrides,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideRequestType struct {
	*BaseRequestType

	SenderSmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	SenderDisplayName string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SenderDisplayName,omitempty" json:"SenderDisplayName,omitempty"`

	AlwaysClassifyAs *InferenceClassificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AlwaysClassifyAs,omitempty" json:"AlwaysClassifyAs,omitempty"`
}

type CreateOrUpdateFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateOrUpdateFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Override,omitempty" json:"Override,omitempty"`
}

type DeleteFocusedOtherOverrideRequestType struct {
	*BaseRequestType

	Id *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Id,omitempty" json:"Id,omitempty"`
}

type DeleteFocusedOtherOverrideResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteFocusedOtherOverrideResponse"`

	*BaseResponseMessageType

	Override *InferenceClassificationOverrideType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Override,omitempty" json:"Override,omitempty"`
}

type ResolveNamesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNames"`

	*BaseRequestType

	ParentFolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParentFolderIds,omitempty" json:"ParentFolderIds,omitempty"`

	UnresolvedEntry *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnresolvedEntry,omitempty" json:"UnresolvedEntry,omitempty"`

	ReturnFullContactData bool `xml:"ReturnFullContactData,attr,omitempty" json:"ReturnFullContactData,omitempty"`

	SearchScope *ResolveNamesSearchScopeType `xml:"SearchScope,attr,omitempty" json:"SearchScope,omitempty"`

	ContactDataShape *DefaultShapeNamesType `xml:"ContactDataShape,attr,omitempty" json:"ContactDataShape,omitempty"`
}

type ResolveNamesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNamesResponseMessage"`

	*ResponseMessageType

	ResolutionSet *ArrayOfResolutionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolutionSet,omitempty" json:"ResolutionSet,omitempty"`
}

type ResolveNamesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResolveNamesResponse"`

	*BaseResponseMessageType
}

type GetPasswordExpirationDateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPasswordExpirationDate"`

	*BaseRequestType

	MailboxSmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetPasswordExpirationDateResponseMessageType struct {
	*ResponseMessageType

	PasswordExpirationDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PasswordExpirationDate,omitempty" json:"PasswordExpirationDate,omitempty"`
}

type GetMailTipsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMailTips"`

	*BaseRequestType

	SendingAs *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendingAs,omitempty" json:"SendingAs,omitempty"`

	Recipients *ArrayOfRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Recipients,omitempty" json:"Recipients,omitempty"`

	MailTipsRequested *MailTipTypes `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailTipsRequested,omitempty" json:"MailTipsRequested,omitempty"`
}

type GetMailTipsResponseMessageType struct {
	*ResponseMessageType

	ResponseMessages *ArrayOfMailTipsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfMailTipsResponseMessageType struct {
	MailTipsResponseMessageType []*MailTipsResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailTipsResponseMessageType,omitempty" json:"MailTipsResponseMessageType,omitempty"`
}

type MailTipsResponseMessageType struct {
	*ResponseMessageType

	MailTips *MailTips `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailTips,omitempty" json:"MailTips,omitempty"`
}

type PlayOnPhoneType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PlayOnPhone"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`

	DialString string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DialString,omitempty" json:"DialString,omitempty"`
}

type PlayOnPhoneResponseMessageType struct {
	*ResponseMessageType

	PhoneCallId *PhoneCallIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPhoneCallInformation"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type GetPhoneCallInformationResponseMessageType struct {
	*ResponseMessageType

	PhoneCallInformation *PhoneCallInformationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PhoneCallInformation,omitempty" json:"PhoneCallInformation,omitempty"`
}

type DisconnectPhoneCallType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisconnectPhoneCall"`

	*BaseRequestType

	PhoneCallId *PhoneCallIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PhoneCallId,omitempty" json:"PhoneCallId,omitempty"`
}

type DisconnectPhoneCallResponseMessageType struct {
	*ResponseMessageType
}

type ExpandDLType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDL"`

	*BaseRequestType

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type ExpandDLResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDLResponseMessage"`

	*ResponseMessageType

	DLExpansion *ArrayOfDLExpansionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DLExpansion,omitempty" json:"DLExpansion,omitempty"`
}

type ExpandDLResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandDLResponse"`

	*BaseResponseMessageType
}

type GetServerTimeZonesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZones"`

	*BaseRequestType

	Ids *NonEmptyArrayOfTimeZoneIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Ids,omitempty" json:"Ids,omitempty"`

	ReturnFullTimeZoneData bool `xml:"ReturnFullTimeZoneData,attr,omitempty" json:"ReturnFullTimeZoneData,omitempty"`
}

type GetServerTimeZonesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZonesResponseMessage"`

	*ResponseMessageType

	TimeZoneDefinitions *ArrayOfTimeZoneDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TimeZoneDefinitions,omitempty" json:"TimeZoneDefinitions,omitempty"`
}

type GetServerTimeZonesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServerTimeZonesResponse"`

	*BaseResponseMessageType
}

type CreateManagedFolderRequestType struct {
	*BaseRequestType

	FolderNames *NonEmptyArrayOfFolderNamesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderNames,omitempty" json:"FolderNames,omitempty"`

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type CreateManagedFolderResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateManagedFolderResponse"`

	*BaseResponseMessageType
}

type SubscribeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Subscribe"`

	*BaseRequestType

	PullSubscriptionRequest *PullSubscriptionRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PullSubscriptionRequest,omitempty" json:"PullSubscriptionRequest,omitempty"`

	PushSubscriptionRequest *PushSubscriptionRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PushSubscriptionRequest,omitempty" json:"PushSubscriptionRequest,omitempty"`

	StreamingSubscriptionRequest *StreamingSubscriptionRequestType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages StreamingSubscriptionRequest,omitempty" json:"StreamingSubscriptionRequest,omitempty"`
}

type SubscribeResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscribeResponseMessage"`

	*ResponseMessageType

	SubscriptionId *SubscriptionIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Watermark,omitempty" json:"Watermark,omitempty"`
}

type SubscribeResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscribeResponse"`

	*BaseResponseMessageType
}

type UnsubscribeType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Unsubscribe"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`
}

type UnsubscribeResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnsubscribeResponse"`

	*BaseResponseMessageType
}

type GetEventsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEvents"`

	*BaseRequestType

	SubscriptionId *SubscriptionIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscriptionId,omitempty" json:"SubscriptionId,omitempty"`

	Watermark *WatermarkType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Watermark,omitempty" json:"Watermark,omitempty"`
}

type GetEventsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEventsResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Notification,omitempty" json:"Notification,omitempty"`
}

type GetEventsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetEventsResponse"`

	*BaseResponseMessageType
}

type GetStreamingEventsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEvents"`

	*BaseRequestType

	SubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscriptionIds,omitempty" json:"SubscriptionIds,omitempty"`

	ConnectionTimeout *StreamingSubscriptionConnectionTimeoutType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConnectionTimeout,omitempty" json:"ConnectionTimeout,omitempty"`
}

type GetStreamingEventsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEventsResponseMessage"`

	*ResponseMessageType

	Notifications *NonEmptyArrayOfNotificationsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Notifications,omitempty" json:"Notifications,omitempty"`

	ErrorSubscriptionIds *NonEmptyArrayOfSubscriptionIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ErrorSubscriptionIds,omitempty" json:"ErrorSubscriptionIds,omitempty"`

	ConnectionStatus *ConnectionStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConnectionStatus,omitempty" json:"ConnectionStatus,omitempty"`
}

type GetStreamingEventsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetStreamingEventsResponse"`

	*BaseResponseMessageType
}

type SendNotificationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotificationResponseMessage"`

	*ResponseMessageType

	Notification *NotificationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Notification,omitempty" json:"Notification,omitempty"`
}

type SendNotificationResponseType struct {
	*BaseResponseMessageType
}

type SendNotificationResultType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendNotificationResult"`

	SubscriptionStatus *SubscriptionStatusType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SubscriptionStatus,omitempty" json:"SubscriptionStatus,omitempty"`
}

type SyncFolderHierarchyType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchy"`

	*BaseRequestType

	FolderShape *FolderResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderShape,omitempty" json:"FolderShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncState,omitempty" json:"SyncState,omitempty"`
}

type SyncFolderHierarchyResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchyResponseMessage"`

	*ResponseMessageType

	SyncState string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastFolderInRange bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludesLastFolderInRange,omitempty" json:"IncludesLastFolderInRange,omitempty"`

	Changes *SyncFolderHierarchyChangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderHierarchyResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderHierarchyResponse"`

	*BaseResponseMessageType
}

type SyncFolderItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemShape,omitempty" json:"ItemShape,omitempty"`

	SyncFolderId *TargetFolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderId,omitempty" json:"SyncFolderId,omitempty"`

	SyncState string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncState,omitempty" json:"SyncState,omitempty"`

	Ignore *ArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Ignore,omitempty" json:"Ignore,omitempty"`

	MaxChangesReturned *MaxSyncChangesReturnedType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxChangesReturned,omitempty" json:"MaxChangesReturned,omitempty"`

	SyncScope *SyncFolderItemsScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncScope,omitempty" json:"SyncScope,omitempty"`
}

type SyncFolderItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItemsResponseMessage"`

	*ResponseMessageType

	SyncState string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncState,omitempty" json:"SyncState,omitempty"`

	IncludesLastItemInRange bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludesLastItemInRange,omitempty" json:"IncludesLastItemInRange,omitempty"`

	Changes *SyncFolderItemsChangesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Changes,omitempty" json:"Changes,omitempty"`
}

type SyncFolderItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SyncFolderItemsResponse"`

	*BaseResponseMessageType
}

type GetUserAvailabilityRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserAvailabilityRequest"`

	*BaseRequestType

	TimeZone *TimeZone `xml:"TimeZone,omitempty" json:"TimeZone,omitempty"`

	MailboxDataArray *ArrayOfMailboxData `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxDataArray,omitempty" json:"MailboxDataArray,omitempty"`

	FreeBusyViewOptions *FreeBusyViewOptions `xml:"FreeBusyViewOptions,omitempty" json:"FreeBusyViewOptions,omitempty"`

	SuggestionsViewOptions *SuggestionsViewOptions `xml:"SuggestionsViewOptions,omitempty" json:"SuggestionsViewOptions,omitempty"`
}

type FreeBusyResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyResponse"`

	ResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	FreeBusyView *FreeBusyView `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyView,omitempty" json:"FreeBusyView,omitempty"`
}

type ArrayOfFreeBusyResponse struct {
	FreeBusyResponse []*FreeBusyResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyResponse,omitempty" json:"FreeBusyResponse,omitempty"`
}

type SuggestionsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionsResponse"`

	ResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	SuggestionDayResultArray *ArrayOfSuggestionDayResult `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionDayResultArray,omitempty" json:"SuggestionDayResultArray,omitempty"`
}

type GetUserAvailabilityResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserAvailabilityResponse"`

	FreeBusyResponseArray *ArrayOfFreeBusyResponse `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FreeBusyResponseArray,omitempty" json:"FreeBusyResponseArray,omitempty"`

	SuggestionsResponse *SuggestionsResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionsResponse,omitempty" json:"SuggestionsResponse,omitempty"`
}

type GetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type GetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`

	OofSettings *OofSettings `xml:"OofSettings,omitempty" json:"OofSettings,omitempty"`

	AllowExternalOof *ExternalAudience `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AllowExternalOof,omitempty" json:"AllowExternalOof,omitempty"`
}

type SetUserOofSettingsRequest struct {
	*BaseRequestType

	Mailbox *Mailbox `xml:"Mailbox,omitempty" json:"Mailbox,omitempty"`

	UserOofSettings *UserOofSettings `xml:"UserOofSettings,omitempty" json:"UserOofSettings,omitempty"`
}

type SetUserOofSettingsResponse struct {
	ResponseMessage *ResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessage,omitempty" json:"ResponseMessage,omitempty"`
}

type ConvertIdType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertId"`

	*BaseRequestType

	SourceIds *NonEmptyArrayOfAlternateIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SourceIds,omitempty" json:"SourceIds,omitempty"`

	DestinationFormat *IdFormatType `xml:"DestinationFormat,attr,omitempty" json:"DestinationFormat,omitempty"`
}

type ConvertIdResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertIdResponse"`

	*BaseResponseMessageType
}

type ConvertIdResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConvertIdResponseMessage"`

	*ResponseMessageType

	AlternateId *AlternateIdBaseType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AlternateId,omitempty" json:"AlternateId,omitempty"`
}

type GetDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserIds,omitempty" json:"UserIds,omitempty"`

	IncludePermissions bool `xml:"IncludePermissions,attr,omitempty" json:"IncludePermissions,omitempty"`
}

type GetDelegateResponseMessageType struct {
	*BaseDelegateResponseMessageType

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type ArrayOfDelegateUserResponseMessageType struct {
	DelegateUserResponseMessageType []*DelegateUserResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DelegateUserResponseMessageType,omitempty" json:"DelegateUserResponseMessageType,omitempty"`
}

type DelegateUserResponseMessageType struct {
	*ResponseMessageType

	DelegateUser *DelegateUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DelegateUser,omitempty" json:"DelegateUser,omitempty"`
}

type AddDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type BaseDelegateResponseMessageType struct {
	*ResponseMessageType

	ResponseMessages *ArrayOfDelegateUserResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type BaseDelegateType struct {
	*BaseRequestType

	Mailbox *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailbox,omitempty" json:"Mailbox,omitempty"`
}

type AddDelegateResponseMessageType struct {
	*BaseDelegateResponseMessageType
}

type RemoveDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDelegate"`

	*BaseDelegateType

	UserIds *ArrayOfUserIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserIds,omitempty" json:"UserIds,omitempty"`
}

type RemoveDelegateResponseMessageType struct {
	*BaseDelegateResponseMessageType
}

type UpdateDelegateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateDelegate"`

	*BaseDelegateType

	DelegateUsers *ArrayOfDelegateUserType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DelegateUsers,omitempty" json:"DelegateUsers,omitempty"`

	DeliverMeetingRequests *DeliverMeetingRequestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeliverMeetingRequests,omitempty" json:"DeliverMeetingRequests,omitempty"`
}

type UpdateDelegateResponseMessageType struct {
	*BaseDelegateResponseMessageType
}

type GetSharingMetadataType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingMetadata"`

	*BaseRequestType

	IdOfFolderToShare *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IdOfFolderToShare,omitempty" json:"IdOfFolderToShare,omitempty"`

	SenderSmtpAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SenderSmtpAddress,omitempty" json:"SenderSmtpAddress,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Recipients,omitempty" json:"Recipients,omitempty"`
}

type GetSharingMetadataResponseMessageType struct {
	*ResponseMessageType

	EncryptedSharedFolderDataCollection *ArrayOfEncryptedSharedFolderDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EncryptedSharedFolderDataCollection,omitempty" json:"EncryptedSharedFolderDataCollection,omitempty"`

	InvalidRecipients *ArrayOfInvalidRecipientsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InvalidRecipients,omitempty" json:"InvalidRecipients,omitempty"`
}

type RefreshSharingFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RefreshSharingFolder"`

	*BaseRequestType

	SharingFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type RefreshSharingFolderResponseMessageType struct {
	*ResponseMessageType
}

type GetSharingFolderType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSharingFolder"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DataType *SharingDataType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DataType,omitempty" json:"DataType,omitempty"`

	SharedFolderId *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SharedFolderId,omitempty" json:"SharedFolderId,omitempty"`
}

type GetSharingFolderResponseMessageType struct {
	*ResponseMessageType

	SharingFolderId *FolderIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SharingFolderId,omitempty" json:"SharingFolderId,omitempty"`
}

type CreateUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type CreateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type DeleteUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`
}

type DeleteUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserConfigurationResponse"`

	*BaseResponseMessageType
}

type GetSpecificUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfiguration"`

	*BaseRequestType

	UserConfigurationName *UserConfigurationNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfigurationName,omitempty" json:"UserConfigurationName,omitempty"`

	UserConfigurationProperties *UserConfigurationPropertyType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfigurationProperties,omitempty" json:"UserConfigurationProperties,omitempty"`
}

type GetSpecificUserConfigurationResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfigurationResponseMessage"`

	*ResponseMessageType

	UserConfiguration *UserConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type GetSpecificUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSpecificUserConfigurationResponse"`

	*BaseResponseMessageType
}

type UpdateUserConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateUserConfiguration"`

	*BaseRequestType

	UserConfiguration *UserConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UserConfiguration,omitempty" json:"UserConfiguration,omitempty"`
}

type UpdateUserConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateUserConfigurationResponse"`

	*BaseResponseMessageType
}

type SetTeamMailboxRequestType struct {
	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmailAddress,omitempty" json:"EmailAddress,omitempty"`

	SharePointSiteUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SharePointSiteUrl,omitempty" json:"SharePointSiteUrl,omitempty"`

	State *TeamMailboxLifecycleStateType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages State,omitempty" json:"State,omitempty"`
}

type UnpinTeamMailboxRequestType struct {
	*BaseRequestType

	EmailAddress *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmailAddress,omitempty" json:"EmailAddress,omitempty"`
}

type SetTeamMailboxResponseMessageType struct {
	*ResponseMessageType
}

type UnpinTeamMailboxResponseMessageType struct {
	*ResponseMessageType
}

type GetRoomListsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRoomLists"`

	*BaseRequestType
}

type GetRoomListsResponseMessageType struct {
	*ResponseMessageType

	RoomLists *ArrayOfEmailAddressesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RoomLists,omitempty" json:"RoomLists,omitempty"`
}

type GetRoomsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetRooms"`

	*BaseRequestType

	RoomList *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RoomList,omitempty" json:"RoomList,omitempty"`
}

type GetRoomsResponseMessageType struct {
	*ResponseMessageType

	Rooms *ArrayOfRoomsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Rooms,omitempty" json:"Rooms,omitempty"`
}

type GetRemindersType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetReminders"`

	*BaseRequestType

	BeginTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages BeginTime,omitempty" json:"BeginTime,omitempty"`

	EndTime xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EndTime,omitempty" json:"EndTime,omitempty"`

	MaxItems int32 `xml:"MaxItems,omitempty" json:"MaxItems,omitempty"`

	ReminderType string `xml:"ReminderType,omitempty" json:"ReminderType,omitempty"`
}

type GetRemindersResponseMessageType struct {
	*ResponseMessageType

	Reminders *ArrayOfRemindersType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Reminders,omitempty" json:"Reminders,omitempty"`
}

type PerformReminderActionType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PerformReminderAction"`

	*BaseRequestType

	ReminderItemActions *NonEmptyArrayOfReminderItemActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReminderItemActions,omitempty" json:"ReminderItemActions,omitempty"`
}

type PerformReminderActionResponseMessageType struct {
	*ResponseMessageType

	UpdatedItemIds *NonEmptyArrayOfItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdatedItemIds,omitempty" json:"UpdatedItemIds,omitempty"`
}

type ArrayOfServiceConfigurationType struct {
	ConfigurationName *ServiceConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConfigurationName,omitempty" json:"ConfigurationName,omitempty"`
}

type GetServiceConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetServiceConfiguration"`

	*BaseRequestType

	ActingAs *EmailAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ActingAs,omitempty" json:"ActingAs,omitempty"`

	RequestedConfiguration *ArrayOfServiceConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RequestedConfiguration,omitempty" json:"RequestedConfiguration,omitempty"`

	ConfigurationRequestDetails *ConfigurationRequestDetailsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConfigurationRequestDetails,omitempty" json:"ConfigurationRequestDetails,omitempty"`
}

type GetServiceConfigurationResponseMessageType struct {
	*ResponseMessageType

	ResponseMessages *ArrayOfServiceConfigurationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResponseMessages,omitempty" json:"ResponseMessages,omitempty"`
}

type ArrayOfServiceConfigurationResponseMessageType struct {
	ServiceConfigurationResponseMessageType []*ServiceConfigurationResponseMessageType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ServiceConfigurationResponseMessageType,omitempty" json:"ServiceConfigurationResponseMessageType,omitempty"`
}

type ServiceConfigurationResponseMessageType struct {
	*ResponseMessageType

	MailTipsConfiguration *MailTipsServiceConfiguration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailTipsConfiguration,omitempty" json:"MailTipsConfiguration,omitempty"`

	UnifiedMessagingConfiguration *UnifiedMessageServiceConfiguration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UnifiedMessagingConfiguration,omitempty" json:"UnifiedMessagingConfiguration,omitempty"`

	ProtectionRulesConfiguration *ProtectionRulesServiceConfiguration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ProtectionRulesConfiguration,omitempty" json:"ProtectionRulesConfiguration,omitempty"`

	PolicyNudgeRulesConfiguration *PolicyNudgeRulesServiceConfiguration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PolicyNudgeRulesConfiguration,omitempty" json:"PolicyNudgeRulesConfiguration,omitempty"`

	SharePointURLsConfiguration *SharePointURLsServiceConfiguration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SharePointURLsConfiguration,omitempty" json:"SharePointURLsConfiguration,omitempty"`
}

type FindMessageTrackingReportRequestType struct {
	*BaseRequestType
}

type FindMessageTrackingReportResponseMessageType struct {
	*ResponseMessageType

	Diagnostics *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	MessageTrackingSearchResults *ArrayOfFindMessageTrackingSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageTrackingSearchResults,omitempty" json:"MessageTrackingSearchResults,omitempty"`

	ExecutedSearchScope string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExecutedSearchScope,omitempty" json:"ExecutedSearchScope,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Properties,omitempty" json:"Properties,omitempty"`
}

type GetMessageTrackingReportRequestType struct {
	*BaseRequestType
}

type GetMessageTrackingReportResponseMessageType struct {
	*ResponseMessageType

	MessageTrackingReport *MessageTrackingReportType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageTrackingReport,omitempty" json:"MessageTrackingReport,omitempty"`

	Diagnostics *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Diagnostics,omitempty" json:"Diagnostics,omitempty"`

	Errors *ArrayOfArraysOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Errors,omitempty" json:"Errors,omitempty"`

	Properties *ArrayOfTrackingPropertiesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Properties,omitempty" json:"Properties,omitempty"`
}

type GetInboxRulesRequestType struct {
	*BaseRequestType

	MailboxSmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`
}

type GetInboxRulesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetInboxRulesResponse"`

	*ResponseMessageType

	OutlookRuleBlobExists bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages OutlookRuleBlobExists,omitempty" json:"OutlookRuleBlobExists,omitempty"`

	InboxRules *ArrayOfRulesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InboxRules,omitempty" json:"InboxRules,omitempty"`
}

type UpdateInboxRulesRequestType struct {
	*BaseRequestType

	MailboxSmtpAddress string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxSmtpAddress,omitempty" json:"MailboxSmtpAddress,omitempty"`

	RemoveOutlookRuleBlob bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveOutlookRuleBlob,omitempty" json:"RemoveOutlookRuleBlob,omitempty"`

	Operations *ArrayOfRuleOperationsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Operations,omitempty" json:"Operations,omitempty"`
}

type UpdateInboxRulesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateInboxRulesResponse"`

	*ResponseMessageType

	RuleOperationErrors *ArrayOfRuleOperationErrorsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RuleOperationErrors,omitempty" json:"RuleOperationErrors,omitempty"`
}

type FindMailboxStatisticsByKeywordsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywords"`

	*BaseRequestType

	Mailboxes *ArrayOfUserMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Keywords *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Keywords,omitempty" json:"Keywords,omitempty"`

	Language string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Language,omitempty" json:"Language,omitempty"`

	Senders *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Senders,omitempty" json:"Senders,omitempty"`

	Recipients *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Recipients,omitempty" json:"Recipients,omitempty"`

	FromDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FromDate,omitempty" json:"FromDate,omitempty"`

	ToDate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ToDate,omitempty" json:"ToDate,omitempty"`

	MessageTypes *ArrayOfSearchItemKindsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MessageTypes,omitempty" json:"MessageTypes,omitempty"`

	SearchDumpster bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchDumpster,omitempty" json:"SearchDumpster,omitempty"`

	IncludePersonalArchive bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludePersonalArchive,omitempty" json:"IncludePersonalArchive,omitempty"`

	IncludeUnsearchableItems bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeUnsearchableItems,omitempty" json:"IncludeUnsearchableItems,omitempty"`
}

type FindMailboxStatisticsByKeywordsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywordsResponse"`

	*BaseResponseMessageType
}

type FindMailboxStatisticsByKeywordsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMailboxStatisticsByKeywordsResponseMessage"`

	*ResponseMessageType

	MailboxStatisticsSearchResult *MailboxStatisticsSearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxStatisticsSearchResult,omitempty" json:"MailboxStatisticsSearchResult,omitempty"`
}

type GetSearchableMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetSearchableMailboxes"`

	*BaseRequestType

	SearchFilter string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchFilter,omitempty" json:"SearchFilter,omitempty"`

	ExpandGroupMembership bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`
}

type GetSearchableMailboxesResponseMessageType struct {
	*ResponseMessageType

	SearchableMailboxes *ArrayOfSearchableMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchableMailboxes,omitempty" json:"SearchableMailboxes,omitempty"`

	FailedMailboxes *ArrayOfFailedSearchMailboxesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FailedMailboxes,omitempty" json:"FailedMailboxes,omitempty"`
}

type SearchMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxes"`

	*BaseRequestType

	SearchQueries *NonEmptyArrayOfMailboxQueriesType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchQueries,omitempty" json:"SearchQueries,omitempty"`

	ResultType *SearchResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResultType,omitempty" json:"ResultType,omitempty"`

	PreviewItemResponseShape *PreviewItemResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PreviewItemResponseShape,omitempty" json:"PreviewItemResponseShape,omitempty"`

	SortBy *FieldOrderType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortBy,omitempty" json:"SortBy,omitempty"`

	Language string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Language,omitempty" json:"Language,omitempty"`

	Deduplication bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Deduplication,omitempty" json:"Deduplication,omitempty"`

	PageSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageDirection,omitempty" json:"PageDirection,omitempty"`
}

type SearchMailboxesResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResponse"`

	*BaseResponseMessageType
}

type SearchMailboxesResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResponseMessage"`

	*ResponseMessageType

	SearchMailboxesResult *SearchMailboxesResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchMailboxesResult,omitempty" json:"SearchMailboxesResult,omitempty"`
}

type GetDiscoverySearchConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetDiscoverySearchConfiguration"`

	*BaseRequestType

	SearchId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchId,omitempty" json:"SearchId,omitempty"`

	ExpandGroupMembership bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExpandGroupMembership,omitempty" json:"ExpandGroupMembership,omitempty"`

	InPlaceHoldConfigurationOnly bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InPlaceHoldConfigurationOnly,omitempty" json:"InPlaceHoldConfigurationOnly,omitempty"`
}

type GetDiscoverySearchConfigurationResponseMessageType struct {
	*ResponseMessageType

	DiscoverySearchConfigurations *ArrayOfDiscoverySearchConfigurationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DiscoverySearchConfigurations,omitempty" json:"DiscoverySearchConfigurations,omitempty"`
}

type GetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetHoldOnMailboxes"`

	*BaseRequestType

	HoldId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HoldId,omitempty" json:"HoldId,omitempty"`
}

type GetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type SetHoldOnMailboxesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetHoldOnMailboxes"`

	*BaseRequestType

	ActionType *HoldActionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ActionType,omitempty" json:"ActionType,omitempty"`

	HoldId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HoldId,omitempty" json:"HoldId,omitempty"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Query,omitempty" json:"Query,omitempty"`

	Mailboxes *ArrayOfStringsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	Language string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Language,omitempty" json:"Language,omitempty"`

	IncludeNonIndexableItems bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeNonIndexableItems,omitempty" json:"IncludeNonIndexableItems,omitempty"`

	Deduplication bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Deduplication,omitempty" json:"Deduplication,omitempty"`

	InPlaceHoldIdentity string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InPlaceHoldIdentity,omitempty" json:"InPlaceHoldIdentity,omitempty"`

	ItemHoldPeriod string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemHoldPeriod,omitempty" json:"ItemHoldPeriod,omitempty"`
}

type SetHoldOnMailboxesResponseMessageType struct {
	*ResponseMessageType

	MailboxHoldResult *MailboxHoldResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxHoldResult,omitempty" json:"MailboxHoldResult,omitempty"`
}

type GetNonIndexableItemStatisticsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemStatistics"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	SearchArchiveOnly bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemStatisticsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemStatistics *ArrayOfNonIndexableItemStatisticsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages NonIndexableItemStatistics,omitempty" json:"NonIndexableItemStatistics,omitempty"`
}

type GetNonIndexableItemDetailsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetNonIndexableItemDetails"`

	*BaseRequestType

	Mailboxes *NonEmptyArrayOfLegacyDNsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Mailboxes,omitempty" json:"Mailboxes,omitempty"`

	PageSize int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageSize,omitempty" json:"PageSize,omitempty"`

	PageItemReference string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageItemReference,omitempty" json:"PageItemReference,omitempty"`

	PageDirection *SearchPageDirectionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PageDirection,omitempty" json:"PageDirection,omitempty"`

	SearchArchiveOnly bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchArchiveOnly,omitempty" json:"SearchArchiveOnly,omitempty"`
}

type GetNonIndexableItemDetailsResponseMessageType struct {
	*ResponseMessageType

	NonIndexableItemDetailsResult *NonIndexableItemDetailResultType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages NonIndexableItemDetailsResult,omitempty" json:"NonIndexableItemDetailsResult,omitempty"`
}

type MarkAllItemsAsReadType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAllItemsAsRead"`

	*BaseRequestType

	ReadFlag bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReadFlag,omitempty" json:"ReadFlag,omitempty"`

	SuppressReadReceipts bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuppressReadReceipts,omitempty" json:"SuppressReadReceipts,omitempty"`

	FolderIds *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FolderIds,omitempty" json:"FolderIds,omitempty"`
}

type MarkAllItemsAsReadResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAllItemsAsReadResponse"`

	*BaseResponseMessageType
}

type GetConversationItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItems"`

	*BaseRequestType

	ItemShape *ItemResponseShapeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemShape,omitempty" json:"ItemShape,omitempty"`

	FoldersToIgnore *NonEmptyArrayOfBaseFolderIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FoldersToIgnore,omitempty" json:"FoldersToIgnore,omitempty"`

	MaxItemsToReturn int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxItemsToReturn,omitempty" json:"MaxItemsToReturn,omitempty"`

	SortOrder *ConversationNodeSortOrder `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	MailboxScope *MailboxSearchLocationType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MailboxScope,omitempty" json:"MailboxScope,omitempty"`

	Conversations *ArrayOfConversationRequestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Conversations,omitempty" json:"Conversations,omitempty"`
}

type GetConversationItemsResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItemsResponseMessage"`

	*ResponseMessageType

	Conversation *ConversationResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Conversation,omitempty" json:"Conversation,omitempty"`
}

type GetConversationItemsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetConversationItemsResponse"`

	*BaseResponseMessageType
}

type GetOMEConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetOMEConfiguration"`

	*BaseRequestType
}

type OMEConfigurationResponseType struct {
	*ResponseMessageType

	Xml string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Xml,omitempty" json:"Xml,omitempty"`
}

type SetOMEConfigurationType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEConfiguration"`

	*BaseRequestType

	Xml string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Xml,omitempty" json:"Xml,omitempty"`
}

type SetOMEConfigurationResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetOMEConfigurationResponse"`

	*ResponseMessageType
}

type GetAppManifestsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppManifests"`

	*BaseRequestType

	ApiVersionSupported string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApiVersionSupported,omitempty" json:"ApiVersionSupported,omitempty"`

	SchemaVersionSupported string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SchemaVersionSupported,omitempty" json:"SchemaVersionSupported,omitempty"`

	IncludeAllInstalledAddIns bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeAllInstalledAddIns,omitempty" json:"IncludeAllInstalledAddIns,omitempty"`

	IncludeEntitlementData bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeEntitlementData,omitempty" json:"IncludeEntitlementData,omitempty"`

	IncludeManifestData bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeManifestData,omitempty" json:"IncludeManifestData,omitempty"`

	IncludeCustomAppsData bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeCustomAppsData,omitempty" json:"IncludeCustomAppsData,omitempty"`

	ExtensionIds *ListOfExtensionIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExtensionIds,omitempty" json:"ExtensionIds,omitempty"`

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddIns,omitempty" json:"AddIns,omitempty"`
}

type GetAppManifestsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppManifestsResponse"`

	*ResponseMessageType

	Apps *ArrayOfAppsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Apps,omitempty" json:"Apps,omitempty"`

	Manifests *ArrayOfAppManifestsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Manifests,omitempty" json:"Manifests,omitempty"`
}

type ArrayOfAppManifestsType struct {
	Manifest [][]byte `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Manifest,omitempty" json:"Manifest,omitempty"`
}

type GetAppMarketplaceUrlType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetAppMarketplaceUrl"`

	*BaseRequestType
}

type GetAppMarketplaceUrlResponseMessageType struct {
	*ResponseMessageType

	AppMarketplaceUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AppMarketplaceUrl,omitempty" json:"AppMarketplaceUrl,omitempty"`

	ConnectorsManagementUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConnectorsManagementUrl,omitempty" json:"ConnectorsManagementUrl,omitempty"`
}

type MarkAsJunkType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunk"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`

	IsJunk bool `xml:"IsJunk,attr,omitempty" json:"IsJunk,omitempty"`

	MoveItem bool `xml:"MoveItem,attr,omitempty" json:"MoveItem,omitempty"`
}

type MarkAsJunkResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunkResponse"`

	*BaseResponseMessageType
}

type MarkAsJunkResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarkAsJunkResponseMessage"`

	*ResponseMessageType
}

type ReportMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessage"`

	*BaseRequestType

	ItemIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemIds,omitempty" json:"ItemIds,omitempty"`

	ReportAction *ReportMessageActionType `xml:"ReportAction,attr,omitempty" json:"ReportAction,omitempty"`
}

type ReportMessageResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessageResponse"`

	*BaseResponseMessageType
}

type ReportMessageResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReportMessageResponseMessage"`

	*ResponseMessageType
}

type InstallAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InstallApp"`

	*BaseRequestType

	Manifest []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Manifest,omitempty" json:"Manifest,omitempty"`

	MarketplaceAssetId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarketplaceAssetId,omitempty" json:"MarketplaceAssetId,omitempty"`

	MarketplaceContentMarket string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarketplaceContentMarket,omitempty" json:"MarketplaceContentMarket,omitempty"`

	SendWelcomeEmail bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SendWelcomeEmail,omitempty" json:"SendWelcomeEmail,omitempty"`

	ManifestUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ManifestUrl,omitempty" json:"ManifestUrl,omitempty"`

	MarketplaceCorrelationId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MarketplaceCorrelationId,omitempty" json:"MarketplaceCorrelationId,omitempty"`

	CampaignId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CampaignId,omitempty" json:"CampaignId,omitempty"`
}

type InstallAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages InstallAppResponse"`

	*ResponseMessageType

	WasFirstInstall bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages WasFirstInstall,omitempty" json:"WasFirstInstall,omitempty"`

	Extension *InstalledAppType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Extension,omitempty" json:"Extension,omitempty"`
}

type UninstallAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UninstallApp"`

	*BaseRequestType

	ID string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ID,omitempty" json:"ID,omitempty"`
}

type UninstallAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UninstallAppResponse"`

	*ResponseMessageType
}

type DisableAppType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisableApp"`

	*BaseRequestType

	ID string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ID,omitempty" json:"ID,omitempty"`

	DisableReason *DisableReasonType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisableReason,omitempty" json:"DisableReason,omitempty"`
}

type DisableAppResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisableAppResponse"`

	*ResponseMessageType
}

type AddNewImContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewImContactToGroup"`

	*BaseRequestType

	ImAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImAddress,omitempty" json:"ImAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisplayName,omitempty" json:"DisplayName,omitempty"`

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewImContactToGroupResponseMessageType struct {
	*ResponseMessageType

	Persona *PersonaType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Persona,omitempty" json:"Persona,omitempty"`
}

type AddNewTelUriContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddNewTelUriContactToGroup"`

	*BaseRequestType

	TelUriAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TelUriAddress,omitempty" json:"TelUriAddress,omitempty"`

	ImContactSipUriAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImContactSipUriAddress,omitempty" json:"ImContactSipUriAddress,omitempty"`

	ImTelephoneNumber *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImTelephoneNumber,omitempty" json:"ImTelephoneNumber,omitempty"`

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddNewTelUriContactToGroupResponseMessageType struct {
	*ResponseMessageType

	Persona *PersonaType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Persona,omitempty" json:"Persona,omitempty"`
}

type AddImContactToGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImContactToGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type AddImContactToGroupResponseMessageType struct {
	*ResponseMessageType
}

type RemoveImContactFromGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImContactFromGroup"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactId,omitempty" json:"ContactId,omitempty"`

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImContactFromGroupResponseMessageType struct {
	*ResponseMessageType
}

type AddImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddImGroup"`

	*BaseRequestType

	DisplayName *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddImGroupResponseMessageType struct {
	*ResponseMessageType

	ImGroup *ImGroupType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type AddDistributionGroupToImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddDistributionGroupToImList"`

	*BaseRequestType

	SmtpAddress *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SmtpAddress,omitempty" json:"SmtpAddress,omitempty"`

	DisplayName *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DisplayName,omitempty" json:"DisplayName,omitempty"`
}

type AddDistributionGroupToImListResponseMessageType struct {
	*ResponseMessageType

	ImGroup *ImGroupType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImGroup,omitempty" json:"ImGroup,omitempty"`
}

type GetImItemListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItemList"`

	*BaseRequestType

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemListResponseMessageType struct {
	*ResponseMessageType

	ImItemList *ImItemListType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type GetImItemsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetImItems"`

	*BaseRequestType

	ContactIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactIds,omitempty" json:"ContactIds,omitempty"`

	GroupIds *NonEmptyArrayOfBaseItemIdsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupIds,omitempty" json:"GroupIds,omitempty"`

	ExtendedProperties *NonEmptyArrayOfExtendedFieldURIs `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExtendedProperties,omitempty" json:"ExtendedProperties,omitempty"`
}

type GetImItemsResponseMessageType struct {
	*ResponseMessageType

	ImItemList *ImItemListType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImItemList,omitempty" json:"ImItemList,omitempty"`
}

type RemoveContactFromImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveContactFromImList"`

	*BaseRequestType

	ContactId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContactId,omitempty" json:"ContactId,omitempty"`
}

type RemoveContactFromImListResponseMessageType struct {
	*ResponseMessageType
}

type RemoveDistributionGroupFromImListType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveDistributionGroupFromImList"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveDistributionGroupFromImListResponseMessageType struct {
	*ResponseMessageType
}

type RemoveImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RemoveImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`
}

type RemoveImGroupResponseMessageType struct {
	*ResponseMessageType
}

type SetImGroupType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImGroup"`

	*BaseRequestType

	GroupId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GroupId,omitempty" json:"GroupId,omitempty"`

	NewDisplayName *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages NewDisplayName,omitempty" json:"NewDisplayName,omitempty"`
}

type SetImGroupResponseMessageType struct {
	*ResponseMessageType
}

type SetImListMigrationCompletedType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetImListMigrationCompleted"`

	*BaseRequestType

	ImListMigrationCompleted bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ImListMigrationCompleted,omitempty" json:"ImListMigrationCompleted,omitempty"`
}

type SetImListMigrationCompletedResponseMessageType struct {
	*ResponseMessageType
}

type GetUserRetentionPolicyTagsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserRetentionPolicyTags"`

	*BaseRequestType
}

type GetUserRetentionPolicyTagsResponseMessageType struct {
	*ResponseMessageType

	RetentionPolicyTags *ArrayOfRetentionPolicyTagsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RetentionPolicyTags,omitempty" json:"RetentionPolicyTags,omitempty"`
}

type GetUserPhotoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetUserPhoto"`

	*BaseRequestType

	Email string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Email,omitempty" json:"Email,omitempty"`

	SizeRequested *UserPhotoSizeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SizeRequested,omitempty" json:"SizeRequested,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type GetUserPhotoResponseMessageType struct {
	*ResponseMessageType

	HasChanged bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages HasChanged,omitempty" json:"HasChanged,omitempty"`

	PictureData []byte `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PictureData,omitempty" json:"PictureData,omitempty"`
}

type GetUserPhotoResponseType struct {
	*BaseResponseMessageType
}

type GetMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingSpace"`

	*BaseRequestType

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type CreateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type UpdateMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingSpaceResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type FindMeetingSpaceByJoinUrlType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingSpaceByJoinUrl"`

	*BaseRequestType

	JoinUrl string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages JoinUrl,omitempty" json:"JoinUrl,omitempty"`
}

type FindMeetingSpaceByJoinUrlResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingSpaceByJoinUrlResponseMessage"`

	*ResponseMessageType

	MeetingSpace *MeetingSpaceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingSpace,omitempty" json:"MeetingSpace,omitempty"`
}

type DeleteMeetingSpaceType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingSpace"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingSpaceResponseMessageType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingSpaceResponseMessage"`

	*ResponseMessageType
}

type GetMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`
}

type GetMeetingInstanceResponseMessageType struct {
	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CreateMeetingInstanceRequest"`

	*BaseRequestType

	MeetingInstance *MeetingInstanceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type CreateMeetingInstanceResponseMessageType struct {
	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type UpdateMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages UpdateMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`

	MeetingInstance *MeetingInstanceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`

	ContentActivitiesToAdd *NonEmptyArrayOfContentActivities `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ContentActivitiesToAdd,omitempty" json:"ContentActivitiesToAdd,omitempty"`

	ParticipantActivitiesToAdd *NonEmptyArrayOfParticipantActivities `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ParticipantActivitiesToAdd,omitempty" json:"ParticipantActivitiesToAdd,omitempty"`
}

type UpdateMeetingInstanceResponseMessageType struct {
	*ResponseMessageType

	MeetingInstance *MeetingInstanceType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingInstance,omitempty" json:"MeetingInstance,omitempty"`
}

type DeleteMeetingInstanceRequestType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages DeleteMeetingInstanceRequest"`

	*BaseRequestType

	ItemId *ItemIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemId,omitempty" json:"ItemId,omitempty"`
}

type DeleteMeetingInstanceResponseMessageType struct {
	*ResponseMessageType
}

type SetUserPhotoType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SetUserPhoto"`

	*BaseRequestType

	Email *NonEmptyStringType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Email,omitempty" json:"Email,omitempty"`

	Content string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Content,omitempty" json:"Content,omitempty"`

	TypeRequested *UserPhotoTypeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages TypeRequested,omitempty" json:"TypeRequested,omitempty"`
}

type SetUserPhotoResponseMessageType struct {
	*BaseResponseMessageType
}

type RegisterConsentType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RegisterConsent"`

	*BaseRequestType

	Id string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Id,omitempty" json:"Id,omitempty"`

	ConsentState *ConsentStateType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ConsentState,omitempty" json:"ConsentState,omitempty"`
}

type RegisterConsentResponseMessageType struct {
	*ResponseMessageType
}

type FindAvailableMeetingTimesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindAvailableMeetingTimes"`

	*BaseRequestType

	Attendees *ArrayOfSmtpAddressType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Attendees,omitempty" json:"Attendees,omitempty"`

	SearchWindowStart xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchWindowStart,omitempty" json:"SearchWindowStart,omitempty"`

	SearchWindowDuration *Duration `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchWindowDuration,omitempty" json:"SearchWindowDuration,omitempty"`

	MeetingDurationInMinutes int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingDurationInMinutes,omitempty" json:"MeetingDurationInMinutes,omitempty"`

	Location string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Location,omitempty" json:"Location,omitempty"`

	MaxCandidates int32 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxCandidates,omitempty" json:"MaxCandidates,omitempty"`

	ActivityDomain *ActivityDomainType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ActivityDomain,omitempty" json:"ActivityDomain,omitempty"`
}

type FindAvailableMeetingTimesResponseMessageType struct {
	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`

	EmptySuggestionsHint *EmptySuggestionReason `xml:"http://schemas.microsoft.com/exchange/services/2006/messages EmptySuggestionsHint,omitempty" json:"EmptySuggestionsHint,omitempty"`
}

type FindMeetingTimeCandidatesType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages FindMeetingTimeCandidates"`

	*BaseRequestType

	AttendeeConstraints *FindMeetingTimesAttendeeConstraints `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AttendeeConstraints,omitempty" json:"AttendeeConstraints,omitempty"`

	LocationConstraints *FindMeetingTimesLocationConstraints `xml:"http://schemas.microsoft.com/exchange/services/2006/messages LocationConstraints,omitempty" json:"LocationConstraints,omitempty"`

	SearchConstraints *FindMeetingTimesSearchConstraints `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchConstraints,omitempty" json:"SearchConstraints,omitempty"`

	Constraints *FindMeetingTimesConstraints `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Constraints,omitempty" json:"Constraints,omitempty"`
}

type FindMeetingTimeCandidatesResponseMessageType struct {
	*ResponseMessageType

	MeetingTimeCandidates *ArrayOfMeetingTimeCandidate `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MeetingTimeCandidates,omitempty" json:"MeetingTimeCandidates,omitempty"`
}

type StartSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	WarmupOptions *WarmupOptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages WarmupOptions,omitempty" json:"WarmupOptions,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchScope,omitempty" json:"SearchScope,omitempty"`

	IdFormat *IdFormatType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IdFormat,omitempty" json:"IdFormat,omitempty"`

	ApplicationId string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Scenario,omitempty" json:"Scenario,omitempty"`
}

type StartSearchSessionResponseMessage struct {
	*ResponseMessageType
}

type GetSearchSuggestions struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SuggestionsPrimer bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionsPrimer,omitempty" json:"SuggestionsPrimer,omitempty"`

	MaxSuggestionsCountPerSuggestionType int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxSuggestionsCountPerSuggestionType,omitempty" json:"MaxSuggestionsCountPerSuggestionType,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Scenario,omitempty" json:"Scenario,omitempty"`
}

type GetSearchSuggestionsResponseMessage struct {
	*ResponseMessageType

	SearchSuggestions *SearchSuggestionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSuggestions,omitempty" json:"SearchSuggestions,omitempty"`
}

type DeleteSearchSuggestion struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Query,omitempty" json:"Query,omitempty"`

	SuggestionTypes *SuggestionKindType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SuggestionTypes,omitempty" json:"SuggestionTypes,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchScope,omitempty" json:"SearchScope,omitempty"`

	Scenario string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Scenario,omitempty" json:"Scenario,omitempty"`
}

type DeleteSearchSuggestionResponseMessageType struct {
	*ResponseMessageType

	Response *DeleteSearchSuggestionResponseType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Response,omitempty" json:"Response,omitempty"`
}

type ExecuteSearch struct {
	*BaseRequestType

	ApplicationId *SearchApplicationIdType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ApplicationId,omitempty" json:"ApplicationId,omitempty"`

	Scenario string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Scenario,omitempty" json:"Scenario,omitempty"`

	SearchSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`

	SearchScope *ArrayOfSearchScopeType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchScope,omitempty" json:"SearchScope,omitempty"`

	Query string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Query,omitempty" json:"Query,omitempty"`

	AnalyzedQuery *AnalyzedQuery `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AnalyzedQuery,omitempty" json:"AnalyzedQuery,omitempty"`

	ResultRowCount int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResultRowCount,omitempty" json:"ResultRowCount,omitempty"`

	ResultRowOffset int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ResultRowOffset,omitempty" json:"ResultRowOffset,omitempty"`

	MaxResultsCountHint int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxResultsCountHint,omitempty" json:"MaxResultsCountHint,omitempty"`

	MaxPreviewLength int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxPreviewLength,omitempty" json:"MaxPreviewLength,omitempty"`

	SearchRefiners struct {
		SearchRefiner []*DynamicRefinerQueryType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchRefiner,omitempty" json:"SearchRefiner,omitempty"`
	} `SearchRefiners,omitempty" json:"SearchRefiners,omitempty"`

	ExtendedKeywords struct {
		ExtendedKeywordDefinition []*ExtendedKeywordDefinitionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ExtendedKeywordDefinition,omitempty" json:"ExtendedKeywordDefinition,omitempty"`
	} `ExtendedKeywords,omitempty" json:"ExtendedKeywords,omitempty"`

	RetrieveRefiners bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages RetrieveRefiners,omitempty" json:"RetrieveRefiners,omitempty"`

	MaxRefinersCountPerRefinerType int64 `xml:"http://schemas.microsoft.com/exchange/services/2006/messages MaxRefinersCountPerRefinerType,omitempty" json:"MaxRefinersCountPerRefinerType,omitempty"`

	IdFormat *IdFormatType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IdFormat,omitempty" json:"IdFormat,omitempty"`

	ItemTypes *ItemTypesFilterType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ItemTypes,omitempty" json:"ItemTypes,omitempty"`

	PropertySetName *SearchResultsPropertySetNameType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages PropertySetName,omitempty" json:"PropertySetName,omitempty"`

	SearchRestrictions *RestrictionType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchRestrictions,omitempty" json:"SearchRestrictions,omitempty"`

	IncludeDeleted bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages IncludeDeleted,omitempty" json:"IncludeDeleted,omitempty"`

	SortOrder *ExecuteSearchSortOrderType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SortOrder,omitempty" json:"SortOrder,omitempty"`

	KeywordMatchOption *MatchOptionsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages KeywordMatchOption,omitempty" json:"KeywordMatchOption,omitempty"`

	ReturnAdditionalIds bool `xml:"http://schemas.microsoft.com/exchange/services/2006/messages ReturnAdditionalIds,omitempty" json:"ReturnAdditionalIds,omitempty"`
}

type ExecuteSearchResponseMessage struct {
	*ResponseMessageType

	SearchResults *SearchResultsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchResults,omitempty" json:"SearchResults,omitempty"`
}

type EndSearchSession struct {
	*BaseRequestType

	SearchSessionId *GuidType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages SearchSessionId,omitempty" json:"SearchSessionId,omitempty"`
}

type EndSearchSessionResponseMessage struct {
	*ResponseMessageType
}

type GetLastPrivateCatalogUpdateType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetLastPrivateCatalogUpdate"`

	*BaseRequestType

	Client *OfficeClientType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Client,omitempty" json:"Client,omitempty"`
}

type GetLastPrivateCatalogUpdateResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetLastPrivateCatalogUpdateResponse"`

	*ResponseMessageType

	LastUpdate xsd.DateTime `xml:"http://schemas.microsoft.com/exchange/services/2006/messages LastUpdate,omitempty" json:"LastUpdate,omitempty"`

	CatalogHash string `xml:"http://schemas.microsoft.com/exchange/services/2006/messages CatalogHash,omitempty" json:"CatalogHash,omitempty"`
}

type GetPrivateCatalogAddInsType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPrivateCatalogAddIns"`

	*BaseRequestType

	Client *OfficeClientType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages Client,omitempty" json:"Client,omitempty"`
}

type GetPrivateCatalogAddInsResponseType struct {
	XMLName xml.Name `xml:"http://schemas.microsoft.com/exchange/services/2006/messages GetPrivateCatalogAddInsResponse"`

	*ResponseMessageType

	AddIns *ArrayOfPrivateCatalogAddInsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddIns,omitempty" json:"AddIns,omitempty"`
}

type ArrayOfPrivateCatalogAddInsType struct {
	AddIn []*PrivateCatalogAddInsType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages AddIn,omitempty" json:"AddIn,omitempty"`
}

type PrivateCatalogAddInsType struct {
	StoreInfo *PrivateCatalogAddInStoreInfoType `xml:"http://schemas.microsoft.com/exchange/services/2006/messages StoreInfo,omitempty" json:"StoreInfo,omitempty"`

	ProductId string `xml:"ProductId,attr,omitempty" json:"ProductId,omitempty"`

	State *AddInStateType `xml:"State,attr,omitempty" json:"State,omitempty"`

	Version *VersionType `xml:"Version,attr,omitempty" json:"Version,omitempty"`
}

type PrivateCatalogAddInStoreInfoType struct {
	AssetId string `xml:"AssetId,attr,omitempty" json:"AssetId,omitempty"`

	ContentMarket string `xml:"ContentMarket,attr,omitempty" json:"ContentMarket,omitempty"`
}
